//CopyRight Dustin Nelson 2010. Please do not distribute
//http://www.creativecrash.com/maya/marketplace/scripts-plugins/character/c/-rapid-rig-advanced-auto-rig-for-maya--2/
//Script for BiPed Character Rigging.
//VERSION 1.2.5
//FILE IS NOT INTENDED TO BE HARMFUL, HOWEVER USE AT YOUR OWN RISK
/*////////////////////////////////////////////////////////////////////////
//                                                                      //
//	INSTRUCTIONS:                                                       //
//	1. INSTALLATION                                                     //
//	ON A MAC:                                                           //
//	Put the script DSN_RapidRig.mel in the following path:              //
//	Users/YourUser/Library/Preferences/Autodesk/maya/scripts/           //
//				                                                        //
//	ON A PC:                                                            //
//	Put the script DSN_RapidRig.mel in the following path:              //
//	C:/Users/YourUser/Documents/maya/scripts/                           //
//                                                                      //
//	2. START UP MAYA, ENTER THE FOLLOWING COMMAND INTO                  //
//	THE COMMAND LINE OR THE SCRIPT EDITOR:                              //
//                                                                      //
//	DSN_RapidRig                                                        //
//                                                                      //
//	3. TO HAVE EASY ACCESS TO SCRIPT, CREATE A SHELF BUTTON             //
//	WITH ONLY THAT COMMAND. EVERY TIME YOU HIT THE BUTTON,              //
//	THE RAPID RIG INTERFACE WILL POP UP. HAPPY ANIMATING!               //
//                                                                      //
////////////////////////////////////////////////////////////////////////*/
global string $DSN_BiPed;
global string $thumbsG;
global string $fingersG;
global string $toesG;
global string $geoG;
global string $charName;

global proc createDummies()
{
	
		global string $charName;
string $name = `textField -q -text $charName`;

if (`objExists  DSN_MAIN`) 
	{
	error "RIG ALREADY IN PROGRESS! NO ACTION TAKEN.\n";
	}
//else if (`objExists  {$name + "_MainC")`)
//	{
//	error "A RIG ALREADY EXISTS IN THIS SCENE. NO ACTION TAKEN.\n";
//	}
else
{
//SET UNITS TO CENTIMETERS
string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}

global string $thumbsG;
$thumbsOn = `checkBox -q -v thumbsOn`;

global string $fingersG;
int $fingersNum = `intSliderGrp -q -v $fingersG`;

global string $toesG;
int $toesNum = `intSliderGrp -q -v $toesG`;
	
//CREATE JOINT BASE
circle -n DSN_MAIN -nr 0 1 0 -sw 360 -r 8 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
curve -n DSN_Arrow1 -d 1 -p 3 0 8 -p 3 0 9 -p 5 0 9 -p 0 0 12 -p -5 0 9 -p -3 0 9 -p -3 0 8 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 ;
pickWalk -d down;
rename DSN_Arrow1Shape;
circle -n DSN_Outer1 -nr 0 1 0 -sw 48.9 -r 8.545 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
rotate -r 0 110.55 0 DSN_Outer1;
duplicate -rr DSN_Arrow1 DSN_Outer1;
rotate -r 0 90 0 DSN_Arrow2 DSN_Outer2;
duplicate -rr DSN_Arrow1 DSN_Outer1;
rotate -r 0 180 0 DSN_Arrow3 DSN_Outer3;
duplicate -rr DSN_Arrow1 DSN_Outer1;
rotate -r 0 270 0 DSN_Arrow4 DSN_Outer4;
makeIdentity -apply true -r 1 DSN_MAIN DSN_Arrow1 DSN_Outer1 DSN_Arrow2 DSN_Outer2 DSN_Arrow3 DSN_Outer3 DSN_Arrow4 DSN_Outer4 ;
parent -r -s DSN_Arrow1Shape DSN_Outer1Shape DSN_Arrow2Shape DSN_Outer2Shape DSN_Arrow3Shape DSN_Outer3Shape DSN_Arrow4Shape DSN_Outer4Shape DSN_MAIN;
delete DSN_Arrow1 DSN_Outer1 DSN_Arrow2 DSN_Outer2 DSN_Arrow3 DSN_Outer3 DSN_Arrow4 DSN_Outer4 ;
move -r 0 0 2 DSN_Arrow1Shape.cv[3] ;
setAttr DSN_Outer1Shape.v 0;
setAttr DSN_Outer2Shape.v 0;
setAttr DSN_Outer3Shape.v 0;
setAttr DSN_Outer4Shape.v 0;
setAttr DSN_Arrow1Shape.v 0;
setAttr DSN_Arrow2Shape.v 0;
setAttr DSN_Arrow3Shape.v 0;
setAttr DSN_Arrow4Shape.v 0;

circle -n DSN_ROOT -c 0 0 0 -nr 0 1 0 -sw 360 -r 0.25 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
duplicate -rr -n DSN_ROOTB;
rotate 90 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_ROOTC;
rotate 0 90 0 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
parent -r -s DSN_ROOTBShape DSN_ROOTCShape DSN_ROOT;
delete DSN_ROOTB DSN_ROOTC;
select DSN_ROOT;
move -r -os -wd 0 15.25 0;
scale -r 1.6 1.6 1.6;
makeIdentity -apply true -t 1 -r 1 -s 1;
delete -ch;

//SPINE JOINTS
duplicate -rr -n DSN_Spine01;
group -n DSN_Spine01G;
CenterPivot;
scale -r 0.625 0.625 0.625;
move -r -os -wd 0 1.65 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_Spine02G;
pickWalk -d down;
rename "DSN_Spine02";
pickWalk -d up;
move -r -os -wd 0 1.65 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_Spine03G;
pickWalk -d down;
rename "DSN_Spine03";
pickWalk -d up;
move -r -os -wd 0 1.65 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_Spine04G;
pickWalk -d down;
rename "DSN_Spine04";
pickWalk -d up;
ungroup;
scale -r 1.6 1.6 1.6;
move -r -os -wd 0 1.65 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_Neck;
scale -r 0.625 0.625 0.625;
move -r -os -wd 0 1.65 0;
makeIdentity -apply true -t 1 -r 1 -s 1;

//NECK AND HEAD JOINTS
duplicate -rr -n DSN_Head;
move -r -os -wd 0 0.9 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_Jaw;
move -r -os -wd 0 0.83 0.38;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_JawTip;
move -r -os -wd 0 -0.83 1.52;
makeIdentity -apply true -t 1 -r 1 -s 1;
select DSN_Head;
duplicate -rr -n DSN_HeadTip;
move -r -os -wd 0 3.38 0;
makeIdentity -apply true -t 1 -r 1 -s 1;

//LEFT EYE
duplicate -rr -n DSN_lEye DSN_Head;
move -r -os -wd 0.57 1.53 1.64 DSN_lEye;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_lEye;

//RIGHT EYE
duplicate -rr -n DSN_rEye DSN_Head;
move -r -os -wd -0.57 1.53 1.64 DSN_rEye;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_rEye;


//LEFT ARM//////////////////////////////////
select DSN_Spine04;
duplicate -rr -n DSN_lClavicle;
scale -r 0.625 0.625 0.625;
move -r -os -wd 1.25 0.5 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lShoulder;
move -r -os -wd 1.7 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lElbow;
move -r -os -wd 3.5 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
curve -n DSN_lElbowAim -d 1 -p -0.25 0 0 -p -0.25 0 -1 -p -0.5 0 -1 -p 0 0 -1.5 -p 0.5 0 -1 -p 0.25 0 -1 -p 0.25 0 0-k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 ;
select DSN_lElbow DSN_lElbowAim;
pointConstraint;
delete DSN_lElbowAim_pointConstraint1;
makeIdentity -apply true -t 1 -r 1 -s 1;
select DSN_lElbowAim;
pickWalk -d down;
select -add DSN_lElbow;
parent -r -s;
delete DSN_lElbowAim;



//LEFT HAND

//LEFT WRIST
circle -n DSN_lWrist -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
circle -n DSN_lWrist2 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
circle -n DSN_lWrist3 -nr 0 0 1 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
curve -n DSN_lWrist4 -d 1 -p 0 -1 0 -p 0 3 0 -k 0 -k 1 ;
curve -n DSN_lWrist5 -d 1 -p 0 2.5 0.5 -p 0 3 0 -p 0 2.5 -0.5 -k 0 -k 1 -k 2 ;
curve -n DSN_lWrist6 -d 1 -p -0.5 2.5 0 -p 0 3 0 -p 0.5 2.5 0 -k 0 -k 1 -k 2 ;
circle -n DSN_lWrist7 -c 0 2.5 0 -nr 0 1 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;

select DSN_lWrist2 DSN_lWrist3 DSN_lWrist4 DSN_lWrist5 DSN_lWrist6 DSN_lWrist7;
pickWalk -d down;
select -add DSN_lWrist;


parent -r -s;
delete DSN_lWrist2 DSN_lWrist3 DSN_lWrist4 DSN_lWrist5 DSN_lWrist6 DSN_lWrist7;
select DSN_lWrist;
scale -r 0.25 0.25 0.25;
makeIdentity -apply true -t 1 -r 1 -s 1;
select -add DSN_MAIN;
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent-w;
pointConstraint DSN_lElbow DSN_lWrist;
delete DSN_lWrist_pointConstraint1;
select DSN_lWrist;
move -r -os -wd 3.5 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;

if ($thumbsOn == 1)
{
duplicate -rr -n DSN_lThumbJ1;
move -r -os -wd 0.45 0 0.51;
scale 0.75 0.75 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lThumbJ2;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lThumbJ3;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lThumbJTip;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
}

//LEFT FINGERS

select DSN_lWrist;
duplicate -rr -n DSN_lFinger1J1 DSN_lWrist;
move -r -os -wd 1.47 0 0 ;
scale 0.62 0.62 0.62 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lFinger1J2;
move -r -os -wd 0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lFinger1J3;
move -r -os -wd 0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lFinger1JTip;
move -r -os -wd 0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
parent DSN_lFinger1J1 DSN_lWrist;
parent DSN_lFinger1J2 DSN_lFinger1J1;
parent DSN_lFinger1J3 DSN_lFinger1J2;
parent DSN_lFinger1JTip DSN_lFinger1J3;

if ($fingersNum >= 2)
{
duplicate -rr -n DSN_lFinger2J1 DSN_lFinger1J1;
move -r -os -wd 0 0 0.5 DSN_lFinger1J1;
move -r -os -wd 0 0 -0.5 DSN_lFinger2J1;
rename "DSN_lFinger2J1|DSN_lFinger1J2" "DSN_lFinger2J2";
rename "DSN_lFinger2J1|DSN_lFinger2J2|DSN_lFinger1J3" "DSN_lFinger2J3";
rename "DSN_lFinger2J1|DSN_lFinger2J2|DSN_lFinger2J3|DSN_lFinger1JTip" "DSN_lFinger2JTip";
}

if ($fingersNum >= 3)
{
duplicate -rr -n DSN_lFinger3J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -1 DSN_lFinger3J1;
move -r -os -wd 0 0 0.5 DSN_lFinger2J1;
rename "DSN_lFinger3J1|DSN_lFinger1J2" "DSN_lFinger3J2";
rename "DSN_lFinger3J1|DSN_lFinger3J2|DSN_lFinger1J3" "DSN_lFinger3J3";
rename "DSN_lFinger3J1|DSN_lFinger3J2|DSN_lFinger3J3|DSN_lFinger1JTip" "DSN_lFinger3JTip";
}

if ($fingersNum >= 4)
{
duplicate -rr -n DSN_lFinger4J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -1.5 DSN_lFinger4J1;
move -r -os -wd 0 0 .125 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1;
rename "DSN_lFinger4J1|DSN_lFinger1J2" "DSN_lFinger4J2";
rename "DSN_lFinger4J1|DSN_lFinger4J2|DSN_lFinger1J3" "DSN_lFinger4J3";
rename "DSN_lFinger4J1|DSN_lFinger4J2|DSN_lFinger4J3|DSN_lFinger1JTip" "DSN_lFinger4JTip";
}

if ($fingersNum >= 5)
{
duplicate -rr -n DSN_lFinger5J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -2 DSN_lFinger5J1;
move -r -os -wd 0 0 .25 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1;
rename "DSN_lFinger5J1|DSN_lFinger1J2" "DSN_lFinger5J2";
rename "DSN_lFinger5J1|DSN_lFinger5J2|DSN_lFinger1J3" "DSN_lFinger5J3";
rename "DSN_lFinger5J1|DSN_lFinger5J2|DSN_lFinger5J3|DSN_lFinger1JTip" "DSN_lFinger5JTip";
}

if ($fingersNum >= 6)
{
duplicate -rr -n DSN_lFinger6J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -2.5 DSN_lFinger6J1;
move -r -os -wd 0 0 .2 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1 DSN_lFinger6J1;
rename "DSN_lFinger6J1|DSN_lFinger1J2" "DSN_lFinger6J2";
rename "DSN_lFinger6J1|DSN_lFinger6J2|DSN_lFinger1J3" "DSN_lFinger6J3";
rename "DSN_lFinger6J1|DSN_lFinger6J2|DSN_lFinger6J3|DSN_lFinger1JTip" "DSN_lFinger6JTip";
}

if ($fingersNum >= 7)
{
duplicate -rr -n DSN_lFinger7J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -3 DSN_lFinger7J1;
move -r -os -wd 0 0 .25 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1 DSN_lFinger6J1 DSN_lFinger7J1;
rename "DSN_lFinger7J1|DSN_lFinger1J2" "DSN_lFinger7J2";
rename "DSN_lFinger7J1|DSN_lFinger7J2|DSN_lFinger1J3" "DSN_lFinger7J3";
rename "DSN_lFinger7J1|DSN_lFinger7J2|DSN_lFinger7J3|DSN_lFinger1JTip" "DSN_lFinger7JTip";
}

if ($fingersNum >= 8)
{
duplicate -rr -n DSN_lFinger8J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -3.5 DSN_lFinger8J1;
move -r -os -wd 0 0 .25 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1 DSN_lFinger6J1 DSN_lFinger7J1 DSN_lFinger8J1;
rename "DSN_lFinger8J1|DSN_lFinger1J2" "DSN_lFinger8J2";
rename "DSN_lFinger8J1|DSN_lFinger8J2|DSN_lFinger1J3" "DSN_lFinger8J3";
rename "DSN_lFinger8J1|DSN_lFinger8J2|DSN_lFinger8J3|DSN_lFinger1JTip" "DSN_lFinger8JTip";
}

if ($fingersNum >= 9)

{
duplicate -rr -n DSN_lFinger9J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -4 DSN_lFinger9J1;
move -r -os -wd 0 0 .25 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1 DSN_lFinger6J1 DSN_lFinger7J1 DSN_lFinger8J1 DSN_lFinger9J1;
rename "DSN_lFinger9J1|DSN_lFinger1J2" "DSN_lFinger9J2";
rename "DSN_lFinger9J1|DSN_lFinger9J2|DSN_lFinger1J3" "DSN_lFinger9J3";
rename "DSN_lFinger9J1|DSN_lFinger9J2|DSN_lFinger9J3|DSN_lFinger1JTip" "DSN_lFinger9JTip";
}

if ($fingersNum >= 10)
{
duplicate -rr -n DSN_lFinger10J1 DSN_lFinger1J1;
move -r -os -wd 0 0 -4.5 DSN_lFinger10J1;
move -r -os -wd 0 0 .25 DSN_lFinger1J1 DSN_lFinger2J1 DSN_lFinger3J1 DSN_lFinger4J1
DSN_lFinger5J1 DSN_lFinger6J1 DSN_lFinger7J1 DSN_lFinger8J1 DSN_lFinger9J1 DSN_lFinger10J1;
rename "DSN_lFinger10J1|DSN_lFinger1J2" "DSN_lFinger10J2";
rename "DSN_lFinger10J1|DSN_lFinger10J2|DSN_lFinger1J3" "DSN_lFinger10J3";
rename "DSN_lFinger10J1|DSN_lFinger10J2|DSN_lFinger10J3|DSN_lFinger1JTip" "DSN_lFinger10JTip";
}

if ($thumbsOn == 1)
{
parent DSN_lThumbJ1 DSN_lWrist;
parent DSN_lThumbJ2 DSN_lThumbJ1;
parent DSN_lThumbJ3 DSN_lThumbJ2;
parent DSN_lThumbJTip DSN_lThumbJ3;
}
select DSN_lWrist;
makeIdentity -apply true -t 1 -r 1 -s 1;


//RIGHT ARM//////////////////////////////////
select DSN_Spine04;
duplicate -rr -n DSN_rClavicle;
scale -r 0.625 0.625 0.625;
move -r -os -wd -1.25 0.5 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rShoulder;
move -r -os -wd -1.7 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rElbow;
move -r -os -wd -3.5 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
curve -n DSN_rElbowAim -d 1 -p -0.25 0 0 -p -0.25 0 -1 -p -0.5 0 -1 -p 0 0 -1.5 -p 0.5 0 -1 -p 0.25 0 -1 -p 0.25 0 0-k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 ;
select DSN_rElbow DSN_rElbowAim;
pointConstraint;
delete DSN_rElbowAim_pointConstraint1;
makeIdentity -apply true -t 1 -r 1 -s 1;
select DSN_rElbowAim;
pickWalk -d down;
select -add DSN_rElbow;
parent -r -s;
delete DSN_rElbowAim;


//RIGHT HAND

//RIGHT WRIST
circle -n DSN_rWrist -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
circle -n DSN_rWrist2 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
circle -n DSN_rWrist3 -nr 0 0 1 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;
curve -n DSN_rWrist4 -d 1 -p 0 -1 0 -p 0 3 0 -k 0 -k 1 ;
curve -n DSN_rWrist5 -d 1 -p 0 2.5 0.5 -p 0 3 0 -p 0 2.5 -0.5 -k 0 -k 1 -k 2 ;
curve -n DSN_rWrist6 -d 1 -p -0.5 2.5 0 -p 0 3 0 -p 0.5 2.5 0 -k 0 -k 1 -k 2 ;
circle -n DSN_rWrist7 -c 0 2.5 0 -nr 0 1 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0;

select DSN_rWrist2 DSN_rWrist3 DSN_rWrist4 DSN_rWrist5 DSN_rWrist6 DSN_rWrist7;
pickWalk -d down;
select -add DSN_rWrist;


parent -r -s;
delete DSN_rWrist2 DSN_rWrist3 DSN_rWrist4 DSN_rWrist5 DSN_rWrist6 DSN_rWrist7;
select DSN_rWrist;
scale -r 0.25 0.25 0.25;
makeIdentity -apply true -t 1 -r 1 -s 1;
select -add DSN_MAIN;
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent-w;
select DSN_rElbow DSN_rWrist;
pointConstraint;
delete DSN_rWrist_pointConstraint1;
select DSN_rWrist;
move -r -os -wd -3.5 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;

if ($thumbsOn == 1)
{
duplicate -rr -n DSN_rThumbJ1;
move -r -os -wd -0.45 0 0.51;
scale 0.75 0.75 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rThumbJ2;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rThumbJ3;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rThumbJTip;
move -r -os -wd 0 0 0.75;
makeIdentity -apply true -t 1 -r 1 -s 1;
}

//RIGHT FINGERS
select DSN_rWrist;
duplicate -rr -n DSN_rFinger1J1 DSN_rWrist;
move -r -os -wd -1.47 0 0 ;
scale 0.62 0.62 0.62 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rFinger1J2;
move -r -os -wd -0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rFinger1J3;
move -r -os -wd -0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rFinger1JTip;
move -r -os -wd -0.61 0 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
parent DSN_rFinger1J1 DSN_rWrist;
parent DSN_rFinger1J2 DSN_rFinger1J1;
parent DSN_rFinger1J3 DSN_rFinger1J2;
parent DSN_rFinger1JTip DSN_rFinger1J3;


if ($fingersNum >= 2)
{
duplicate -rr -n DSN_rFinger2J1 DSN_rFinger1J1;
move -r -os -wd 0 0 0.5 DSN_rFinger1J1;
move -r -os -wd 0 0 -0.5 DSN_rFinger2J1;
rename "DSN_rFinger2J1|DSN_rFinger1J2" "DSN_rFinger2J2";
rename "DSN_rFinger2J1|DSN_rFinger2J2|DSN_rFinger1J3" "DSN_rFinger2J3";
rename "DSN_rFinger2J1|DSN_rFinger2J2|DSN_rFinger2J3|DSN_rFinger1JTip" "DSN_rFinger2JTip";
}

if ($fingersNum >= 3)
{
duplicate -rr -n DSN_rFinger3J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -1 DSN_rFinger3J1;
move -r -os -wd 0 0 0.5 DSN_rFinger2J1;
rename "DSN_rFinger3J1|DSN_rFinger1J2" "DSN_rFinger3J2";
rename "DSN_rFinger3J1|DSN_rFinger3J2|DSN_rFinger1J3" "DSN_rFinger3J3";
rename "DSN_rFinger3J1|DSN_rFinger3J2|DSN_rFinger3J3|DSN_rFinger1JTip" "DSN_rFinger3JTip";
}

if ($fingersNum >= 4)
{
duplicate -rr -n DSN_rFinger4J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -1.5 DSN_rFinger4J1;
move -r -os -wd 0 0 .125 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1;
rename "DSN_rFinger4J1|DSN_rFinger1J2" "DSN_rFinger4J2";
rename "DSN_rFinger4J1|DSN_rFinger4J2|DSN_rFinger1J3" "DSN_rFinger4J3";
rename "DSN_rFinger4J1|DSN_rFinger4J2|DSN_rFinger4J3|DSN_rFinger1JTip" "DSN_rFinger4JTip";
}

if ($fingersNum >= 5)
{
duplicate -rr -n DSN_rFinger5J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -2 DSN_rFinger5J1;
move -r -os -wd 0 0 .25 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1;
rename "DSN_rFinger5J1|DSN_rFinger1J2" "DSN_rFinger5J2";
rename "DSN_rFinger5J1|DSN_rFinger5J2|DSN_rFinger1J3" "DSN_rFinger5J3";
rename "DSN_rFinger5J1|DSN_rFinger5J2|DSN_rFinger5J3|DSN_rFinger1JTip" "DSN_rFinger5JTip";
}

if ($fingersNum >= 6)
{
duplicate -rr -n DSN_rFinger6J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -2.5 DSN_rFinger6J1;
move -r -os -wd 0 0 .2 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1 DSN_rFinger6J1;
rename "DSN_rFinger6J1|DSN_rFinger1J2" "DSN_rFinger6J2";
rename "DSN_rFinger6J1|DSN_rFinger6J2|DSN_rFinger1J3" "DSN_rFinger6J3";
rename "DSN_rFinger6J1|DSN_rFinger6J2|DSN_rFinger6J3|DSN_rFinger1JTip" "DSN_rFinger6JTip";
}

if ($fingersNum >= 7)
{
duplicate -rr -n DSN_rFinger7J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -3 DSN_rFinger7J1;
move -r -os -wd 0 0 .25 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1 DSN_rFinger6J1 DSN_rFinger7J1;
rename "DSN_rFinger7J1|DSN_rFinger1J2" "DSN_rFinger7J2";
rename "DSN_rFinger7J1|DSN_rFinger7J2|DSN_rFinger1J3" "DSN_rFinger7J3";
rename "DSN_rFinger7J1|DSN_rFinger7J2|DSN_rFinger7J3|DSN_rFinger1JTip" "DSN_rFinger7JTip";
}

if ($fingersNum >= 8)
{
duplicate -rr -n DSN_rFinger8J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -3.5 DSN_rFinger8J1;
move -r -os -wd 0 0 .25 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1 DSN_rFinger6J1 DSN_rFinger7J1 DSN_rFinger8J1;
rename "DSN_rFinger8J1|DSN_rFinger1J2" "DSN_rFinger8J2";
rename "DSN_rFinger8J1|DSN_rFinger8J2|DSN_rFinger1J3" "DSN_rFinger8J3";
rename "DSN_rFinger8J1|DSN_rFinger8J2|DSN_rFinger8J3|DSN_rFinger1JTip" "DSN_rFinger8JTip";
}

if ($fingersNum >= 9)

{
duplicate -rr -n DSN_rFinger9J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -4 DSN_rFinger9J1;
move -r -os -wd 0 0 .25 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1 DSN_rFinger6J1 DSN_rFinger7J1 DSN_rFinger8J1 DSN_rFinger9J1;
rename "DSN_rFinger9J1|DSN_rFinger1J2" "DSN_rFinger9J2";
rename "DSN_rFinger9J1|DSN_rFinger9J2|DSN_rFinger1J3" "DSN_rFinger9J3";
rename "DSN_rFinger9J1|DSN_rFinger9J2|DSN_rFinger9J3|DSN_rFinger1JTip" "DSN_rFinger9JTip";
}

if ($fingersNum >= 10)
{
duplicate -rr -n DSN_rFinger10J1 DSN_rFinger1J1;
move -r -os -wd 0 0 -4.5 DSN_rFinger10J1;
move -r -os -wd 0 0 .25 DSN_rFinger1J1 DSN_rFinger2J1 DSN_rFinger3J1 DSN_rFinger4J1
DSN_rFinger5J1 DSN_rFinger6J1 DSN_rFinger7J1 DSN_rFinger8J1 DSN_rFinger9J1 DSN_rFinger10J1;
rename "DSN_rFinger10J1|DSN_rFinger1J2" "DSN_rFinger10J2";
rename "DSN_rFinger10J1|DSN_rFinger10J2|DSN_rFinger1J3" "DSN_rFinger10J3";
rename "DSN_rFinger10J1|DSN_rFinger10J2|DSN_rFinger10J3|DSN_rFinger1JTip" "DSN_rFinger10JTip";
}

if ($thumbsOn == 1)
{
parent DSN_rThumbJ1 DSN_rWrist;
parent DSN_rThumbJ2 DSN_rThumbJ1;
parent DSN_rThumbJ3 DSN_rThumbJ2;
parent DSN_rThumbJTip DSN_rThumbJ3;
}
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_rWrist;


//LEFT LEG
select DSN_ROOT;
duplicate -rr -n DSN_lHip;
scale -r 0.625 0.625 0.625;
move -r -os -wd 1.72 -0.8 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lKnee;
move -r -os -wd 0 -6.4 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lAnkle;
move -r -os -wd 0 -6.4 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lBall;
move -r -os -wd 0 -1.65 2.26;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lToe;
move -r -os -wd 0 0 1.7;
makeIdentity -apply true -t 1 -r 1 -s 1;

spaceLocator -n DSN_lKneeLctr;
pointConstraint DSN_lKnee DSN_lKneeLctr;
delete DSN_lKneeLctr_pointConstraint1;
parent DSN_lKneeLctr DSN_lKnee;
move -r 0 0 1.5;
setAttr "DSN_lKneeLctr.v" 0;

if ($toesNum >= 2)
{
setAttr DSN_lToe.v 0;
select DSN_lBall;
duplicate -rr -n DSN_lToe02J1 DSN_lBall;
scale 0.4 0.4 0.4 ;
move -r -os -wd 0 0 0.5;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lToe02J2;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lToe02J3;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_lToe02JTip;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
parent DSN_lToe02J1 DSN_lBall;
parent DSN_lToe02J2 DSN_lToe02J1;
parent DSN_lToe02J3 DSN_lToe02J2;
parent DSN_lToe02JTip DSN_lToe02J3;

duplicate -rr -n DSN_lToe01J1 DSN_lToe02J1;
move -r -os -wd 0.25 0 0 DSN_lToe02J1;
move -r -os -wd -0.25 0 0 DSN_lToe01J1;
rename "DSN_lToe01J1|DSN_lToe02J2" "DSN_lToe01J2";
rename "DSN_lToe01J1|DSN_lToe01J2|DSN_lToe02J3" "DSN_lToe01JTip";
delete DSN_lToe01J1|DSN_lToe01J2|DSN_lToe01JTip|DSN_lToe02JTip;
move -r -os -wd 0 0 .2 DSN_lToe01J2 DSN_lToe01JTip;
}

if ($toesNum >= 3)
{
duplicate -rr -n DSN_lToe03J1 DSN_lToe02J1;
move -r -os -wd -0.25 0 0 DSN_lToe02J1;
rename "DSN_lToe03J1|DSN_lToe02J2" "DSN_lToe03J2";
rename "DSN_lToe03J1|DSN_lToe03J2|DSN_lToe02J3" "DSN_lToe03J3";
rename "DSN_lToe03J1|DSN_lToe03J2|DSN_lToe03J3|DSN_lToe02JTip" "DSN_lToe03JTip";
}

if ($toesNum >= 4)
{
duplicate -rr -n DSN_lToe04J1 DSN_lToe02J1;
move -r -os -wd .5 0 0 DSN_lToe04J1;
move -r -os -wd -.1 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1;
rename "DSN_lToe04J1|DSN_lToe02J2" "DSN_lToe04J2";
rename "DSN_lToe04J1|DSN_lToe04J2|DSN_lToe02J3" "DSN_lToe04J3";
rename "DSN_lToe04J1|DSN_lToe04J2|DSN_lToe04J3|DSN_lToe02JTip" "DSN_lToe04JTip";
}

if ($toesNum >= 5)
{
duplicate -rr -n DSN_lToe05J1 DSN_lToe02J1;
move -r -os -wd .75 0 0 DSN_lToe05J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1;
rename "DSN_lToe05J1|DSN_lToe02J2" "DSN_lToe05J2";
rename "DSN_lToe05J1|DSN_lToe05J2|DSN_lToe02J3" "DSN_lToe05J3";
rename "DSN_lToe05J1|DSN_lToe05J2|DSN_lToe05J3|DSN_lToe02JTip" "DSN_lToe05JTip";
}

if ($toesNum >= 6)
{
duplicate -rr -n DSN_lToe06J1 DSN_lToe02J1;
move -r -os -wd 1 0 0 DSN_lToe06J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1 DSN_lToe06J1;
rename "DSN_lToe06J1|DSN_lToe02J2" "DSN_lToe06J2";
rename "DSN_lToe06J1|DSN_lToe06J2|DSN_lToe02J3" "DSN_lToe06J3";
rename "DSN_lToe06J1|DSN_lToe06J2|DSN_lToe06J3|DSN_lToe02JTip" "DSN_lToe06JTip";
}

if ($toesNum >= 7)
{
duplicate -rr -n DSN_lToe07J1 DSN_lToe02J1;
move -r -os -wd 1.25 0 0 DSN_lToe07J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1 DSN_lToe06J1 DSN_lToe07J1;
rename "DSN_lToe07J1|DSN_lToe02J2" "DSN_lToe07J2";
rename "DSN_lToe07J1|DSN_lToe07J2|DSN_lToe02J3" "DSN_lToe07J3";
rename "DSN_lToe07J1|DSN_lToe07J2|DSN_lToe07J3|DSN_lToe02JTip" "DSN_lToe07JTip";
}

if ($toesNum >= 8)
{
duplicate -rr -n DSN_lToe08J1 DSN_lToe02J1;
move -r -os -wd 1.5 0 0 DSN_lToe08J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1 DSN_lToe06J1 DSN_lToe07J1 DSN_lToe08J1;
rename "DSN_lToe08J1|DSN_lToe02J2" "DSN_lToe08J2";
rename "DSN_lToe08J1|DSN_lToe08J2|DSN_lToe02J3" "DSN_lToe08J3";
rename "DSN_lToe08J1|DSN_lToe08J2|DSN_lToe08J3|DSN_lToe02JTip" "DSN_lToe08JTip";
}

if ($toesNum >= 9)

{
duplicate -rr -n DSN_lToe09J1 DSN_lToe02J1;
move -r -os -wd 1.75 0 0 DSN_lToe09J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1 DSN_lToe06J1 DSN_lToe07J1 DSN_lToe08J1 DSN_lToe09J1;
rename "DSN_lToe09J1|DSN_lToe02J2" "DSN_lToe09J2";
rename "DSN_lToe09J1|DSN_lToe09J2|DSN_lToe02J3" "DSN_lToe09J3";
rename "DSN_lToe09J1|DSN_lToe09J2|DSN_lToe09J3|DSN_lToe02JTip" "DSN_lToe09JTip";
}

if ($toesNum >= 10)
{
duplicate -rr -n DSN_lToe10J1 DSN_lToe02J1;
move -r -os -wd 2 0 0 DSN_lToe10J1;
move -r -os -wd -.15 0 0 DSN_lToe01J1 DSN_lToe02J1 DSN_lToe03J1 DSN_lToe04J1
DSN_lToe05J1 DSN_lToe06J1 DSN_lToe07J1 DSN_lToe08J1 DSN_lToe09J1 DSN_lToe10J1;
rename "DSN_lToe10J1|DSN_lToe02J2" "DSN_lToe10J2";
rename "DSN_lToe10J1|DSN_lToe10J2|DSN_lToe02J3" "DSN_lToe10J3";
rename "DSN_lToe10J1|DSN_lToe10J2|DSN_lToe10J3|DSN_lToe02JTip" "DSN_lToe10JTip";
}


select DSN_lBall;
makeIdentity -apply true -t 1 -r 1 -s 1;

if (`objExists DSN_lToe01JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe01JTip DSN_lToe;}
if (`objExists DSN_lToe02JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe02JTip DSN_lToe;}
if (`objExists DSN_lToe03JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe03JTip DSN_lToe;}
if (`objExists DSN_lToe04JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe04JTip DSN_lToe;}
if (`objExists DSN_lToe05JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe05JTip DSN_lToe;}
if (`objExists DSN_lToe06JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe06JTip DSN_lToe;}
if (`objExists DSN_lToe07JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe07JTip DSN_lToe;}
if (`objExists DSN_lToe08JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe08JTip DSN_lToe;}
if (`objExists DSN_lToe09JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe09JTip DSN_lToe;}
if (`objExists DSN_lToe10JTip`)
	{pointConstraint -mo -skip x -skip y DSN_lToe10JTip DSN_lToe;}

curve -n DSN_lKneeAim -d 1 -p 0 -0.25 0 -p 0 -0.25 1 -p 0 -0.5 1 -p 0 0 1.5 -p 0 0.5 1 -p 0 0.25 1 -p 0 0.25 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 ;
select DSN_lKnee DSN_lKneeAim;
pointConstraint;
delete DSN_lKneeAim_pointConstraint1;
makeIdentity -apply true -t 1 -r 1 -s 1;
select DSN_lKneeAim;
pickWalk -d down;
select -add DSN_lKnee;
parent -r -s;
delete DSN_lKneeAim;


//RIGHT LEG
select DSN_ROOT;
duplicate -rr -n DSN_rHip;
scale -r 0.625 0.625 0.625;
move -r -os -wd -1.72 -0.8 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rKnee;
move -r -os -wd 0 -6.4 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rAnkle;
move -r -os -wd 0 -6.4 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rBall;
move -r -os -wd 0 -1.65 2.26;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rToe;
move -r -os -wd 0 0 1.7;
makeIdentity -apply true -t 1 -r 1 -s 1;

spaceLocator -n DSN_rKneeLctr;
pointConstraint DSN_rKnee DSN_rKneeLctr;
delete DSN_rKneeLctr_pointConstraint1;
parent DSN_rKneeLctr DSN_rKnee;
move -r 0 0 1.5;
setAttr "DSN_rKneeLctr.v" 0;

if ($toesNum >= 2)
{
setAttr DSN_rToe.v 0;
select DSN_rBall;
duplicate -rr -n DSN_rToe02J1 DSN_rBall;
scale 0.4 0.4 0.4 ;
move -r -os -wd 0 0 0.5;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rToe02J2;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rToe02J3;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
duplicate -rr -n DSN_rToe02JTip;
move -r -os -wd 0 0 0.4;
makeIdentity -apply true -t 1 -r 1 -s 1;
parent DSN_rToe02J1 DSN_rBall;
parent DSN_rToe02J2 DSN_rToe02J1;
parent DSN_rToe02J3 DSN_rToe02J2;
parent DSN_rToe02JTip DSN_rToe02J3;

duplicate -rr -n DSN_rToe01J1 DSN_rToe02J1;
move -r -os -wd -0.25 0 0 DSN_rToe02J1;
move -r -os -wd 0.25 0 0 DSN_rToe01J1;
rename "DSN_rToe01J1|DSN_rToe02J2" "DSN_rToe01J2";
rename "DSN_rToe01J1|DSN_rToe01J2|DSN_rToe02J3" "DSN_rToe01JTip";
delete DSN_rToe01J1|DSN_rToe01J2|DSN_rToe01JTip|DSN_rToe02JTip;
move -r -os -wd 0 0 .2 DSN_rToe01J2 DSN_rToe01JTip;
}

if ($toesNum >= 3)
{
duplicate -rr -n DSN_rToe03J1 DSN_rToe02J1;
move -r -os -wd 0.25 0 0 DSN_rToe02J1;
rename "DSN_rToe03J1|DSN_rToe02J2" "DSN_rToe03J2";
rename "DSN_rToe03J1|DSN_rToe03J2|DSN_rToe02J3" "DSN_rToe03J3";
rename "DSN_rToe03J1|DSN_rToe03J2|DSN_rToe03J3|DSN_rToe02JTip" "DSN_rToe03JTip";
}

if ($toesNum >= 4)
{
duplicate -rr -n DSN_rToe04J1 DSN_rToe02J1;
move -r -os -wd -.5 0 0 DSN_rToe04J1;
move -r -os -wd .1 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1;
rename "DSN_rToe04J1|DSN_rToe02J2" "DSN_rToe04J2";
rename "DSN_rToe04J1|DSN_rToe04J2|DSN_rToe02J3" "DSN_rToe04J3";
rename "DSN_rToe04J1|DSN_rToe04J2|DSN_rToe04J3|DSN_rToe02JTip" "DSN_rToe04JTip";
}

if ($toesNum >= 5)
{
duplicate -rr -n DSN_rToe05J1 DSN_rToe02J1;
move -r -os -wd -.75 0 0 DSN_rToe05J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1;
rename "DSN_rToe05J1|DSN_rToe02J2" "DSN_rToe05J2";
rename "DSN_rToe05J1|DSN_rToe05J2|DSN_rToe02J3" "DSN_rToe05J3";
rename "DSN_rToe05J1|DSN_rToe05J2|DSN_rToe05J3|DSN_rToe02JTip" "DSN_rToe05JTip";
}

if ($toesNum >= 6)
{
duplicate -rr -n DSN_rToe06J1 DSN_rToe02J1;
move -r -os -wd -1 0 0 DSN_rToe06J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1 DSN_rToe06J1;
rename "DSN_rToe06J1|DSN_rToe02J2" "DSN_rToe06J2";
rename "DSN_rToe06J1|DSN_rToe06J2|DSN_rToe02J3" "DSN_rToe06J3";
rename "DSN_rToe06J1|DSN_rToe06J2|DSN_rToe06J3|DSN_rToe02JTip" "DSN_rToe06JTip";
}

if ($toesNum >= 7)
{
duplicate -rr -n DSN_rToe07J1 DSN_rToe02J1;
move -r -os -wd -1.25 0 0 DSN_rToe07J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1 DSN_rToe06J1 DSN_rToe07J1;
rename "DSN_rToe07J1|DSN_rToe02J2" "DSN_rToe07J2";
rename "DSN_rToe07J1|DSN_rToe07J2|DSN_rToe02J3" "DSN_rToe07J3";
rename "DSN_rToe07J1|DSN_rToe07J2|DSN_rToe07J3|DSN_rToe02JTip" "DSN_rToe07JTip";
}

if ($toesNum >= 8)
{
duplicate -rr -n DSN_rToe08J1 DSN_rToe02J1;
move -r -os -wd -1.5 0 0 DSN_rToe08J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1 DSN_rToe06J1 DSN_rToe07J1 DSN_rToe08J1;
rename "DSN_rToe08J1|DSN_rToe02J2" "DSN_rToe08J2";
rename "DSN_rToe08J1|DSN_rToe08J2|DSN_rToe02J3" "DSN_rToe08J3";
rename "DSN_rToe08J1|DSN_rToe08J2|DSN_rToe08J3|DSN_rToe02JTip" "DSN_rToe08JTip";
}

if ($toesNum >= 9)

{
duplicate -rr -n DSN_rToe09J1 DSN_rToe02J1;
move -r -os -wd -1.75 0 0 DSN_rToe09J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1 DSN_rToe06J1 DSN_rToe07J1 DSN_rToe08J1 DSN_rToe09J1;
rename "DSN_rToe09J1|DSN_rToe02J2" "DSN_rToe09J2";
rename "DSN_rToe09J1|DSN_rToe09J2|DSN_rToe02J3" "DSN_rToe09J3";
rename "DSN_rToe09J1|DSN_rToe09J2|DSN_rToe09J3|DSN_rToe02JTip" "DSN_rToe09JTip";
}

if ($toesNum >= 10)
{
duplicate -rr -n DSN_rToe10J1 DSN_rToe02J1;
move -r -os -wd -2 0 0 DSN_rToe10J1;
move -r -os -wd .15 0 0 DSN_rToe01J1 DSN_rToe02J1 DSN_rToe03J1 DSN_rToe04J1
DSN_rToe05J1 DSN_rToe06J1 DSN_rToe07J1 DSN_rToe08J1 DSN_rToe09J1 DSN_rToe10J1;
rename "DSN_rToe10J1|DSN_rToe02J2" "DSN_rToe10J2";
rename "DSN_rToe10J1|DSN_rToe10J2|DSN_rToe02J3" "DSN_rToe10J3";
rename "DSN_rToe10J1|DSN_rToe10J2|DSN_rToe10J3|DSN_rToe02JTip" "DSN_rToe10JTip";
}


select DSN_rBall;
makeIdentity -apply true -t 1 -r 1 -s 1;

if (`objExists DSN_rToe01JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe01JTip DSN_rToe;}
if (`objExists DSN_rToe02JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe02JTip DSN_rToe;}
if (`objExists DSN_rToe03JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe03JTip DSN_rToe;}
if (`objExists DSN_rToe04JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe04JTip DSN_rToe;}
if (`objExists DSN_rToe05JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe05JTip DSN_rToe;}
if (`objExists DSN_rToe06JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe06JTip DSN_rToe;}
if (`objExists DSN_rToe07JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe07JTip DSN_rToe;}
if (`objExists DSN_rToe08JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe08JTip DSN_rToe;}
if (`objExists DSN_rToe09JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe09JTip DSN_rToe;}
if (`objExists DSN_rToe10JTip`)
	{pointConstraint -mo -skip x -skip y DSN_rToe10JTip DSN_rToe;}


curve -n DSN_rKneeAim -d 1 -p 0 -0.25 0 -p 0 -0.25 1 -p 0 -0.5 1 -p 0 0 1.5 -p 0 0.5 1 -p 0 0.25 1 -p 0 0.25 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 ;
select DSN_rKnee DSN_rKneeAim;
pointConstraint;
delete DSN_rKneeAim_pointConstraint1;
makeIdentity -apply true -t 1 -r 1 -s 1;
select DSN_rKneeAim;
pickWalk -d down;
select -add DSN_rKnee;
parent -r -s;
delete DSN_rKneeAim;

//PARENT CONTROLS
parent DSN_ROOT DSN_Spine01G DSN_Spine02G DSN_Spine03G DSN_Spine04 DSN_MAIN;
parent DSN_Neck DSN_lClavicle DSN_rClavicle DSN_Spine04;
parent DSN_Head DSN_Neck;
parent DSN_Jaw DSN_HeadTip DSN_lEye DSN_rEye DSN_Head;
parent DSN_JawTip DSN_Jaw;

parent DSN_lHip DSN_rHip DSN_ROOT;
parent DSN_lShoulder DSN_lClavicle;

//CONSTRAIN SPINE JOINTS
pointConstraint -offset 0 0 0 -skip x DSN_ROOT DSN_Spine04 DSN_Spine01G;
setAttr "DSN_Spine01G_pointConstraint1.DSN_ROOTW0" 3;

pointConstraint -offset 0 0 0 -skip x DSN_ROOT DSN_Spine04 DSN_Spine02G;

pointConstraint -offset 0 0 0 -skip x DSN_ROOT DSN_Spine04 DSN_Spine03G;
setAttr "DSN_Spine03G_pointConstraint1.DSN_Spine04W1" 3;

//CONSTRAIN LEFT ELBOW BETWEEN SHOULDER AND WRIST
select DSN_lElbow;
group -n DSN_lElbowG;
move -r 0 0 .611 DSN_lElbowG.scalePivot DSN_lElbowG.rotatePivot ;
pointConstraint -mo DSN_lShoulder DSN_lWrist DSN_lElbowG;
parent DSN_lElbowG DSN_lWrist DSN_MAIN;

//CONSTRAIN LEFT KNEE BETWEEN HIP AND ANKLE
group -n DSN_lKneeG DSN_lKnee;
move -r 0 0 -.611 DSN_lKneeG.scalePivot DSN_lKneeG.rotatePivot ;
pointConstraint -mo DSN_lHip DSN_lAnkle DSN_lKneeG;
parent DSN_lKneeG DSN_lAnkle DSN_MAIN;

parent DSN_lToe DSN_lBall;

parent DSN_rShoulder DSN_rClavicle;

//CONSTRAIN RIGHT ELBOW BETWEEN SHOULDER AND WRIST
group -n DSN_rElbowG DSN_rElbow;
move -r 0 0 .611 DSN_rElbowG.scalePivot DSN_rElbowG.rotatePivot ;
pointConstraint -mo DSN_rShoulder DSN_rWrist DSN_rElbowG;
parent DSN_rElbowG DSN_rWrist DSN_MAIN;

//CONSTRAIN RIGHT KNEE BETWEEN HIP AND ANKLE
group -n DSN_rKneeG DSN_rKnee;
move -r 0 0 -.611 DSN_rKneeG.scalePivot DSN_rKneeG.rotatePivot ;
pointConstraint -mo DSN_rHip DSN_rAnkle DSN_rKneeG;
parent DSN_rKneeG DSN_rAnkle DSN_MAIN;

parent DSN_rToe DSN_rBall;

//LEFT ELBOW INDICATOR
spaceLocator -n DSN_lElbowParent;
select -add DSN_MAIN;
parent;
duplicate -rr -n DSN_lElbowAim;
move -r 2 0 0;
select -add DSN_lElbowParent;
parent;

//LEFT SHOULDER PARENT UP LOCATOR
spaceLocator -n DSN_lElbowParentUp -p 0 0 0;
group -n DSN_lElbowParentUpG;
pointConstraint -skip x -skip z DSN_lShoulder DSN_lElbowParentUpG;
parent DSN_lElbowParentUpG DSN_MAIN;
shadingNode -asUtility multiplyDivide-n DSN_lElbowParentUp_MD;
setAttr DSN_lElbowParentUp_MD.operation 2;
setAttr "DSN_lElbowParentUp_MD.input2X" -2;
connectAttr -f DSN_lWrist.translateY DSN_lElbowParentUp_MD.input1X;
connectAttr -f DSN_lElbowParentUp_MD.outputX DSN_lElbowParentUp.translateY;

//LEFT ARM CONSTRAINTS
pointConstraint DSN_lShoulder DSN_lElbowParent;
pointConstraint DSN_lShoulder DSN_lWrist DSN_lElbowAim;

connectAttr -f DSN_lElbowParent.rotate DSN_lElbowG.rotate;

aimConstraint -aimVector 1 0 0 -upVector -1 0 0 -worldUpType "object"
-worldUpObject DSN_lElbowParentUp DSN_lWrist DSN_lElbowParent;

aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "none"
-skip y -skip z DSN_lElbowAim DSN_lElbow;


//RIGHT ELBOW INDICATOR
spaceLocator -n DSN_rElbowParent;
select -add DSN_MAIN;
parent;
duplicate -rr -n DSN_rElbowAim;
move -r -2 0 0;
select -add DSN_rElbowParent;
parent;

//RIGHT SHOULDER PARENT UP LOCATOR
spaceLocator -n DSN_rElbowParentUp -p 0 0 0;
group -n DSN_rElbowParentUpG;
pointConstraint -skip x -skip z DSN_rShoulder DSN_rElbowParentUpG;
parent DSN_rElbowParentUpG DSN_MAIN;
shadingNode -asUtility multiplyDivide-n DSN_rElbowParentUp_MD;
setAttr DSN_rElbowParentUp_MD.operation 2;
setAttr "DSN_rElbowParentUp_MD.input2X" -2;
connectAttr -f DSN_rWrist.translateY DSN_rElbowParentUp_MD.input1X;
connectAttr -f DSN_rElbowParentUp_MD.outputX DSN_rElbowParentUp.translateY;

//RIGHT ARM CONSTRAINTS
pointConstraint DSN_rShoulder DSN_rElbowParent;
pointConstraint DSN_rShoulder DSN_rWrist DSN_rElbowAim;

connectAttr -f DSN_rElbowParent.rotate DSN_rElbowG.rotate;

aimConstraint -aimVector -1 0 0 -upVector 1 0 0 -worldUpType "object"
-worldUpObject DSN_rElbowParentUp DSN_rWrist DSN_rElbowParent;

aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "none"
-skip y -skip z DSN_rElbowAim DSN_rElbow;

//LEFT KNEE INDICATOR
spaceLocator -n DSN_lKneeParent;
select -add DSN_MAIN;
parent;
duplicate -rr -n DSN_lKneeAim;
move -r 0 -2 0;
select -add DSN_lKneeParent;
parent;

//LEFT HIP PARENT UP LOCATOR
spaceLocator -n DSN_lKneeParentUp -p 0 0 0;
group -n DSN_lKneeParentUpG;
pointConstraint -offset 0 2 0 DSN_lHip DSN_lKneeParentUpG;
parent DSN_lKneeParentUpG DSN_MAIN;
shadingNode -asUtility multiplyDivide-n DSN_lKneeParentUp_MD;
setAttr DSN_lKneeParentUp_MD.operation 2;
setAttr "DSN_lKneeParentUp_MD.input2X" -2;
connectAttr -f DSN_lAnkle.translateX DSN_lKneeParentUp_MD.input1X;
connectAttr -f DSN_lKneeParentUp_MD.outputX DSN_lKneeParentUp.translateX;

//LEFT LEG CONSTRAINTS
pointConstraint DSN_lHip DSN_lKneeParent;
pointConstraint DSN_lHip DSN_lAnkle DSN_lKneeAim;

connectAttr -f DSN_lKneeParent.rotate DSN_lKneeG.rotate;

aimConstraint -aimVector 0 -1 0 -upVector 0 1 0 -worldUpType "object"
-worldUpObject DSN_lKneeParentUp DSN_lAnkle DSN_lKneeParent;

aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "none"
-skip x -skip z DSN_lKneeAim DSN_lKnee;


//RIGHT KNEE INDICATOR
spaceLocator -n DSN_rKneeParent;
select -add DSN_MAIN;
parent;
duplicate -rr -n DSN_rKneeAim;
move -r 0 -2 0;
select -add DSN_rKneeParent;
parent;

//LEFT HIP PARENT UP LOCATOR
spaceLocator -n DSN_rKneeParentUp -p 0 0 0;
group -n DSN_rKneeParentUpG;
pointConstraint -offset 0 2 0 DSN_rHip DSN_rKneeParentUpG;
parent DSN_rKneeParentUpG DSN_MAIN;
shadingNode -asUtility multiplyDivide-n DSN_rKneeParentUp_MD;
setAttr DSN_rKneeParentUp_MD.operation 2;
setAttr "DSN_rKneeParentUp_MD.input2X" -2;
connectAttr -f DSN_rAnkle.translateX DSN_rKneeParentUp_MD.input1X;
connectAttr -f DSN_rKneeParentUp_MD.outputX DSN_rKneeParentUp.translateX;

//LEFT LEG CONSTRAINTS
pointConstraint DSN_rHip DSN_rKneeParent;
pointConstraint DSN_rHip DSN_rAnkle DSN_rKneeAim;

connectAttr -f DSN_rKneeParent.rotate DSN_rKneeG.rotate;

aimConstraint -aimVector 0 -1 0 -upVector 0 1 0 -worldUpType "object"
-worldUpObject DSN_rKneeParentUp DSN_rAnkle DSN_rKneeParent;

aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "none"
-skip x -skip z DSN_rKneeAim DSN_rKnee;


//LOCATORS FOR FOOT TILT
curve -n DSN_lFootInTilt -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move 0.5 0 2.26 DSN_lFootInTilt;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_lFootInTilt;
curve -n DSN_lFootOutTilt -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move 3 0 2.26 DSN_lFootOutTilt;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_lFootOutTilt;
select -add DSN_lFootInTilt DSN_lBall;
parent;
curve -n DSN_lFootHeelPivot -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move 1.72 0 -1.079 DSN_lFootHeelPivot;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_lFootHeelPivot;

curve -n DSN_rFootInTilt -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move -0.5 0 2.26 DSN_rFootInTilt;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_rFootInTilt;
curve -n DSN_rFootOutTilt -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move -3 0 2.26 DSN_rFootOutTilt;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_rFootOutTilt;
select -add DSN_rFootInTilt DSN_rBall;
parent;
curve -n DSN_rFootHeelPivot -d 1 -p 0 0 -1 -p 0 0 1 -p 0 0 0 -p 1 0 0 -p -1 0 0 -p 0 0 0 -p 0 1 0 -p 0 -1 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;;
move -1.72 0 -1.079 DSN_rFootHeelPivot;
makeIdentity -apply true -t 1 -r 1 -s 1 DSN_rFootHeelPivot;

group -n DSN_lFootG DSN_lBall DSN_lFootHeelPivot;
parent DSN_lFootG DSN_MAIN;
$lAnklePosition = `xform -q -ws -rp DSN_lAnkle`;
move $lAnklePosition[0] 0 $lAnklePosition[2] DSN_lFootG.scalePivot DSN_lFootG.rotatePivot ;

select DSN_lAnkle DSN_lFootG;
pointConstraint -mo -skip y -weight 1;
orientConstraint -mo -skip x -skip z -weight 1;
scaleConstraint -offset 1 1 1 -skip y -weight 1;

group -n DSN_rFootG DSN_rBall DSN_rFootHeelPivot;
parent DSN_rFootG DSN_MAIN;
$rAnklePosition = `xform -q -ws -rp DSN_rAnkle`;
move $rAnklePosition[0] 0 $rAnklePosition[2] DSN_rFootG.scalePivot DSN_rFootG.rotatePivot ;

select DSN_rAnkle DSN_rFootG;
pointConstraint -mo -skip y -weight 1;
orientConstraint -mo -skip x -skip z -weight 1;
scaleConstraint -offset 1 1 1 -skip y -weight 1;

//LIMITS & LOCKS
//FORCE IK HANDLES TO ORIENT CORRECTLY
transformLimits -tz -1 -.001 -etz 0 1 DSN_lElbow;
transformLimits -tz -1 -.001 -etz 0 1 DSN_rElbow;
transformLimits -tz .001 1 -etz 1 0 DSN_lKnee;
transformLimits -tz .001 1 -etz 1 0 DSN_rKnee;

//LEFT ANKLE CONTROLS
setAttr -l 1 -k 0 -channelBox 0 DSN_lAnkle.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lAnkle.rz;
transformLimits -ry -80 80 -ery 1 1 DSN_lAnkle;

//RIGHT ANKLE CONTROLS
setAttr -l 1 -k 0 -channelBox 0 DSN_rAnkle.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rAnkle.rz;
transformLimits -ry -80 80 -ery 1 1 DSN_rAnkle;

//MAIN CONTROL
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_MAIN.rz;

//CENTER JOINTS
setAttr -l 1 -k 0 -channelBox 0 DSN_HeadTip.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_ROOT.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine04.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Neck.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Head.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Jaw.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_JawTip.tx;

setAttr -l 1 -k 0 -channelBox 0 DSN_HeadTip.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_ROOT.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine04.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Neck.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Head.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Jaw.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_JawTip.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_HeadTip.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_ROOT.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine04.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Neck.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Head.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Jaw.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_JawTip.rz;
select -cl;

//SPINE GROUPS
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine03G.v;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine01G.v;
setAttr -l 1 -k 0 -channelBox 0 DSN_Spine02G.v;

//ARM CONTROLS
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rShoulder.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lShoulder.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rElbow.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lElbow.sz;

//LEG CONTROLS
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rHip.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lHip.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rKnee.sz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lKnee.sz;

//FOOT CONTROLS
setAttr -l 1 -k 0 -channelBox 0 DSN_lBall.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rBall.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rBall.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rBall.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rBall.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rToe.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rToe.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lBall.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lBall.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lToe.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lToe.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lToe.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rToe.ty;


setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootInTilt.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootOutTilt.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_rFootHeelPivot.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootInTilt.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.tz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootOutTilt.sz;

setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.tx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.ty;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.rx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.ry;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.rz;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.sx;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.sy;
setAttr -l 1 -k 0 -channelBox 0 DSN_lFootHeelPivot.sz;

setAttr DSN_lElbowParent.v 0;
setAttr DSN_rKneeParentUpG.v 0;
setAttr DSN_rKneeParent.v 0;
setAttr DSN_lKneeParentUpG.v 0;
setAttr DSN_lKneeParent.v 0;
setAttr DSN_rElbowParentUpG.v 0;
setAttr DSN_rElbowParent.v 0;
setAttr DSN_lElbowParentUpG.v 0;

if ($thumbsOn == 1)
{print ("THIS RIG HAS THUMBS AND " + $fingersNum + " FINGER(S) ON EACH HAND AND " + $toesNum + " TOE(S) ON EACH FOOT" + "\n");
}
else
{print ("THIS RIG HAS NO THUMBS AND " + $fingersNum + " FINGER(S) ON EACH HAND AND " + $toesNum + " TOE(S) ON EACH FOOT" + "\n");
}

if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}
changeLinearUnit $currentUnit;
}
}

global proc leftToRight()
{
if (`objExists  DSN_MAIN`) 
	{
string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}
		
$lEyeTranslate = `xform -q -t DSN_lEye`;
$lEyeRotate = `xform -q -ro DSN_lEye`;
$lEyeScale = `xform -q -r -s DSN_lEye`;
setAttr ("DSN_rEye.translate", ($lEyeTranslate[0]*-1), $lEyeTranslate[1], $lEyeTranslate[2]);
setAttr ("DSN_rEye.rotate", $lEyeRotate[0], ($lEyeRotate[1]*-1), ($lEyeRotate[2]*-1));
setAttr ("DSN_rEye.scale", $lEyeScale[0], $lEyeScale[1], $lEyeScale[2]);

$lClavicleTranslate = `xform -q -t DSN_lClavicle`;
$lClavicleRotate = `xform -q -ro DSN_lClavicle`;
$lClavicleScale = `xform -q -r -s DSN_lClavicle`;
setAttr ("DSN_rClavicle.translate", ($lClavicleTranslate[0]*-1), $lClavicleTranslate[1], $lClavicleTranslate[2]);
setAttr ("DSN_rClavicle.rotate", $lClavicleRotate[0], ($lClavicleRotate[1]*-1), ($lClavicleRotate[2]*-1));
setAttr ("DSN_rClavicle.scale", $lClavicleScale[0], $lClavicleScale[1], $lClavicleScale[2]);

$lShoulderTranslate = `xform -q -t DSN_lShoulder`;
setAttr ("DSN_rShoulder.translate", ($lShoulderTranslate[0]*-1), $lShoulderTranslate[1], $lShoulderTranslate[2]);

$lElbowTranslate = `xform -q -t DSN_lElbow`;
setAttr ("DSN_rElbow.translate", ($lElbowTranslate[0]*-1), $lElbowTranslate[1], $lElbowTranslate[2]);


$lWristTranslate = `xform -q -t DSN_lWrist`;
$lWristRotate = `xform -q -ro DSN_lWrist`;
$lWristScale = `xform -q -r -s DSN_lWrist`;
setAttr ("DSN_rWrist.translate", ($lWristTranslate[0]*-1), $lWristTranslate[1], $lWristTranslate[2]);
setAttr ("DSN_rWrist.rotate", $lWristRotate[0], ($lWristRotate[1]*-1), ($lWristRotate[2]*-1));
setAttr ("DSN_rWrist.scale", $lWristScale[0], $lWristScale[1], $lWristScale[2]);


/////////////////////////////FINGERS//////////////////////////////
if( `objExists DSN_lThumbJ1` )
{
$lThumbJ1Translate = `xform -q -t DSN_lThumbJ1`;
$lThumbJ1Rotate = `xform -q -ro DSN_lThumbJ1`;
$lThumbJ1Scale = `xform -q -r -s DSN_lThumbJ1`;
setAttr ("DSN_rThumbJ1.translate", ($lThumbJ1Translate[0]*-1), $lThumbJ1Translate[1], $lThumbJ1Translate[2]);
setAttr ("DSN_rThumbJ1.rotate", $lThumbJ1Rotate[0], ($lThumbJ1Rotate[1]*-1), ($lThumbJ1Rotate[2]*-1));
setAttr ("DSN_rThumbJ1.scale", $lThumbJ1Scale[0], $lThumbJ1Scale[1], $lThumbJ1Scale[2]);

$lThumbJ2Translate = `xform -q -t DSN_lThumbJ2`;
$lThumbJ2Rotate = `xform -q -ro DSN_lThumbJ2`;
$lThumbJ2Scale = `xform -q -r -s DSN_lThumbJ2`;
setAttr ("DSN_rThumbJ2.translate", ($lThumbJ2Translate[0]*-1), $lThumbJ2Translate[1], $lThumbJ2Translate[2]);
setAttr ("DSN_rThumbJ2.rotate", $lThumbJ2Rotate[0], ($lThumbJ2Rotate[1]*-1), ($lThumbJ2Rotate[2]*-1));
setAttr ("DSN_rThumbJ2.scale", $lThumbJ2Scale[0], $lThumbJ2Scale[1], $lThumbJ2Scale[2]);

$lThumbJ3Translate = `xform -q -t DSN_lThumbJ3`;
$lThumbJ3Rotate = `xform -q -ro DSN_lThumbJ3`;
$lThumbJ3Scale = `xform -q -r -s DSN_lThumbJ3`;
setAttr ("DSN_rThumbJ3.translate", ($lThumbJ3Translate[0]*-1), $lThumbJ3Translate[1], $lThumbJ3Translate[2]);
setAttr ("DSN_rThumbJ3.rotate", $lThumbJ3Rotate[0], ($lThumbJ3Rotate[1]*-1), ($lThumbJ3Rotate[2]*-1));
setAttr ("DSN_rThumbJ3.scale", $lThumbJ3Scale[0], $lThumbJ3Scale[1], $lThumbJ3Scale[2]);

$lThumbJTipTranslate = `xform -q -t DSN_lThumbJTip`;
$lThumbJTipRotate = `xform -q -ro DSN_lThumbJTip`;
$lThumbJTipScale = `xform -q -r -s DSN_lThumbJTip`;
setAttr ("DSN_rThumbJTip.translate", ($lThumbJTipTranslate[0]*-1), $lThumbJTipTranslate[1], $lThumbJTipTranslate[2]);
setAttr ("DSN_rThumbJTip.rotate", $lThumbJTipRotate[0], ($lThumbJTipRotate[1]*-1), ($lThumbJTipRotate[2]*-1));
setAttr ("DSN_rThumbJTip.scale", $lThumbJTipScale[0], $lThumbJTipScale[1], $lThumbJTipScale[2]);
}

if( `objExists DSN_lFinger1J1` )
{
$lFinger1J1Translate = `xform -q -t DSN_lFinger1J1`;
$lFinger1J1Rotate = `xform -q -ro DSN_lFinger1J1`;
$lFinger1J1Scale = `xform -q -r -s DSN_lFinger1J1`;
setAttr ("DSN_rFinger1J1.translate", ($lFinger1J1Translate[0]*-1), $lFinger1J1Translate[1], $lFinger1J1Translate[2]);
setAttr ("DSN_rFinger1J1.rotate", $lFinger1J1Rotate[0], ($lFinger1J1Rotate[1]*-1), ($lFinger1J1Rotate[2]*-1));
setAttr ("DSN_rFinger1J1.scale", $lFinger1J1Scale[0], $lFinger1J1Scale[1], $lFinger1J1Scale[2]);

$lFinger1J2Translate = `xform -q -t DSN_lFinger1J2`;
$lFinger1J2Rotate = `xform -q -ro DSN_lFinger1J2`;
$lFinger1J2Scale = `xform -q -r -s DSN_lFinger1J2`;
setAttr ("DSN_rFinger1J2.translate", ($lFinger1J2Translate[0]*-1), $lFinger1J2Translate[1], $lFinger1J2Translate[2]);
setAttr ("DSN_rFinger1J2.rotate", $lFinger1J2Rotate[0], ($lFinger1J2Rotate[1]*-1), ($lFinger1J2Rotate[2]*-1));
setAttr ("DSN_rFinger1J2.scale", $lFinger1J2Scale[0], $lFinger1J2Scale[1], $lFinger1J2Scale[2]);

$lFinger1J3Translate = `xform -q -t DSN_lFinger1J3`;
$lFinger1J3Rotate = `xform -q -ro DSN_lFinger1J3`;
$lFinger1J3Scale = `xform -q -r -s DSN_lFinger1J3`;
setAttr ("DSN_rFinger1J3.translate", ($lFinger1J3Translate[0]*-1), $lFinger1J3Translate[1], $lFinger1J3Translate[2]);
setAttr ("DSN_rFinger1J3.rotate", $lFinger1J3Rotate[0], ($lFinger1J3Rotate[1]*-1), ($lFinger1J3Rotate[2]*-1));
setAttr ("DSN_rFinger1J3.scale", $lFinger1J3Scale[0], $lFinger1J3Scale[1], $lFinger1J3Scale[2]);

$lFinger1JTipTranslate = `xform -q -t DSN_lFinger1JTip`;
$lFinger1JTipRotate = `xform -q -ro DSN_lFinger1JTip`;
$lFinger1JTipScale = `xform -q -r -s DSN_lFinger1JTip`;
setAttr ("DSN_rFinger1JTip.translate", ($lFinger1JTipTranslate[0]*-1), $lFinger1JTipTranslate[1], $lFinger1JTipTranslate[2]);
setAttr ("DSN_rFinger1JTip.rotate", $lFinger1JTipRotate[0], ($lFinger1JTipRotate[1]*-1), ($lFinger1JTipRotate[2]*-1));
setAttr ("DSN_rFinger1JTip.scale", $lFinger1JTipScale[0], $lFinger1JTipScale[1], $lFinger1JTipScale[2]);
}

if( `objExists DSN_lFinger2J1` )
{
$lFinger2J1Translate = `xform -q -t DSN_lFinger2J1`;
$lFinger2J1Rotate = `xform -q -ro DSN_lFinger2J1`;
$lFinger2J1Scale = `xform -q -r -s DSN_lFinger2J1`;
setAttr ("DSN_rFinger2J1.translate", ($lFinger2J1Translate[0]*-1), $lFinger2J1Translate[1], $lFinger2J1Translate[2]);
setAttr ("DSN_rFinger2J1.rotate", $lFinger2J1Rotate[0], ($lFinger2J1Rotate[1]*-1), ($lFinger2J1Rotate[2]*-1));
setAttr ("DSN_rFinger2J1.scale", $lFinger2J1Scale[0], $lFinger2J1Scale[1], $lFinger2J1Scale[2]);

$lFinger2J2Translate = `xform -q -t DSN_lFinger2J2`;
$lFinger2J2Rotate = `xform -q -ro DSN_lFinger2J2`;
$lFinger2J2Scale = `xform -q -r -s DSN_lFinger2J2`;
setAttr ("DSN_rFinger2J2.translate", ($lFinger2J2Translate[0]*-1), $lFinger2J2Translate[1], $lFinger2J2Translate[2]);
setAttr ("DSN_rFinger2J2.rotate", $lFinger2J2Rotate[0], ($lFinger2J2Rotate[1]*-1), ($lFinger2J2Rotate[2]*-1));
setAttr ("DSN_rFinger2J2.scale", $lFinger2J2Scale[0], $lFinger2J2Scale[1], $lFinger2J2Scale[2]);

$lFinger2J3Translate = `xform -q -t DSN_lFinger2J3`;
$lFinger2J3Rotate = `xform -q -ro DSN_lFinger2J3`;
$lFinger2J3Scale = `xform -q -r -s DSN_lFinger2J3`;
setAttr ("DSN_rFinger2J3.translate", ($lFinger2J3Translate[0]*-1), $lFinger2J3Translate[1], $lFinger2J3Translate[2]);
setAttr ("DSN_rFinger2J3.rotate", $lFinger2J3Rotate[0], ($lFinger2J3Rotate[1]*-1), ($lFinger2J3Rotate[2]*-1));
setAttr ("DSN_rFinger2J3.scale", $lFinger2J3Scale[0], $lFinger2J3Scale[1], $lFinger2J3Scale[2]);

$lFinger2JTipTranslate = `xform -q -t DSN_lFinger2JTip`;
$lFinger2JTipRotate = `xform -q -ro DSN_lFinger2JTip`;
$lFinger2JTipScale = `xform -q -r -s DSN_lFinger2JTip`;
setAttr ("DSN_rFinger2JTip.translate", ($lFinger2JTipTranslate[0]*-1), $lFinger2JTipTranslate[1], $lFinger2JTipTranslate[2]);
setAttr ("DSN_rFinger2JTip.rotate", $lFinger2JTipRotate[0], ($lFinger2JTipRotate[1]*-1), ($lFinger2JTipRotate[2]*-1));
setAttr ("DSN_rFinger2JTip.scale", $lFinger2JTipScale[0], $lFinger2JTipScale[1], $lFinger2JTipScale[2]);
}

if( `objExists DSN_lFinger3J1` )
{
$lFinger3J1Translate = `xform -q -t DSN_lFinger3J1`;
$lFinger3J1Rotate = `xform -q -ro DSN_lFinger3J1`;
$lFinger3J1Scale = `xform -q -r -s DSN_lFinger3J1`;
setAttr ("DSN_rFinger3J1.translate", ($lFinger3J1Translate[0]*-1), $lFinger3J1Translate[1], $lFinger3J1Translate[2]);
setAttr ("DSN_rFinger3J1.rotate", $lFinger3J1Rotate[0], ($lFinger3J1Rotate[1]*-1), ($lFinger3J1Rotate[2]*-1));
setAttr ("DSN_rFinger3J1.scale", $lFinger3J1Scale[0], $lFinger3J1Scale[1], $lFinger3J1Scale[2]);

$lFinger3J2Translate = `xform -q -t DSN_lFinger3J2`;
$lFinger3J2Rotate = `xform -q -ro DSN_lFinger3J2`;
$lFinger3J2Scale = `xform -q -r -s DSN_lFinger3J2`;
setAttr ("DSN_rFinger3J2.translate", ($lFinger3J2Translate[0]*-1), $lFinger3J2Translate[1], $lFinger3J2Translate[2]);
setAttr ("DSN_rFinger3J2.rotate", $lFinger3J2Rotate[0], ($lFinger3J2Rotate[1]*-1), ($lFinger3J2Rotate[2]*-1));
setAttr ("DSN_rFinger3J2.scale", $lFinger3J2Scale[0], $lFinger3J2Scale[1], $lFinger3J2Scale[2]);

$lFinger3J3Translate = `xform -q -t DSN_lFinger3J3`;
$lFinger3J3Rotate = `xform -q -ro DSN_lFinger3J3`;
$lFinger3J3Scale = `xform -q -r -s DSN_lFinger3J3`;
setAttr ("DSN_rFinger3J3.translate", ($lFinger3J3Translate[0]*-1), $lFinger3J3Translate[1], $lFinger3J3Translate[2]);
setAttr ("DSN_rFinger3J3.rotate", $lFinger3J3Rotate[0], ($lFinger3J3Rotate[1]*-1), ($lFinger3J3Rotate[2]*-1));
setAttr ("DSN_rFinger3J3.scale", $lFinger3J3Scale[0], $lFinger3J3Scale[1], $lFinger3J3Scale[2]);

$lFinger3JTipTranslate = `xform -q -t DSN_lFinger3JTip`;
$lFinger3JTipRotate = `xform -q -ro DSN_lFinger3JTip`;
$lFinger3JTipScale = `xform -q -r -s DSN_lFinger3JTip`;
setAttr ("DSN_rFinger3JTip.translate", ($lFinger3JTipTranslate[0]*-1), $lFinger3JTipTranslate[1], $lFinger3JTipTranslate[2]);
setAttr ("DSN_rFinger3JTip.rotate", $lFinger3JTipRotate[0], ($lFinger3JTipRotate[1]*-1), ($lFinger3JTipRotate[2]*-1));
setAttr ("DSN_rFinger3JTip.scale", $lFinger3JTipScale[0], $lFinger3JTipScale[1], $lFinger3JTipScale[2]);
}

if( `objExists DSN_lFinger4J1` )
{
$lFinger4J1Translate = `xform -q -t DSN_lFinger4J1`;
$lFinger4J1Rotate = `xform -q -ro DSN_lFinger4J1`;
$lFinger4J1Scale = `xform -q -r -s DSN_lFinger4J1`;
setAttr ("DSN_rFinger4J1.translate", ($lFinger4J1Translate[0]*-1), $lFinger4J1Translate[1], $lFinger4J1Translate[2]);
setAttr ("DSN_rFinger4J1.rotate", $lFinger4J1Rotate[0], ($lFinger4J1Rotate[1]*-1), ($lFinger4J1Rotate[2]*-1));
setAttr ("DSN_rFinger4J1.scale", $lFinger4J1Scale[0], $lFinger4J1Scale[1], $lFinger4J1Scale[2]);

$lFinger4J2Translate = `xform -q -t DSN_lFinger4J2`;
$lFinger4J2Rotate = `xform -q -ro DSN_lFinger4J2`;
$lFinger4J2Scale = `xform -q -r -s DSN_lFinger4J2`;
setAttr ("DSN_rFinger4J2.translate", ($lFinger4J2Translate[0]*-1), $lFinger4J2Translate[1], $lFinger4J2Translate[2]);
setAttr ("DSN_rFinger4J2.rotate", $lFinger4J2Rotate[0], ($lFinger4J2Rotate[1]*-1), ($lFinger4J2Rotate[2]*-1));
setAttr ("DSN_rFinger4J2.scale", $lFinger4J2Scale[0], $lFinger4J2Scale[1], $lFinger4J2Scale[2]);

$lFinger4J3Translate = `xform -q -t DSN_lFinger4J3`;
$lFinger4J3Rotate = `xform -q -ro DSN_lFinger4J3`;
$lFinger4J3Scale = `xform -q -r -s DSN_lFinger4J3`;
setAttr ("DSN_rFinger4J3.translate", ($lFinger4J3Translate[0]*-1), $lFinger4J3Translate[1], $lFinger4J3Translate[2]);
setAttr ("DSN_rFinger4J3.rotate", $lFinger4J3Rotate[0], ($lFinger4J3Rotate[1]*-1), ($lFinger4J3Rotate[2]*-1));
setAttr ("DSN_rFinger4J3.scale", $lFinger4J3Scale[0], $lFinger4J3Scale[1], $lFinger4J3Scale[2]);

$lFinger4JTipTranslate = `xform -q -t DSN_lFinger4JTip`;
$lFinger4JTipRotate = `xform -q -ro DSN_lFinger4JTip`;
$lFinger4JTipScale = `xform -q -r -s DSN_lFinger4JTip`;
setAttr ("DSN_rFinger4JTip.translate", ($lFinger4JTipTranslate[0]*-1), $lFinger4JTipTranslate[1], $lFinger4JTipTranslate[2]);
setAttr ("DSN_rFinger4JTip.rotate", $lFinger4JTipRotate[0], ($lFinger4JTipRotate[1]*-1), ($lFinger4JTipRotate[2]*-1));
setAttr ("DSN_rFinger4JTip.scale", $lFinger4JTipScale[0], $lFinger4JTipScale[1], $lFinger4JTipScale[2]);
}

if( `objExists DSN_lFinger5J1` )
{
$lFinger5J1Translate = `xform -q -t DSN_lFinger5J1`;
$lFinger5J1Rotate = `xform -q -ro DSN_lFinger5J1`;
$lFinger5J1Scale = `xform -q -r -s DSN_lFinger5J1`;
setAttr ("DSN_rFinger5J1.translate", ($lFinger5J1Translate[0]*-1), $lFinger5J1Translate[1], $lFinger5J1Translate[2]);
setAttr ("DSN_rFinger5J1.rotate", $lFinger5J1Rotate[0], ($lFinger5J1Rotate[1]*-1), ($lFinger5J1Rotate[2]*-1));
setAttr ("DSN_rFinger5J1.scale", $lFinger5J1Scale[0], $lFinger5J1Scale[1], $lFinger5J1Scale[2]);

$lFinger5J2Translate = `xform -q -t DSN_lFinger5J2`;
$lFinger5J2Rotate = `xform -q -ro DSN_lFinger5J2`;
$lFinger5J2Scale = `xform -q -r -s DSN_lFinger5J2`;
setAttr ("DSN_rFinger5J2.translate", ($lFinger5J2Translate[0]*-1), $lFinger5J2Translate[1], $lFinger5J2Translate[2]);
setAttr ("DSN_rFinger5J2.rotate", $lFinger5J2Rotate[0], ($lFinger5J2Rotate[1]*-1), ($lFinger5J2Rotate[2]*-1));
setAttr ("DSN_rFinger5J2.scale", $lFinger5J2Scale[0], $lFinger5J2Scale[1], $lFinger5J2Scale[2]);

$lFinger5J3Translate = `xform -q -t DSN_lFinger5J3`;
$lFinger5J3Rotate = `xform -q -ro DSN_lFinger5J3`;
$lFinger5J3Scale = `xform -q -r -s DSN_lFinger5J3`;
setAttr ("DSN_rFinger5J3.translate", ($lFinger5J3Translate[0]*-1), $lFinger5J3Translate[1], $lFinger5J3Translate[2]);
setAttr ("DSN_rFinger5J3.rotate", $lFinger5J3Rotate[0], ($lFinger5J3Rotate[1]*-1), ($lFinger5J3Rotate[2]*-1));
setAttr ("DSN_rFinger5J3.scale", $lFinger5J3Scale[0], $lFinger5J3Scale[1], $lFinger5J3Scale[2]);

$lFinger5JTipTranslate = `xform -q -t DSN_lFinger5JTip`;
$lFinger5JTipRotate = `xform -q -ro DSN_lFinger5JTip`;
$lFinger5JTipScale = `xform -q -r -s DSN_lFinger5JTip`;
setAttr ("DSN_rFinger5JTip.translate", ($lFinger5JTipTranslate[0]*-1), $lFinger5JTipTranslate[1], $lFinger5JTipTranslate[2]);
setAttr ("DSN_rFinger5JTip.rotate", $lFinger5JTipRotate[0], ($lFinger5JTipRotate[1]*-1), ($lFinger5JTipRotate[2]*-1));
setAttr ("DSN_rFinger5JTip.scale", $lFinger5JTipScale[0], $lFinger5JTipScale[1], $lFinger5JTipScale[2]);
}

if( `objExists DSN_lFinger6J1` )
{
$lFinger6J1Translate = `xform -q -t DSN_lFinger6J1`;
$lFinger6J1Rotate = `xform -q -ro DSN_lFinger6J1`;
$lFinger6J1Scale = `xform -q -r -s DSN_lFinger6J1`;
setAttr ("DSN_rFinger6J1.translate", ($lFinger6J1Translate[0]*-1), $lFinger6J1Translate[1], $lFinger6J1Translate[2]);
setAttr ("DSN_rFinger6J1.rotate", $lFinger6J1Rotate[0], ($lFinger6J1Rotate[1]*-1), ($lFinger6J1Rotate[2]*-1));
setAttr ("DSN_rFinger6J1.scale", $lFinger6J1Scale[0], $lFinger6J1Scale[1], $lFinger6J1Scale[2]);

$lFinger6J2Translate = `xform -q -t DSN_lFinger6J2`;
$lFinger6J2Rotate = `xform -q -ro DSN_lFinger6J2`;
$lFinger6J2Scale = `xform -q -r -s DSN_lFinger6J2`;
setAttr ("DSN_rFinger6J2.translate", ($lFinger6J2Translate[0]*-1), $lFinger6J2Translate[1], $lFinger6J2Translate[2]);
setAttr ("DSN_rFinger6J2.rotate", $lFinger6J2Rotate[0], ($lFinger6J2Rotate[1]*-1), ($lFinger6J2Rotate[2]*-1));
setAttr ("DSN_rFinger6J2.scale", $lFinger6J2Scale[0], $lFinger6J2Scale[1], $lFinger6J2Scale[2]);

$lFinger6J3Translate = `xform -q -t DSN_lFinger6J3`;
$lFinger6J3Rotate = `xform -q -ro DSN_lFinger6J3`;
$lFinger6J3Scale = `xform -q -r -s DSN_lFinger6J3`;
setAttr ("DSN_rFinger6J3.translate", ($lFinger6J3Translate[0]*-1), $lFinger6J3Translate[1], $lFinger6J3Translate[2]);
setAttr ("DSN_rFinger6J3.rotate", $lFinger6J3Rotate[0], ($lFinger6J3Rotate[1]*-1), ($lFinger6J3Rotate[2]*-1));
setAttr ("DSN_rFinger6J3.scale", $lFinger6J3Scale[0], $lFinger6J3Scale[1], $lFinger6J3Scale[2]);

$lFinger6JTipTranslate = `xform -q -t DSN_lFinger6JTip`;
$lFinger6JTipRotate = `xform -q -ro DSN_lFinger6JTip`;
$lFinger6JTipScale = `xform -q -r -s DSN_lFinger6JTip`;
setAttr ("DSN_rFinger6JTip.translate", ($lFinger6JTipTranslate[0]*-1), $lFinger6JTipTranslate[1], $lFinger6JTipTranslate[2]);
setAttr ("DSN_rFinger6JTip.rotate", $lFinger6JTipRotate[0], ($lFinger6JTipRotate[1]*-1), ($lFinger6JTipRotate[2]*-1));
setAttr ("DSN_rFinger6JTip.scale", $lFinger6JTipScale[0], $lFinger6JTipScale[1], $lFinger6JTipScale[2]);
}

if( `objExists DSN_lFinger7J1` )
{
$lFinger7J1Translate = `xform -q -t DSN_lFinger7J1`;
$lFinger7J1Rotate = `xform -q -ro DSN_lFinger7J1`;
$lFinger7J1Scale = `xform -q -r -s DSN_lFinger7J1`;
setAttr ("DSN_rFinger7J1.translate", ($lFinger7J1Translate[0]*-1), $lFinger7J1Translate[1], $lFinger7J1Translate[2]);
setAttr ("DSN_rFinger7J1.rotate", $lFinger7J1Rotate[0], ($lFinger7J1Rotate[1]*-1), ($lFinger7J1Rotate[2]*-1));
setAttr ("DSN_rFinger7J1.scale", $lFinger7J1Scale[0], $lFinger7J1Scale[1], $lFinger7J1Scale[2]);

$lFinger7J2Translate = `xform -q -t DSN_lFinger7J2`;
$lFinger7J2Rotate = `xform -q -ro DSN_lFinger7J2`;
$lFinger7J2Scale = `xform -q -r -s DSN_lFinger7J2`;
setAttr ("DSN_rFinger7J2.translate", ($lFinger7J2Translate[0]*-1), $lFinger7J2Translate[1], $lFinger7J2Translate[2]);
setAttr ("DSN_rFinger7J2.rotate", $lFinger7J2Rotate[0], ($lFinger7J2Rotate[1]*-1), ($lFinger7J2Rotate[2]*-1));
setAttr ("DSN_rFinger7J2.scale", $lFinger7J2Scale[0], $lFinger7J2Scale[1], $lFinger7J2Scale[2]);

$lFinger7J3Translate = `xform -q -t DSN_lFinger7J3`;
$lFinger7J3Rotate = `xform -q -ro DSN_lFinger7J3`;
$lFinger7J3Scale = `xform -q -r -s DSN_lFinger7J3`;
setAttr ("DSN_rFinger7J3.translate", ($lFinger7J3Translate[0]*-1), $lFinger7J3Translate[1], $lFinger7J3Translate[2]);
setAttr ("DSN_rFinger7J3.rotate", $lFinger7J3Rotate[0], ($lFinger7J3Rotate[1]*-1), ($lFinger7J3Rotate[2]*-1));
setAttr ("DSN_rFinger7J3.scale", $lFinger7J3Scale[0], $lFinger7J3Scale[1], $lFinger7J3Scale[2]);

$lFinger7JTipTranslate = `xform -q -t DSN_lFinger7JTip`;
$lFinger7JTipRotate = `xform -q -ro DSN_lFinger7JTip`;
$lFinger7JTipScale = `xform -q -r -s DSN_lFinger7JTip`;
setAttr ("DSN_rFinger7JTip.translate", ($lFinger7JTipTranslate[0]*-1), $lFinger7JTipTranslate[1], $lFinger7JTipTranslate[2]);
setAttr ("DSN_rFinger7JTip.rotate", $lFinger7JTipRotate[0], ($lFinger7JTipRotate[1]*-1), ($lFinger7JTipRotate[2]*-1));
setAttr ("DSN_rFinger7JTip.scale", $lFinger7JTipScale[0], $lFinger7JTipScale[1], $lFinger7JTipScale[2]);
}

if( `objExists DSN_lFinger8J1` )
{
$lFinger8J1Translate = `xform -q -t DSN_lFinger8J1`;
$lFinger8J1Rotate = `xform -q -ro DSN_lFinger8J1`;
$lFinger8J1Scale = `xform -q -r -s DSN_lFinger8J1`;
setAttr ("DSN_rFinger8J1.translate", ($lFinger8J1Translate[0]*-1), $lFinger8J1Translate[1], $lFinger8J1Translate[2]);
setAttr ("DSN_rFinger8J1.rotate", $lFinger8J1Rotate[0], ($lFinger8J1Rotate[1]*-1), ($lFinger8J1Rotate[2]*-1));
setAttr ("DSN_rFinger8J1.scale", $lFinger8J1Scale[0], $lFinger8J1Scale[1], $lFinger8J1Scale[2]);

$lFinger8J2Translate = `xform -q -t DSN_lFinger8J2`;
$lFinger8J2Rotate = `xform -q -ro DSN_lFinger8J2`;
$lFinger8J2Scale = `xform -q -r -s DSN_lFinger8J2`;
setAttr ("DSN_rFinger8J2.translate", ($lFinger8J2Translate[0]*-1), $lFinger8J2Translate[1], $lFinger8J2Translate[2]);
setAttr ("DSN_rFinger8J2.rotate", $lFinger8J2Rotate[0], ($lFinger8J2Rotate[1]*-1), ($lFinger8J2Rotate[2]*-1));
setAttr ("DSN_rFinger8J2.scale", $lFinger8J2Scale[0], $lFinger8J2Scale[1], $lFinger8J2Scale[2]);

$lFinger8J3Translate = `xform -q -t DSN_lFinger8J3`;
$lFinger8J3Rotate = `xform -q -ro DSN_lFinger8J3`;
$lFinger8J3Scale = `xform -q -r -s DSN_lFinger8J3`;
setAttr ("DSN_rFinger8J3.translate", ($lFinger8J3Translate[0]*-1), $lFinger8J3Translate[1], $lFinger8J3Translate[2]);
setAttr ("DSN_rFinger8J3.rotate", $lFinger8J3Rotate[0], ($lFinger8J3Rotate[1]*-1), ($lFinger8J3Rotate[2]*-1));
setAttr ("DSN_rFinger8J3.scale", $lFinger8J3Scale[0], $lFinger8J3Scale[1], $lFinger8J3Scale[2]);

$lFinger8JTipTranslate = `xform -q -t DSN_lFinger8JTip`;
$lFinger8JTipRotate = `xform -q -ro DSN_lFinger8JTip`;
$lFinger8JTipScale = `xform -q -r -s DSN_lFinger8JTip`;
setAttr ("DSN_rFinger8JTip.translate", ($lFinger8JTipTranslate[0]*-1), $lFinger8JTipTranslate[1], $lFinger8JTipTranslate[2]);
setAttr ("DSN_rFinger8JTip.rotate", $lFinger8JTipRotate[0], ($lFinger8JTipRotate[1]*-1), ($lFinger8JTipRotate[2]*-1));
setAttr ("DSN_rFinger8JTip.scale", $lFinger8JTipScale[0], $lFinger8JTipScale[1], $lFinger8JTipScale[2]);
}

if( `objExists DSN_lFinger9J1` )
{
$lFinger9J1Translate = `xform -q -t DSN_lFinger9J1`;
$lFinger9J1Rotate = `xform -q -ro DSN_lFinger9J1`;
$lFinger9J1Scale = `xform -q -r -s DSN_lFinger9J1`;
setAttr ("DSN_rFinger9J1.translate", ($lFinger9J1Translate[0]*-1), $lFinger9J1Translate[1], $lFinger9J1Translate[2]);
setAttr ("DSN_rFinger9J1.rotate", $lFinger9J1Rotate[0], ($lFinger9J1Rotate[1]*-1), ($lFinger9J1Rotate[2]*-1));
setAttr ("DSN_rFinger9J1.scale", $lFinger9J1Scale[0], $lFinger9J1Scale[1], $lFinger9J1Scale[2]);

$lFinger9J2Translate = `xform -q -t DSN_lFinger9J2`;
$lFinger9J2Rotate = `xform -q -ro DSN_lFinger9J2`;
$lFinger9J2Scale = `xform -q -r -s DSN_lFinger9J2`;
setAttr ("DSN_rFinger9J2.translate", ($lFinger9J2Translate[0]*-1), $lFinger9J2Translate[1], $lFinger9J2Translate[2]);
setAttr ("DSN_rFinger9J2.rotate", $lFinger9J2Rotate[0], ($lFinger9J2Rotate[1]*-1), ($lFinger9J2Rotate[2]*-1));
setAttr ("DSN_rFinger9J2.scale", $lFinger9J2Scale[0], $lFinger9J2Scale[1], $lFinger9J2Scale[2]);

$lFinger9J3Translate = `xform -q -t DSN_lFinger9J3`;
$lFinger9J3Rotate = `xform -q -ro DSN_lFinger9J3`;
$lFinger9J3Scale = `xform -q -r -s DSN_lFinger9J3`;
setAttr ("DSN_rFinger9J3.translate", ($lFinger9J3Translate[0]*-1), $lFinger9J3Translate[1], $lFinger9J3Translate[2]);
setAttr ("DSN_rFinger9J3.rotate", $lFinger9J3Rotate[0], ($lFinger9J3Rotate[1]*-1), ($lFinger9J3Rotate[2]*-1));
setAttr ("DSN_rFinger9J3.scale", $lFinger9J3Scale[0], $lFinger9J3Scale[1], $lFinger9J3Scale[2]);

$lFinger9JTipTranslate = `xform -q -t DSN_lFinger9JTip`;
$lFinger9JTipRotate = `xform -q -ro DSN_lFinger9JTip`;
$lFinger9JTipScale = `xform -q -r -s DSN_lFinger9JTip`;
setAttr ("DSN_rFinger9JTip.translate", ($lFinger9JTipTranslate[0]*-1), $lFinger9JTipTranslate[1], $lFinger9JTipTranslate[2]);
setAttr ("DSN_rFinger9JTip.rotate", $lFinger9JTipRotate[0], ($lFinger9JTipRotate[1]*-1), ($lFinger9JTipRotate[2]*-1));
setAttr ("DSN_rFinger9JTip.scale", $lFinger9JTipScale[0], $lFinger9JTipScale[1], $lFinger9JTipScale[2]);
}

if( `objExists DSN_lFinger10J1` )
{
$lFinger10J1Translate = `xform -q -t DSN_lFinger10J1`;
$lFinger10J1Rotate = `xform -q -ro DSN_lFinger10J1`;
$lFinger10J1Scale = `xform -q -r -s DSN_lFinger10J1`;
setAttr ("DSN_rFinger10J1.translate", ($lFinger10J1Translate[0]*-1), $lFinger10J1Translate[1], $lFinger10J1Translate[2]);
setAttr ("DSN_rFinger10J1.rotate", $lFinger10J1Rotate[0], ($lFinger10J1Rotate[1]*-1), ($lFinger10J1Rotate[2]*-1));
setAttr ("DSN_rFinger10J1.scale", $lFinger10J1Scale[0], $lFinger10J1Scale[1], $lFinger10J1Scale[2]);

$lFinger10J2Translate = `xform -q -t DSN_lFinger10J2`;
$lFinger10J2Rotate = `xform -q -ro DSN_lFinger10J2`;
$lFinger10J2Scale = `xform -q -r -s DSN_lFinger10J2`;
setAttr ("DSN_rFinger10J2.translate", ($lFinger10J2Translate[0]*-1), $lFinger10J2Translate[1], $lFinger10J2Translate[2]);
setAttr ("DSN_rFinger10J2.rotate", $lFinger10J2Rotate[0], ($lFinger10J2Rotate[1]*-1), ($lFinger10J2Rotate[2]*-1));
setAttr ("DSN_rFinger10J2.scale", $lFinger10J2Scale[0], $lFinger10J2Scale[1], $lFinger10J2Scale[2]);

$lFinger10J3Translate = `xform -q -t DSN_lFinger10J3`;
$lFinger10J3Rotate = `xform -q -ro DSN_lFinger10J3`;
$lFinger10J3Scale = `xform -q -r -s DSN_lFinger10J3`;
setAttr ("DSN_rFinger10J3.translate", ($lFinger10J3Translate[0]*-1), $lFinger10J3Translate[1], $lFinger10J3Translate[2]);
setAttr ("DSN_rFinger10J3.rotate", $lFinger10J3Rotate[0], ($lFinger10J3Rotate[1]*-1), ($lFinger10J3Rotate[2]*-1));
setAttr ("DSN_rFinger10J3.scale", $lFinger10J3Scale[0], $lFinger10J3Scale[1], $lFinger10J3Scale[2]);

$lFinger10JTipTranslate = `xform -q -t DSN_lFinger10JTip`;
$lFinger10JTipRotate = `xform -q -ro DSN_lFinger10JTip`;
$lFinger10JTipScale = `xform -q -r -s DSN_lFinger10JTip`;
setAttr ("DSN_rFinger10JTip.translate", ($lFinger10JTipTranslate[0]*-1), $lFinger10JTipTranslate[1], $lFinger10JTipTranslate[2]);
setAttr ("DSN_rFinger10JTip.rotate", $lFinger10JTipRotate[0], ($lFinger10JTipRotate[1]*-1), ($lFinger10JTipRotate[2]*-1));
setAttr ("DSN_rFinger10JTip.scale", $lFinger10JTipScale[0], $lFinger10JTipScale[1], $lFinger10JTipScale[2]);
}


////////////////////////////TOES///////////////////////////
if( `objExists DSN_lToe01J1` )
{
$lToe01J1Translate = `xform -q -t DSN_lToe01J1`;
$lToe01J1Rotate = `xform -q -ro DSN_lToe01J1`;
$lToe01J1Scale = `xform -q -r -s DSN_lToe01J1`;
setAttr ("DSN_rToe01J1.translate", ($lToe01J1Translate[0]*-1), $lToe01J1Translate[1], $lToe01J1Translate[2]);
setAttr ("DSN_rToe01J1.rotate", $lToe01J1Rotate[0], ($lToe01J1Rotate[1]*-1), ($lToe01J1Rotate[2]*-1));
setAttr ("DSN_rToe01J1.scale", $lToe01J1Scale[0], $lToe01J1Scale[1], $lToe01J1Scale[2]);

$lToe01J2Translate = `xform -q -t DSN_lToe01J2`;
$lToe01J2Rotate = `xform -q -ro DSN_lToe01J2`;
$lToe01J2Scale = `xform -q -r -s DSN_lToe01J2`;
setAttr ("DSN_rToe01J2.translate", ($lToe01J2Translate[0]*-1), $lToe01J2Translate[1], $lToe01J2Translate[2]);
setAttr ("DSN_rToe01J2.rotate", $lToe01J2Rotate[0], ($lToe01J2Rotate[1]*-1), ($lToe01J2Rotate[2]*-1));
setAttr ("DSN_rToe01J2.scale", $lToe01J2Scale[0], $lToe01J2Scale[1], $lToe01J2Scale[2]);

$lToe01JTipTranslate = `xform -q -t DSN_lToe01JTip`;
$lToe01JTipRotate = `xform -q -ro DSN_lToe01JTip`;
$lToe01JTipScale = `xform -q -r -s DSN_lToe01JTip`;
setAttr ("DSN_rToe01JTip.translate", ($lToe01JTipTranslate[0]*-1), $lToe01JTipTranslate[1], $lToe01JTipTranslate[2]);
setAttr ("DSN_rToe01JTip.rotate", $lToe01JTipRotate[0], ($lToe01JTipRotate[1]*-1), ($lToe01JTipRotate[2]*-1));
setAttr ("DSN_rToe01JTip.scale", $lToe01JTipScale[0], $lToe01JTipScale[1], $lToe01JTipScale[2]);
}

if( `objExists DSN_lToe02J1` )
{
$lToe02J1Translate = `xform -q -t DSN_lToe02J1`;
$lToe02J1Rotate = `xform -q -ro DSN_lToe02J1`;
$lToe02J1Scale = `xform -q -r -s DSN_lToe02J1`;
setAttr ("DSN_rToe02J1.translate", ($lToe02J1Translate[0]*-1), $lToe02J1Translate[1], $lToe02J1Translate[2]);
setAttr ("DSN_rToe02J1.rotate", $lToe02J1Rotate[0], ($lToe02J1Rotate[1]*-1), ($lToe02J1Rotate[2]*-1));
setAttr ("DSN_rToe02J1.scale", $lToe02J1Scale[0], $lToe02J1Scale[1], $lToe02J1Scale[2]);

$lToe02J2Translate = `xform -q -t DSN_lToe02J2`;
$lToe02J2Rotate = `xform -q -ro DSN_lToe02J2`;
$lToe02J2Scale = `xform -q -r -s DSN_lToe02J2`;
setAttr ("DSN_rToe02J2.translate", ($lToe02J2Translate[0]*-1), $lToe02J2Translate[1], $lToe02J2Translate[2]);
setAttr ("DSN_rToe02J2.rotate", $lToe02J2Rotate[0], ($lToe02J2Rotate[1]*-1), ($lToe02J2Rotate[2]*-1));
setAttr ("DSN_rToe02J2.scale", $lToe02J2Scale[0], $lToe02J2Scale[1], $lToe02J2Scale[2]);

$lToe02J3Translate = `xform -q -t DSN_lToe02J3`;
$lToe02J3Rotate = `xform -q -ro DSN_lToe02J3`;
$lToe02J3Scale = `xform -q -r -s DSN_lToe02J3`;
setAttr ("DSN_rToe02J3.translate", ($lToe02J3Translate[0]*-1), $lToe02J3Translate[1], $lToe02J3Translate[2]);
setAttr ("DSN_rToe02J3.rotate", $lToe02J3Rotate[0], ($lToe02J3Rotate[1]*-1), ($lToe02J3Rotate[2]*-1));
setAttr ("DSN_rToe02J3.scale", $lToe02J3Scale[0], $lToe02J3Scale[1], $lToe02J3Scale[2]);

$lToe02JTipTranslate = `xform -q -t DSN_lToe02JTip`;
$lToe02JTipRotate = `xform -q -ro DSN_lToe02JTip`;
$lToe02JTipScale = `xform -q -r -s DSN_lToe02JTip`;
setAttr ("DSN_rToe02JTip.translate", ($lToe02JTipTranslate[0]*-1), $lToe02JTipTranslate[1], $lToe02JTipTranslate[2]);
setAttr ("DSN_rToe02JTip.rotate", $lToe02JTipRotate[0], ($lToe02JTipRotate[1]*-1), ($lToe02JTipRotate[2]*-1));
setAttr ("DSN_rToe02JTip.scale", $lToe02JTipScale[0], $lToe02JTipScale[1], $lToe02JTipScale[2]);
}

if( `objExists DSN_lToe03J1` )
{
$lToe03J1Translate = `xform -q -t DSN_lToe03J1`;
$lToe03J1Rotate = `xform -q -ro DSN_lToe03J1`;
$lToe03J1Scale = `xform -q -r -s DSN_lToe03J1`;
setAttr ("DSN_rToe03J1.translate", ($lToe03J1Translate[0]*-1), $lToe03J1Translate[1], $lToe03J1Translate[2]);
setAttr ("DSN_rToe03J1.rotate", $lToe03J1Rotate[0], ($lToe03J1Rotate[1]*-1), ($lToe03J1Rotate[2]*-1));
setAttr ("DSN_rToe03J1.scale", $lToe03J1Scale[0], $lToe03J1Scale[1], $lToe03J1Scale[2]);

$lToe03J2Translate = `xform -q -t DSN_lToe03J2`;
$lToe03J2Rotate = `xform -q -ro DSN_lToe03J2`;
$lToe03J2Scale = `xform -q -r -s DSN_lToe03J2`;
setAttr ("DSN_rToe03J2.translate", ($lToe03J2Translate[0]*-1), $lToe03J2Translate[1], $lToe03J2Translate[2]);
setAttr ("DSN_rToe03J2.rotate", $lToe03J2Rotate[0], ($lToe03J2Rotate[1]*-1), ($lToe03J2Rotate[2]*-1));
setAttr ("DSN_rToe03J2.scale", $lToe03J2Scale[0], $lToe03J2Scale[1], $lToe03J2Scale[2]);

$lToe03J3Translate = `xform -q -t DSN_lToe03J3`;
$lToe03J3Rotate = `xform -q -ro DSN_lToe03J3`;
$lToe03J3Scale = `xform -q -r -s DSN_lToe03J3`;
setAttr ("DSN_rToe03J3.translate", ($lToe03J3Translate[0]*-1), $lToe03J3Translate[1], $lToe03J3Translate[2]);
setAttr ("DSN_rToe03J3.rotate", $lToe03J3Rotate[0], ($lToe03J3Rotate[1]*-1), ($lToe03J3Rotate[2]*-1));
setAttr ("DSN_rToe03J3.scale", $lToe03J3Scale[0], $lToe03J3Scale[1], $lToe03J3Scale[2]);

$lToe03JTipTranslate = `xform -q -t DSN_lToe03JTip`;
$lToe03JTipRotate = `xform -q -ro DSN_lToe03JTip`;
$lToe03JTipScale = `xform -q -r -s DSN_lToe03JTip`;
setAttr ("DSN_rToe03JTip.translate", ($lToe03JTipTranslate[0]*-1), $lToe03JTipTranslate[1], $lToe03JTipTranslate[2]);
setAttr ("DSN_rToe03JTip.rotate", $lToe03JTipRotate[0], ($lToe03JTipRotate[1]*-1), ($lToe03JTipRotate[2]*-1));
setAttr ("DSN_rToe03JTip.scale", $lToe03JTipScale[0], $lToe03JTipScale[1], $lToe03JTipScale[2]);
}

if( `objExists DSN_lToe04J1` )
{
$lToe04J1Translate = `xform -q -t DSN_lToe04J1`;
$lToe04J1Rotate = `xform -q -ro DSN_lToe04J1`;
$lToe04J1Scale = `xform -q -r -s DSN_lToe04J1`;
setAttr ("DSN_rToe04J1.translate", ($lToe04J1Translate[0]*-1), $lToe04J1Translate[1], $lToe04J1Translate[2]);
setAttr ("DSN_rToe04J1.rotate", $lToe04J1Rotate[0], ($lToe04J1Rotate[1]*-1), ($lToe04J1Rotate[2]*-1));
setAttr ("DSN_rToe04J1.scale", $lToe04J1Scale[0], $lToe04J1Scale[1], $lToe04J1Scale[2]);

$lToe04J2Translate = `xform -q -t DSN_lToe04J2`;
$lToe04J2Rotate = `xform -q -ro DSN_lToe04J2`;
$lToe04J2Scale = `xform -q -r -s DSN_lToe04J2`;
setAttr ("DSN_rToe04J2.translate", ($lToe04J2Translate[0]*-1), $lToe04J2Translate[1], $lToe04J2Translate[2]);
setAttr ("DSN_rToe04J2.rotate", $lToe04J2Rotate[0], ($lToe04J2Rotate[1]*-1), ($lToe04J2Rotate[2]*-1));
setAttr ("DSN_rToe04J2.scale", $lToe04J2Scale[0], $lToe04J2Scale[1], $lToe04J2Scale[2]);

$lToe04J3Translate = `xform -q -t DSN_lToe04J3`;
$lToe04J3Rotate = `xform -q -ro DSN_lToe04J3`;
$lToe04J3Scale = `xform -q -r -s DSN_lToe04J3`;
setAttr ("DSN_rToe04J3.translate", ($lToe04J3Translate[0]*-1), $lToe04J3Translate[1], $lToe04J3Translate[2]);
setAttr ("DSN_rToe04J3.rotate", $lToe04J3Rotate[0], ($lToe04J3Rotate[1]*-1), ($lToe04J3Rotate[2]*-1));
setAttr ("DSN_rToe04J3.scale", $lToe04J3Scale[0], $lToe04J3Scale[1], $lToe04J3Scale[2]);

$lToe04JTipTranslate = `xform -q -t DSN_lToe04JTip`;
$lToe04JTipRotate = `xform -q -ro DSN_lToe04JTip`;
$lToe04JTipScale = `xform -q -r -s DSN_lToe04JTip`;
setAttr ("DSN_rToe04JTip.translate", ($lToe04JTipTranslate[0]*-1), $lToe04JTipTranslate[1], $lToe04JTipTranslate[2]);
setAttr ("DSN_rToe04JTip.rotate", $lToe04JTipRotate[0], ($lToe04JTipRotate[1]*-1), ($lToe04JTipRotate[2]*-1));
setAttr ("DSN_rToe04JTip.scale", $lToe04JTipScale[0], $lToe04JTipScale[1], $lToe04JTipScale[2]);
}

if( `objExists DSN_lToe05J1` )
{
$lToe05J1Translate = `xform -q -t DSN_lToe05J1`;
$lToe05J1Rotate = `xform -q -ro DSN_lToe05J1`;
$lToe05J1Scale = `xform -q -r -s DSN_lToe05J1`;
setAttr ("DSN_rToe05J1.translate", ($lToe05J1Translate[0]*-1), $lToe05J1Translate[1], $lToe05J1Translate[2]);
setAttr ("DSN_rToe05J1.rotate", $lToe05J1Rotate[0], ($lToe05J1Rotate[1]*-1), ($lToe05J1Rotate[2]*-1));
setAttr ("DSN_rToe05J1.scale", $lToe05J1Scale[0], $lToe05J1Scale[1], $lToe05J1Scale[2]);

$lToe05J2Translate = `xform -q -t DSN_lToe05J2`;
$lToe05J2Rotate = `xform -q -ro DSN_lToe05J2`;
$lToe05J2Scale = `xform -q -r -s DSN_lToe05J2`;
setAttr ("DSN_rToe05J2.translate", ($lToe05J2Translate[0]*-1), $lToe05J2Translate[1], $lToe05J2Translate[2]);
setAttr ("DSN_rToe05J2.rotate", $lToe05J2Rotate[0], ($lToe05J2Rotate[1]*-1), ($lToe05J2Rotate[2]*-1));
setAttr ("DSN_rToe05J2.scale", $lToe05J2Scale[0], $lToe05J2Scale[1], $lToe05J2Scale[2]);

$lToe05J3Translate = `xform -q -t DSN_lToe05J3`;
$lToe05J3Rotate = `xform -q -ro DSN_lToe05J3`;
$lToe05J3Scale = `xform -q -r -s DSN_lToe05J3`;
setAttr ("DSN_rToe05J3.translate", ($lToe05J3Translate[0]*-1), $lToe05J3Translate[1], $lToe05J3Translate[2]);
setAttr ("DSN_rToe05J3.rotate", $lToe05J3Rotate[0], ($lToe05J3Rotate[1]*-1), ($lToe05J3Rotate[2]*-1));
setAttr ("DSN_rToe05J3.scale", $lToe05J3Scale[0], $lToe05J3Scale[1], $lToe05J3Scale[2]);

$lToe05JTipTranslate = `xform -q -t DSN_lToe05JTip`;
$lToe05JTipRotate = `xform -q -ro DSN_lToe05JTip`;
$lToe05JTipScale = `xform -q -r -s DSN_lToe05JTip`;
setAttr ("DSN_rToe05JTip.translate", ($lToe05JTipTranslate[0]*-1), $lToe05JTipTranslate[1], $lToe05JTipTranslate[2]);
setAttr ("DSN_rToe05JTip.rotate", $lToe05JTipRotate[0], ($lToe05JTipRotate[1]*-1), ($lToe05JTipRotate[2]*-1));
setAttr ("DSN_rToe05JTip.scale", $lToe05JTipScale[0], $lToe05JTipScale[1], $lToe05JTipScale[2]);
}

if( `objExists DSN_lToe06J1` )
{
$lToe06J1Translate = `xform -q -t DSN_lToe06J1`;
$lToe06J1Rotate = `xform -q -ro DSN_lToe06J1`;
$lToe06J1Scale = `xform -q -r -s DSN_lToe06J1`;
setAttr ("DSN_rToe06J1.translate", ($lToe06J1Translate[0]*-1), $lToe06J1Translate[1], $lToe06J1Translate[2]);
setAttr ("DSN_rToe06J1.rotate", $lToe06J1Rotate[0], ($lToe06J1Rotate[1]*-1), ($lToe06J1Rotate[2]*-1));
setAttr ("DSN_rToe06J1.scale", $lToe06J1Scale[0], $lToe06J1Scale[1], $lToe06J1Scale[2]);

$lToe06J2Translate = `xform -q -t DSN_lToe06J2`;
$lToe06J2Rotate = `xform -q -ro DSN_lToe06J2`;
$lToe06J2Scale = `xform -q -r -s DSN_lToe06J2`;
setAttr ("DSN_rToe06J2.translate", ($lToe06J2Translate[0]*-1), $lToe06J2Translate[1], $lToe06J2Translate[2]);
setAttr ("DSN_rToe06J2.rotate", $lToe06J2Rotate[0], ($lToe06J2Rotate[1]*-1), ($lToe06J2Rotate[2]*-1));
setAttr ("DSN_rToe06J2.scale", $lToe06J2Scale[0], $lToe06J2Scale[1], $lToe06J2Scale[2]);

$lToe06J3Translate = `xform -q -t DSN_lToe06J3`;
$lToe06J3Rotate = `xform -q -ro DSN_lToe06J3`;
$lToe06J3Scale = `xform -q -r -s DSN_lToe06J3`;
setAttr ("DSN_rToe06J3.translate", ($lToe06J3Translate[0]*-1), $lToe06J3Translate[1], $lToe06J3Translate[2]);
setAttr ("DSN_rToe06J3.rotate", $lToe06J3Rotate[0], ($lToe06J3Rotate[1]*-1), ($lToe06J3Rotate[2]*-1));
setAttr ("DSN_rToe06J3.scale", $lToe06J3Scale[0], $lToe06J3Scale[1], $lToe06J3Scale[2]);

$lToe06JTipTranslate = `xform -q -t DSN_lToe06JTip`;
$lToe06JTipRotate = `xform -q -ro DSN_lToe06JTip`;
$lToe06JTipScale = `xform -q -r -s DSN_lToe06JTip`;
setAttr ("DSN_rToe06JTip.translate", ($lToe06JTipTranslate[0]*-1), $lToe06JTipTranslate[1], $lToe06JTipTranslate[2]);
setAttr ("DSN_rToe06JTip.rotate", $lToe06JTipRotate[0], ($lToe06JTipRotate[1]*-1), ($lToe06JTipRotate[2]*-1));
setAttr ("DSN_rToe06JTip.scale", $lToe06JTipScale[0], $lToe06JTipScale[1], $lToe06JTipScale[2]);
}

if( `objExists DSN_lToe07J1` )
{
$lToe07J1Translate = `xform -q -t DSN_lToe07J1`;
$lToe07J1Rotate = `xform -q -ro DSN_lToe07J1`;
$lToe07J1Scale = `xform -q -r -s DSN_lToe07J1`;
setAttr ("DSN_rToe07J1.translate", ($lToe07J1Translate[0]*-1), $lToe07J1Translate[1], $lToe07J1Translate[2]);
setAttr ("DSN_rToe07J1.rotate", $lToe07J1Rotate[0], ($lToe07J1Rotate[1]*-1), ($lToe07J1Rotate[2]*-1));
setAttr ("DSN_rToe07J1.scale", $lToe07J1Scale[0], $lToe07J1Scale[1], $lToe07J1Scale[2]);

$lToe07J2Translate = `xform -q -t DSN_lToe07J2`;
$lToe07J2Rotate = `xform -q -ro DSN_lToe07J2`;
$lToe07J2Scale = `xform -q -r -s DSN_lToe07J2`;
setAttr ("DSN_rToe07J2.translate", ($lToe07J2Translate[0]*-1), $lToe07J2Translate[1], $lToe07J2Translate[2]);
setAttr ("DSN_rToe07J2.rotate", $lToe07J2Rotate[0], ($lToe07J2Rotate[1]*-1), ($lToe07J2Rotate[2]*-1));
setAttr ("DSN_rToe07J2.scale", $lToe07J2Scale[0], $lToe07J2Scale[1], $lToe07J2Scale[2]);

$lToe07J3Translate = `xform -q -t DSN_lToe07J3`;
$lToe07J3Rotate = `xform -q -ro DSN_lToe07J3`;
$lToe07J3Scale = `xform -q -r -s DSN_lToe07J3`;
setAttr ("DSN_rToe07J3.translate", ($lToe07J3Translate[0]*-1), $lToe07J3Translate[1], $lToe07J3Translate[2]);
setAttr ("DSN_rToe07J3.rotate", $lToe07J3Rotate[0], ($lToe07J3Rotate[1]*-1), ($lToe07J3Rotate[2]*-1));
setAttr ("DSN_rToe07J3.scale", $lToe07J3Scale[0], $lToe07J3Scale[1], $lToe07J3Scale[2]);

$lToe07JTipTranslate = `xform -q -t DSN_lToe07JTip`;
$lToe07JTipRotate = `xform -q -ro DSN_lToe07JTip`;
$lToe07JTipScale = `xform -q -r -s DSN_lToe07JTip`;
setAttr ("DSN_rToe07JTip.translate", ($lToe07JTipTranslate[0]*-1), $lToe07JTipTranslate[1], $lToe07JTipTranslate[2]);
setAttr ("DSN_rToe07JTip.rotate", $lToe07JTipRotate[0], ($lToe07JTipRotate[1]*-1), ($lToe07JTipRotate[2]*-1));
setAttr ("DSN_rToe07JTip.scale", $lToe07JTipScale[0], $lToe07JTipScale[1], $lToe07JTipScale[2]);
}

if( `objExists DSN_lToe08J1` )
{
$lToe08J1Translate = `xform -q -t DSN_lToe08J1`;
$lToe08J1Rotate = `xform -q -ro DSN_lToe08J1`;
$lToe08J1Scale = `xform -q -r -s DSN_lToe08J1`;
setAttr ("DSN_rToe08J1.translate", ($lToe08J1Translate[0]*-1), $lToe08J1Translate[1], $lToe08J1Translate[2]);
setAttr ("DSN_rToe08J1.rotate", $lToe08J1Rotate[0], ($lToe08J1Rotate[1]*-1), ($lToe08J1Rotate[2]*-1));
setAttr ("DSN_rToe08J1.scale", $lToe08J1Scale[0], $lToe08J1Scale[1], $lToe08J1Scale[2]);

$lToe08J2Translate = `xform -q -t DSN_lToe08J2`;
$lToe08J2Rotate = `xform -q -ro DSN_lToe08J2`;
$lToe08J2Scale = `xform -q -r -s DSN_lToe08J2`;
setAttr ("DSN_rToe08J2.translate", ($lToe08J2Translate[0]*-1), $lToe08J2Translate[1], $lToe08J2Translate[2]);
setAttr ("DSN_rToe08J2.rotate", $lToe08J2Rotate[0], ($lToe08J2Rotate[1]*-1), ($lToe08J2Rotate[2]*-1));
setAttr ("DSN_rToe08J2.scale", $lToe08J2Scale[0], $lToe08J2Scale[1], $lToe08J2Scale[2]);

$lToe08J3Translate = `xform -q -t DSN_lToe08J3`;
$lToe08J3Rotate = `xform -q -ro DSN_lToe08J3`;
$lToe08J3Scale = `xform -q -r -s DSN_lToe08J3`;
setAttr ("DSN_rToe08J3.translate", ($lToe08J3Translate[0]*-1), $lToe08J3Translate[1], $lToe08J3Translate[2]);
setAttr ("DSN_rToe08J3.rotate", $lToe08J3Rotate[0], ($lToe08J3Rotate[1]*-1), ($lToe08J3Rotate[2]*-1));
setAttr ("DSN_rToe08J3.scale", $lToe08J3Scale[0], $lToe08J3Scale[1], $lToe08J3Scale[2]);

$lToe08JTipTranslate = `xform -q -t DSN_lToe08JTip`;
$lToe08JTipRotate = `xform -q -ro DSN_lToe08JTip`;
$lToe08JTipScale = `xform -q -r -s DSN_lToe08JTip`;
setAttr ("DSN_rToe08JTip.translate", ($lToe08JTipTranslate[0]*-1), $lToe08JTipTranslate[1], $lToe08JTipTranslate[2]);
setAttr ("DSN_rToe08JTip.rotate", $lToe08JTipRotate[0], ($lToe08JTipRotate[1]*-1), ($lToe08JTipRotate[2]*-1));
setAttr ("DSN_rToe08JTip.scale", $lToe08JTipScale[0], $lToe08JTipScale[1], $lToe08JTipScale[2]);
}

if( `objExists DSN_lToe09J1` )
{
$lToe09J1Translate = `xform -q -t DSN_lToe09J1`;
$lToe09J1Rotate = `xform -q -ro DSN_lToe09J1`;
$lToe09J1Scale = `xform -q -r -s DSN_lToe09J1`;
setAttr ("DSN_rToe09J1.translate", ($lToe09J1Translate[0]*-1), $lToe09J1Translate[1], $lToe09J1Translate[2]);
setAttr ("DSN_rToe09J1.rotate", $lToe09J1Rotate[0], ($lToe09J1Rotate[1]*-1), ($lToe09J1Rotate[2]*-1));
setAttr ("DSN_rToe09J1.scale", $lToe09J1Scale[0], $lToe09J1Scale[1], $lToe09J1Scale[2]);

$lToe09J2Translate = `xform -q -t DSN_lToe09J2`;
$lToe09J2Rotate = `xform -q -ro DSN_lToe09J2`;
$lToe09J2Scale = `xform -q -r -s DSN_lToe09J2`;
setAttr ("DSN_rToe09J2.translate", ($lToe09J2Translate[0]*-1), $lToe09J2Translate[1], $lToe09J2Translate[2]);
setAttr ("DSN_rToe09J2.rotate", $lToe09J2Rotate[0], ($lToe09J2Rotate[1]*-1), ($lToe09J2Rotate[2]*-1));
setAttr ("DSN_rToe09J2.scale", $lToe09J2Scale[0], $lToe09J2Scale[1], $lToe09J2Scale[2]);

$lToe09J3Translate = `xform -q -t DSN_lToe09J3`;
$lToe09J3Rotate = `xform -q -ro DSN_lToe09J3`;
$lToe09J3Scale = `xform -q -r -s DSN_lToe09J3`;
setAttr ("DSN_rToe09J3.translate", ($lToe09J3Translate[0]*-1), $lToe09J3Translate[1], $lToe09J3Translate[2]);
setAttr ("DSN_rToe09J3.rotate", $lToe09J3Rotate[0], ($lToe09J3Rotate[1]*-1), ($lToe09J3Rotate[2]*-1));
setAttr ("DSN_rToe09J3.scale", $lToe09J3Scale[0], $lToe09J3Scale[1], $lToe09J3Scale[2]);

$lToe09JTipTranslate = `xform -q -t DSN_lToe09JTip`;
$lToe09JTipRotate = `xform -q -ro DSN_lToe09JTip`;
$lToe09JTipScale = `xform -q -r -s DSN_lToe09JTip`;
setAttr ("DSN_rToe09JTip.translate", ($lToe09JTipTranslate[0]*-1), $lToe09JTipTranslate[1], $lToe09JTipTranslate[2]);
setAttr ("DSN_rToe09JTip.rotate", $lToe09JTipRotate[0], ($lToe09JTipRotate[1]*-1), ($lToe09JTipRotate[2]*-1));
setAttr ("DSN_rToe09JTip.scale", $lToe09JTipScale[0], $lToe09JTipScale[1], $lToe09JTipScale[2]);
}

if( `objExists DSN_lToe10J1` )
{
$lToe10J1Translate = `xform -q -t DSN_lToe10J1`;
$lToe10J1Rotate = `xform -q -ro DSN_lToe10J1`;
$lToe10J1Scale = `xform -q -r -s DSN_lToe10J1`;
setAttr ("DSN_rToe10J1.translate", ($lToe10J1Translate[0]*-1), $lToe10J1Translate[1], $lToe10J1Translate[2]);
setAttr ("DSN_rToe10J1.rotate", $lToe10J1Rotate[0], ($lToe10J1Rotate[1]*-1), ($lToe10J1Rotate[2]*-1));
setAttr ("DSN_rToe10J1.scale", $lToe10J1Scale[0], $lToe10J1Scale[1], $lToe10J1Scale[2]);

$lToe10J2Translate = `xform -q -t DSN_lToe10J2`;
$lToe10J2Rotate = `xform -q -ro DSN_lToe10J2`;
$lToe10J2Scale = `xform -q -r -s DSN_lToe10J2`;
setAttr ("DSN_rToe10J2.translate", ($lToe10J2Translate[0]*-1), $lToe10J2Translate[1], $lToe10J2Translate[2]);
setAttr ("DSN_rToe10J2.rotate", $lToe10J2Rotate[0], ($lToe10J2Rotate[1]*-1), ($lToe10J2Rotate[2]*-1));
setAttr ("DSN_rToe10J2.scale", $lToe10J2Scale[0], $lToe10J2Scale[1], $lToe10J2Scale[2]);

$lToe10J3Translate = `xform -q -t DSN_lToe10J3`;
$lToe10J3Rotate = `xform -q -ro DSN_lToe10J3`;
$lToe10J3Scale = `xform -q -r -s DSN_lToe10J3`;
setAttr ("DSN_rToe10J3.translate", ($lToe10J3Translate[0]*-1), $lToe10J3Translate[1], $lToe10J3Translate[2]);
setAttr ("DSN_rToe10J3.rotate", $lToe10J3Rotate[0], ($lToe10J3Rotate[1]*-1), ($lToe10J3Rotate[2]*-1));
setAttr ("DSN_rToe10J3.scale", $lToe10J3Scale[0], $lToe10J3Scale[1], $lToe10J3Scale[2]);

$lToe10JTipTranslate = `xform -q -t DSN_lToe10JTip`;
$lToe10JTipRotate = `xform -q -ro DSN_lToe10JTip`;
$lToe10JTipScale = `xform -q -r -s DSN_lToe10JTip`;
setAttr ("DSN_rToe10JTip.translate", ($lToe10JTipTranslate[0]*-1), $lToe10JTipTranslate[1], $lToe10JTipTranslate[2]);
setAttr ("DSN_rToe10JTip.rotate", $lToe10JTipRotate[0], ($lToe10JTipRotate[1]*-1), ($lToe10JTipRotate[2]*-1));
setAttr ("DSN_rToe10JTip.scale", $lToe10JTipScale[0], $lToe10JTipScale[1], $lToe10JTipScale[2]);
}

$lHipTranslate = `xform -q -t DSN_lHip`;
$lHipRotate = `xform -q -ro DSN_lHip`;
$lHipScale = `xform -q -r -s DSN_lHip`;
setAttr  DSN_rHip.tx ($lHipTranslate[0]*-1);
setAttr  DSN_rHip.ty $lHipTranslate[1];

$lKneeTranslate = `xform -q -t DSN_lKnee`;
$lKneeRotate = `xform -q -ro DSN_lKnee`;
$lKneeScale = `xform -q -r -s DSN_lKnee`;
setAttr ("DSN_rKnee.translate", ($lKneeTranslate[0]*-1), $lKneeTranslate[1], $lKneeTranslate[2]);


$lAnkleTranslate = `xform -q -t DSN_lAnkle`;
$lAnkleRotate = `xform -q -ro DSN_lAnkle`;
$lAnkleScale = `xform -q -r -s DSN_lAnkle`;
setAttr ("DSN_rAnkle.translate", ($lAnkleTranslate[0]*-1), $lAnkleTranslate[1], $lAnkleTranslate[2]);
setAttr DSN_rAnkle.ry ($lAnkleRotate[1]*-1);
setAttr ("DSN_rAnkle.scale", $lAnkleScale[0], $lAnkleScale[1], $lAnkleScale[2]);

$lBallTranslate = `xform -q -t DSN_lBall`;
$lBallRotate = `xform -q -ro DSN_lBall`;
$lBallScale = `xform -q -r -s DSN_lBall`;
setAttr DSN_rBall.tx ($lBallTranslate[0]*-1);
setAttr DSN_rBall.tz $lBallTranslate[2];
setAttr DSN_rBall.ry ($lBallRotate[1]*-1);
setAttr ("DSN_rBall.scale", $lBallScale[0], $lBallScale[1], $lBallScale[2]);

if (`objExists DSN_lToe01J1`)
	{}
else
{
$lToeTranslate = `xform -q -t DSN_lToe`;
$lToeRotate = `xform -q -ro DSN_lToe`;
$lToeScale = `xform -q -r -s DSN_lToe`;
setAttr DSN_rToe.tx ($lToeTranslate[0]*-1);
setAttr DSN_rToe.tz $lToeTranslate[2];
setAttr DSN_rToe.ry ($lToeRotate[1]*-1);
setAttr ("DSN_rToe.scale", $lToeScale[0], $lToeScale[1], $lToeScale[2]);
}

//LOCATORS
$lFootOutTilt = `xform -q -t DSN_lFootOutTilt`;                                                        
setAttr  DSN_rFootOutTilt.tx ($lFootOutTilt[0]*-1);

$lFootInTilt = `xform -q -t DSN_lFootInTilt`;
setAttr  DSN_rFootInTilt.tx ($lFootInTilt[0]*-1);

$lFootHeelPivot = `xform -q -t DSN_lFootHeelPivot`;
setAttr  DSN_rFootHeelPivot.tz $lFootHeelPivot[2];

changeLinearUnit $currentUnit;

print "SUCCESS! MIRRORED CHARACTER'S LEFT SIDE TO RIGHT SIDE.\n";
}
else
{
	error "NO DUMMY RIG TO MIRROR!\n";
}
}

global proc rightToLeft()
{
if (`objExists  DSN_MAIN`) 
	{
string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}

$rEyeTranslate = `xform -q -t DSN_rEye`;
$rEyeRotate = `xform -q -ro DSN_rEye`;
$rEyeScale = `xform -q -r -s DSN_rEye`;
setAttr ("DSN_lEye.translate", ($rEyeTranslate[0]*-1), $rEyeTranslate[1], $rEyeTranslate[2]);
setAttr ("DSN_lEye.rotate", $rEyeRotate[0], ($rEyeRotate[1]*-1), ($rEyeRotate[2]*-1));
setAttr ("DSN_lEye.scale", $rEyeScale[0], $rEyeScale[1], $rEyeScale[2]);

$rClavicleTranslate = `xform -q -t DSN_rClavicle`;
$rClavicleRotate = `xform -q -ro DSN_rClavicle`;
$rClavicleScale = `xform -q -r -s DSN_rClavicle`;
setAttr ("DSN_lClavicle.translate", ($rClavicleTranslate[0]*-1), $rClavicleTranslate[1], $rClavicleTranslate[2]);
setAttr ("DSN_lClavicle.rotate", $rClavicleRotate[0], ($rClavicleRotate[1]*-1), ($rClavicleRotate[2]*-1));
setAttr ("DSN_lClavicle.scale", $rClavicleScale[0], $rClavicleScale[1], $rClavicleScale[2]);

$rShoulderTranslate = `xform -q -t DSN_rShoulder`;
setAttr ("DSN_lShoulder.translate", ($rShoulderTranslate[0]*-1), $rShoulderTranslate[1], $rShoulderTranslate[2]);

$rElbowTranslate = `xform -q -t DSN_rElbow`;
setAttr ("DSN_lElbow.translate", ($rElbowTranslate[0]*-1), $rElbowTranslate[1], $rElbowTranslate[2]);


$rWristTranslate = `xform -q -t DSN_rWrist`;
$rWristRotate = `xform -q -ro DSN_rWrist`;
$rWristScale = `xform -q -r -s DSN_rWrist`;
setAttr ("DSN_lWrist.translate", ($rWristTranslate[0]*-1), $rWristTranslate[1], $rWristTranslate[2]);
setAttr ("DSN_lWrist.rotate", $rWristRotate[0], ($rWristRotate[1]*-1), ($rWristRotate[2]*-1));
setAttr ("DSN_lWrist.scale", $rWristScale[0], $rWristScale[1], $rWristScale[2]);


/////////////////////////////FINGERS//////////////////////////////
if( `objExists DSN_rThumbJ1` )
{
$rThumbJ1Translate = `xform -q -t DSN_rThumbJ1`;
$rThumbJ1Rotate = `xform -q -ro DSN_rThumbJ1`;
$rThumbJ1Scale = `xform -q -r -s DSN_rThumbJ1`;
setAttr ("DSN_lThumbJ1.translate", ($rThumbJ1Translate[0]*-1), $rThumbJ1Translate[1], $rThumbJ1Translate[2]);
setAttr ("DSN_lThumbJ1.rotate", $rThumbJ1Rotate[0], ($rThumbJ1Rotate[1]*-1), ($rThumbJ1Rotate[2]*-1));
setAttr ("DSN_lThumbJ1.scale", $rThumbJ1Scale[0], $rThumbJ1Scale[1], $rThumbJ1Scale[2]);

$rThumbJ2Translate = `xform -q -t DSN_rThumbJ2`;
$rThumbJ2Rotate = `xform -q -ro DSN_rThumbJ2`;
$rThumbJ2Scale = `xform -q -r -s DSN_rThumbJ2`;
setAttr ("DSN_lThumbJ2.translate", ($rThumbJ2Translate[0]*-1), $rThumbJ2Translate[1], $rThumbJ2Translate[2]);
setAttr ("DSN_lThumbJ2.rotate", $rThumbJ2Rotate[0], ($rThumbJ2Rotate[1]*-1), ($rThumbJ2Rotate[2]*-1));
setAttr ("DSN_lThumbJ2.scale", $rThumbJ2Scale[0], $rThumbJ2Scale[1], $rThumbJ2Scale[2]);

$rThumbJ3Translate = `xform -q -t DSN_rThumbJ3`;
$rThumbJ3Rotate = `xform -q -ro DSN_rThumbJ3`;
$rThumbJ3Scale = `xform -q -r -s DSN_rThumbJ3`;
setAttr ("DSN_lThumbJ3.translate", ($rThumbJ3Translate[0]*-1), $rThumbJ3Translate[1], $rThumbJ3Translate[2]);
setAttr ("DSN_lThumbJ3.rotate", $rThumbJ3Rotate[0], ($rThumbJ3Rotate[1]*-1), ($rThumbJ3Rotate[2]*-1));
setAttr ("DSN_lThumbJ3.scale", $rThumbJ3Scale[0], $rThumbJ3Scale[1], $rThumbJ3Scale[2]);

$rThumbJTipTranslate = `xform -q -t DSN_rThumbJTip`;
$rThumbJTipRotate = `xform -q -ro DSN_rThumbJTip`;
$rThumbJTipScale = `xform -q -r -s DSN_rThumbJTip`;
setAttr ("DSN_lThumbJTip.translate", ($rThumbJTipTranslate[0]*-1), $rThumbJTipTranslate[1], $rThumbJTipTranslate[2]);
setAttr ("DSN_lThumbJTip.rotate", $rThumbJTipRotate[0], ($rThumbJTipRotate[1]*-1), ($rThumbJTipRotate[2]*-1));
setAttr ("DSN_lThumbJTip.scale", $rThumbJTipScale[0], $rThumbJTipScale[1], $rThumbJTipScale[2]);
}

if( `objExists DSN_rFinger1J1` )
{
$rFinger1J1Translate = `xform -q -t DSN_rFinger1J1`;
$rFinger1J1Rotate = `xform -q -ro DSN_rFinger1J1`;
$rFinger1J1Scale = `xform -q -r -s DSN_rFinger1J1`;
setAttr ("DSN_lFinger1J1.translate", ($rFinger1J1Translate[0]*-1), $rFinger1J1Translate[1], $rFinger1J1Translate[2]);
setAttr ("DSN_lFinger1J1.rotate", $rFinger1J1Rotate[0], ($rFinger1J1Rotate[1]*-1), ($rFinger1J1Rotate[2]*-1));
setAttr ("DSN_lFinger1J1.scale", $rFinger1J1Scale[0], $rFinger1J1Scale[1], $rFinger1J1Scale[2]);

$rFinger1J2Translate = `xform -q -t DSN_rFinger1J2`;
$rFinger1J2Rotate = `xform -q -ro DSN_rFinger1J2`;
$rFinger1J2Scale = `xform -q -r -s DSN_rFinger1J2`;
setAttr ("DSN_lFinger1J2.translate", ($rFinger1J2Translate[0]*-1), $rFinger1J2Translate[1], $rFinger1J2Translate[2]);
setAttr ("DSN_lFinger1J2.rotate", $rFinger1J2Rotate[0], ($rFinger1J2Rotate[1]*-1), ($rFinger1J2Rotate[2]*-1));
setAttr ("DSN_lFinger1J2.scale", $rFinger1J2Scale[0], $rFinger1J2Scale[1], $rFinger1J2Scale[2]);

$rFinger1J3Translate = `xform -q -t DSN_rFinger1J3`;
$rFinger1J3Rotate = `xform -q -ro DSN_rFinger1J3`;
$rFinger1J3Scale = `xform -q -r -s DSN_rFinger1J3`;
setAttr ("DSN_lFinger1J3.translate", ($rFinger1J3Translate[0]*-1), $rFinger1J3Translate[1], $rFinger1J3Translate[2]);
setAttr ("DSN_lFinger1J3.rotate", $rFinger1J3Rotate[0], ($rFinger1J3Rotate[1]*-1), ($rFinger1J3Rotate[2]*-1));
setAttr ("DSN_lFinger1J3.scale", $rFinger1J3Scale[0], $rFinger1J3Scale[1], $rFinger1J3Scale[2]);

$rFinger1JTipTranslate = `xform -q -t DSN_rFinger1JTip`;
$rFinger1JTipRotate = `xform -q -ro DSN_rFinger1JTip`;
$rFinger1JTipScale = `xform -q -r -s DSN_rFinger1JTip`;
setAttr ("DSN_lFinger1JTip.translate", ($rFinger1JTipTranslate[0]*-1), $rFinger1JTipTranslate[1], $rFinger1JTipTranslate[2]);
setAttr ("DSN_lFinger1JTip.rotate", $rFinger1JTipRotate[0], ($rFinger1JTipRotate[1]*-1), ($rFinger1JTipRotate[2]*-1));
setAttr ("DSN_lFinger1JTip.scale", $rFinger1JTipScale[0], $rFinger1JTipScale[1], $rFinger1JTipScale[2]);
}

if( `objExists DSN_rFinger2J1` )
{
$rFinger2J1Translate = `xform -q -t DSN_rFinger2J1`;
$rFinger2J1Rotate = `xform -q -ro DSN_rFinger2J1`;
$rFinger2J1Scale = `xform -q -r -s DSN_rFinger2J1`;
setAttr ("DSN_lFinger2J1.translate", ($rFinger2J1Translate[0]*-1), $rFinger2J1Translate[1], $rFinger2J1Translate[2]);
setAttr ("DSN_lFinger2J1.rotate", $rFinger2J1Rotate[0], ($rFinger2J1Rotate[1]*-1), ($rFinger2J1Rotate[2]*-1));
setAttr ("DSN_lFinger2J1.scale", $rFinger2J1Scale[0], $rFinger2J1Scale[1], $rFinger2J1Scale[2]);

$rFinger2J2Translate = `xform -q -t DSN_rFinger2J2`;
$rFinger2J2Rotate = `xform -q -ro DSN_rFinger2J2`;
$rFinger2J2Scale = `xform -q -r -s DSN_rFinger2J2`;
setAttr ("DSN_lFinger2J2.translate", ($rFinger2J2Translate[0]*-1), $rFinger2J2Translate[1], $rFinger2J2Translate[2]);
setAttr ("DSN_lFinger2J2.rotate", $rFinger2J2Rotate[0], ($rFinger2J2Rotate[1]*-1), ($rFinger2J2Rotate[2]*-1));
setAttr ("DSN_lFinger2J2.scale", $rFinger2J2Scale[0], $rFinger2J2Scale[1], $rFinger2J2Scale[2]);

$rFinger2J3Translate = `xform -q -t DSN_rFinger2J3`;
$rFinger2J3Rotate = `xform -q -ro DSN_rFinger2J3`;
$rFinger2J3Scale = `xform -q -r -s DSN_rFinger2J3`;
setAttr ("DSN_lFinger2J3.translate", ($rFinger2J3Translate[0]*-1), $rFinger2J3Translate[1], $rFinger2J3Translate[2]);
setAttr ("DSN_lFinger2J3.rotate", $rFinger2J3Rotate[0], ($rFinger2J3Rotate[1]*-1), ($rFinger2J3Rotate[2]*-1));
setAttr ("DSN_lFinger2J3.scale", $rFinger2J3Scale[0], $rFinger2J3Scale[1], $rFinger2J3Scale[2]);

$rFinger2JTipTranslate = `xform -q -t DSN_rFinger2JTip`;
$rFinger2JTipRotate = `xform -q -ro DSN_rFinger2JTip`;
$rFinger2JTipScale = `xform -q -r -s DSN_rFinger2JTip`;
setAttr ("DSN_lFinger2JTip.translate", ($rFinger2JTipTranslate[0]*-1), $rFinger2JTipTranslate[1], $rFinger2JTipTranslate[2]);
setAttr ("DSN_lFinger2JTip.rotate", $rFinger2JTipRotate[0], ($rFinger2JTipRotate[1]*-1), ($rFinger2JTipRotate[2]*-1));
setAttr ("DSN_lFinger2JTip.scale", $rFinger2JTipScale[0], $rFinger2JTipScale[1], $rFinger2JTipScale[2]);
}

if( `objExists DSN_rFinger3J1` )
{
$rFinger3J1Translate = `xform -q -t DSN_rFinger3J1`;
$rFinger3J1Rotate = `xform -q -ro DSN_rFinger3J1`;
$rFinger3J1Scale = `xform -q -r -s DSN_rFinger3J1`;
setAttr ("DSN_lFinger3J1.translate", ($rFinger3J1Translate[0]*-1), $rFinger3J1Translate[1], $rFinger3J1Translate[2]);
setAttr ("DSN_lFinger3J1.rotate", $rFinger3J1Rotate[0], ($rFinger3J1Rotate[1]*-1), ($rFinger3J1Rotate[2]*-1));
setAttr ("DSN_lFinger3J1.scale", $rFinger3J1Scale[0], $rFinger3J1Scale[1], $rFinger3J1Scale[2]);

$rFinger3J2Translate = `xform -q -t DSN_rFinger3J2`;
$rFinger3J2Rotate = `xform -q -ro DSN_rFinger3J2`;
$rFinger3J2Scale = `xform -q -r -s DSN_rFinger3J2`;
setAttr ("DSN_lFinger3J2.translate", ($rFinger3J2Translate[0]*-1), $rFinger3J2Translate[1], $rFinger3J2Translate[2]);
setAttr ("DSN_lFinger3J2.rotate", $rFinger3J2Rotate[0], ($rFinger3J2Rotate[1]*-1), ($rFinger3J2Rotate[2]*-1));
setAttr ("DSN_lFinger3J2.scale", $rFinger3J2Scale[0], $rFinger3J2Scale[1], $rFinger3J2Scale[2]);

$rFinger3J3Translate = `xform -q -t DSN_rFinger3J3`;
$rFinger3J3Rotate = `xform -q -ro DSN_rFinger3J3`;
$rFinger3J3Scale = `xform -q -r -s DSN_rFinger3J3`;
setAttr ("DSN_lFinger3J3.translate", ($rFinger3J3Translate[0]*-1), $rFinger3J3Translate[1], $rFinger3J3Translate[2]);
setAttr ("DSN_lFinger3J3.rotate", $rFinger3J3Rotate[0], ($rFinger3J3Rotate[1]*-1), ($rFinger3J3Rotate[2]*-1));
setAttr ("DSN_lFinger3J3.scale", $rFinger3J3Scale[0], $rFinger3J3Scale[1], $rFinger3J3Scale[2]);

$rFinger3JTipTranslate = `xform -q -t DSN_rFinger3JTip`;
$rFinger3JTipRotate = `xform -q -ro DSN_rFinger3JTip`;
$rFinger3JTipScale = `xform -q -r -s DSN_rFinger3JTip`;
setAttr ("DSN_lFinger3JTip.translate", ($rFinger3JTipTranslate[0]*-1), $rFinger3JTipTranslate[1], $rFinger3JTipTranslate[2]);
setAttr ("DSN_lFinger3JTip.rotate", $rFinger3JTipRotate[0], ($rFinger3JTipRotate[1]*-1), ($rFinger3JTipRotate[2]*-1));
setAttr ("DSN_lFinger3JTip.scale", $rFinger3JTipScale[0], $rFinger3JTipScale[1], $rFinger3JTipScale[2]);
}

if( `objExists DSN_rFinger4J1` )
{
$rFinger4J1Translate = `xform -q -t DSN_rFinger4J1`;
$rFinger4J1Rotate = `xform -q -ro DSN_rFinger4J1`;
$rFinger4J1Scale = `xform -q -r -s DSN_rFinger4J1`;
setAttr ("DSN_lFinger4J1.translate", ($rFinger4J1Translate[0]*-1), $rFinger4J1Translate[1], $rFinger4J1Translate[2]);
setAttr ("DSN_lFinger4J1.rotate", $rFinger4J1Rotate[0], ($rFinger4J1Rotate[1]*-1), ($rFinger4J1Rotate[2]*-1));
setAttr ("DSN_lFinger4J1.scale", $rFinger4J1Scale[0], $rFinger4J1Scale[1], $rFinger4J1Scale[2]);

$rFinger4J2Translate = `xform -q -t DSN_rFinger4J2`;
$rFinger4J2Rotate = `xform -q -ro DSN_rFinger4J2`;
$rFinger4J2Scale = `xform -q -r -s DSN_rFinger4J2`;
setAttr ("DSN_lFinger4J2.translate", ($rFinger4J2Translate[0]*-1), $rFinger4J2Translate[1], $rFinger4J2Translate[2]);
setAttr ("DSN_lFinger4J2.rotate", $rFinger4J2Rotate[0], ($rFinger4J2Rotate[1]*-1), ($rFinger4J2Rotate[2]*-1));
setAttr ("DSN_lFinger4J2.scale", $rFinger4J2Scale[0], $rFinger4J2Scale[1], $rFinger4J2Scale[2]);

$rFinger4J3Translate = `xform -q -t DSN_rFinger4J3`;
$rFinger4J3Rotate = `xform -q -ro DSN_rFinger4J3`;
$rFinger4J3Scale = `xform -q -r -s DSN_rFinger4J3`;
setAttr ("DSN_lFinger4J3.translate", ($rFinger4J3Translate[0]*-1), $rFinger4J3Translate[1], $rFinger4J3Translate[2]);
setAttr ("DSN_lFinger4J3.rotate", $rFinger4J3Rotate[0], ($rFinger4J3Rotate[1]*-1), ($rFinger4J3Rotate[2]*-1));
setAttr ("DSN_lFinger4J3.scale", $rFinger4J3Scale[0], $rFinger4J3Scale[1], $rFinger4J3Scale[2]);

$rFinger4JTipTranslate = `xform -q -t DSN_rFinger4JTip`;
$rFinger4JTipRotate = `xform -q -ro DSN_rFinger4JTip`;
$rFinger4JTipScale = `xform -q -r -s DSN_rFinger4JTip`;
setAttr ("DSN_lFinger4JTip.translate", ($rFinger4JTipTranslate[0]*-1), $rFinger4JTipTranslate[1], $rFinger4JTipTranslate[2]);
setAttr ("DSN_lFinger4JTip.rotate", $rFinger4JTipRotate[0], ($rFinger4JTipRotate[1]*-1), ($rFinger4JTipRotate[2]*-1));
setAttr ("DSN_lFinger4JTip.scale", $rFinger4JTipScale[0], $rFinger4JTipScale[1], $rFinger4JTipScale[2]);
}

if( `objExists DSN_rFinger5J1` )
{
$rFinger5J1Translate = `xform -q -t DSN_rFinger5J1`;
$rFinger5J1Rotate = `xform -q -ro DSN_rFinger5J1`;
$rFinger5J1Scale = `xform -q -r -s DSN_rFinger5J1`;
setAttr ("DSN_lFinger5J1.translate", ($rFinger5J1Translate[0]*-1), $rFinger5J1Translate[1], $rFinger5J1Translate[2]);
setAttr ("DSN_lFinger5J1.rotate", $rFinger5J1Rotate[0], ($rFinger5J1Rotate[1]*-1), ($rFinger5J1Rotate[2]*-1));
setAttr ("DSN_lFinger5J1.scale", $rFinger5J1Scale[0], $rFinger5J1Scale[1], $rFinger5J1Scale[2]);

$rFinger5J2Translate = `xform -q -t DSN_rFinger5J2`;
$rFinger5J2Rotate = `xform -q -ro DSN_rFinger5J2`;
$rFinger5J2Scale = `xform -q -r -s DSN_rFinger5J2`;
setAttr ("DSN_lFinger5J2.translate", ($rFinger5J2Translate[0]*-1), $rFinger5J2Translate[1], $rFinger5J2Translate[2]);
setAttr ("DSN_lFinger5J2.rotate", $rFinger5J2Rotate[0], ($rFinger5J2Rotate[1]*-1), ($rFinger5J2Rotate[2]*-1));
setAttr ("DSN_lFinger5J2.scale", $rFinger5J2Scale[0], $rFinger5J2Scale[1], $rFinger5J2Scale[2]);

$rFinger5J3Translate = `xform -q -t DSN_rFinger5J3`;
$rFinger5J3Rotate = `xform -q -ro DSN_rFinger5J3`;
$rFinger5J3Scale = `xform -q -r -s DSN_rFinger5J3`;
setAttr ("DSN_lFinger5J3.translate", ($rFinger5J3Translate[0]*-1), $rFinger5J3Translate[1], $rFinger5J3Translate[2]);
setAttr ("DSN_lFinger5J3.rotate", $rFinger5J3Rotate[0], ($rFinger5J3Rotate[1]*-1), ($rFinger5J3Rotate[2]*-1));
setAttr ("DSN_lFinger5J3.scale", $rFinger5J3Scale[0], $rFinger5J3Scale[1], $rFinger5J3Scale[2]);

$rFinger5JTipTranslate = `xform -q -t DSN_rFinger5JTip`;
$rFinger5JTipRotate = `xform -q -ro DSN_rFinger5JTip`;
$rFinger5JTipScale = `xform -q -r -s DSN_rFinger5JTip`;
setAttr ("DSN_lFinger5JTip.translate", ($rFinger5JTipTranslate[0]*-1), $rFinger5JTipTranslate[1], $rFinger5JTipTranslate[2]);
setAttr ("DSN_lFinger5JTip.rotate", $rFinger5JTipRotate[0], ($rFinger5JTipRotate[1]*-1), ($rFinger5JTipRotate[2]*-1));
setAttr ("DSN_lFinger5JTip.scale", $rFinger5JTipScale[0], $rFinger5JTipScale[1], $rFinger5JTipScale[2]);
}

if( `objExists DSN_rFinger6J1` )
{
$rFinger6J1Translate = `xform -q -t DSN_rFinger6J1`;
$rFinger6J1Rotate = `xform -q -ro DSN_rFinger6J1`;
$rFinger6J1Scale = `xform -q -r -s DSN_rFinger6J1`;
setAttr ("DSN_lFinger6J1.translate", ($rFinger6J1Translate[0]*-1), $rFinger6J1Translate[1], $rFinger6J1Translate[2]);
setAttr ("DSN_lFinger6J1.rotate", $rFinger6J1Rotate[0], ($rFinger6J1Rotate[1]*-1), ($rFinger6J1Rotate[2]*-1));
setAttr ("DSN_lFinger6J1.scale", $rFinger6J1Scale[0], $rFinger6J1Scale[1], $rFinger6J1Scale[2]);

$rFinger6J2Translate = `xform -q -t DSN_rFinger6J2`;
$rFinger6J2Rotate = `xform -q -ro DSN_rFinger6J2`;
$rFinger6J2Scale = `xform -q -r -s DSN_rFinger6J2`;
setAttr ("DSN_lFinger6J2.translate", ($rFinger6J2Translate[0]*-1), $rFinger6J2Translate[1], $rFinger6J2Translate[2]);
setAttr ("DSN_lFinger6J2.rotate", $rFinger6J2Rotate[0], ($rFinger6J2Rotate[1]*-1), ($rFinger6J2Rotate[2]*-1));
setAttr ("DSN_lFinger6J2.scale", $rFinger6J2Scale[0], $rFinger6J2Scale[1], $rFinger6J2Scale[2]);

$rFinger6J3Translate = `xform -q -t DSN_rFinger6J3`;
$rFinger6J3Rotate = `xform -q -ro DSN_rFinger6J3`;
$rFinger6J3Scale = `xform -q -r -s DSN_rFinger6J3`;
setAttr ("DSN_lFinger6J3.translate", ($rFinger6J3Translate[0]*-1), $rFinger6J3Translate[1], $rFinger6J3Translate[2]);
setAttr ("DSN_lFinger6J3.rotate", $rFinger6J3Rotate[0], ($rFinger6J3Rotate[1]*-1), ($rFinger6J3Rotate[2]*-1));
setAttr ("DSN_lFinger6J3.scale", $rFinger6J3Scale[0], $rFinger6J3Scale[1], $rFinger6J3Scale[2]);

$rFinger6JTipTranslate = `xform -q -t DSN_rFinger6JTip`;
$rFinger6JTipRotate = `xform -q -ro DSN_rFinger6JTip`;
$rFinger6JTipScale = `xform -q -r -s DSN_rFinger6JTip`;
setAttr ("DSN_lFinger6JTip.translate", ($rFinger6JTipTranslate[0]*-1), $rFinger6JTipTranslate[1], $rFinger6JTipTranslate[2]);
setAttr ("DSN_lFinger6JTip.rotate", $rFinger6JTipRotate[0], ($rFinger6JTipRotate[1]*-1), ($rFinger6JTipRotate[2]*-1));
setAttr ("DSN_lFinger6JTip.scale", $rFinger6JTipScale[0], $rFinger6JTipScale[1], $rFinger6JTipScale[2]);
}

if( `objExists DSN_rFinger7J1` )
{
$rFinger7J1Translate = `xform -q -t DSN_rFinger7J1`;
$rFinger7J1Rotate = `xform -q -ro DSN_rFinger7J1`;
$rFinger7J1Scale = `xform -q -r -s DSN_rFinger7J1`;
setAttr ("DSN_lFinger7J1.translate", ($rFinger7J1Translate[0]*-1), $rFinger7J1Translate[1], $rFinger7J1Translate[2]);
setAttr ("DSN_lFinger7J1.rotate", $rFinger7J1Rotate[0], ($rFinger7J1Rotate[1]*-1), ($rFinger7J1Rotate[2]*-1));
setAttr ("DSN_lFinger7J1.scale", $rFinger7J1Scale[0], $rFinger7J1Scale[1], $rFinger7J1Scale[2]);

$rFinger7J2Translate = `xform -q -t DSN_rFinger7J2`;
$rFinger7J2Rotate = `xform -q -ro DSN_rFinger7J2`;
$rFinger7J2Scale = `xform -q -r -s DSN_rFinger7J2`;
setAttr ("DSN_lFinger7J2.translate", ($rFinger7J2Translate[0]*-1), $rFinger7J2Translate[1], $rFinger7J2Translate[2]);
setAttr ("DSN_lFinger7J2.rotate", $rFinger7J2Rotate[0], ($rFinger7J2Rotate[1]*-1), ($rFinger7J2Rotate[2]*-1));
setAttr ("DSN_lFinger7J2.scale", $rFinger7J2Scale[0], $rFinger7J2Scale[1], $rFinger7J2Scale[2]);

$rFinger7J3Translate = `xform -q -t DSN_rFinger7J3`;
$rFinger7J3Rotate = `xform -q -ro DSN_rFinger7J3`;
$rFinger7J3Scale = `xform -q -r -s DSN_rFinger7J3`;
setAttr ("DSN_lFinger7J3.translate", ($rFinger7J3Translate[0]*-1), $rFinger7J3Translate[1], $rFinger7J3Translate[2]);
setAttr ("DSN_lFinger7J3.rotate", $rFinger7J3Rotate[0], ($rFinger7J3Rotate[1]*-1), ($rFinger7J3Rotate[2]*-1));
setAttr ("DSN_lFinger7J3.scale", $rFinger7J3Scale[0], $rFinger7J3Scale[1], $rFinger7J3Scale[2]);

$rFinger7JTipTranslate = `xform -q -t DSN_rFinger7JTip`;
$rFinger7JTipRotate = `xform -q -ro DSN_rFinger7JTip`;
$rFinger7JTipScale = `xform -q -r -s DSN_rFinger7JTip`;
setAttr ("DSN_lFinger7JTip.translate", ($rFinger7JTipTranslate[0]*-1), $rFinger7JTipTranslate[1], $rFinger7JTipTranslate[2]);
setAttr ("DSN_lFinger7JTip.rotate", $rFinger7JTipRotate[0], ($rFinger7JTipRotate[1]*-1), ($rFinger7JTipRotate[2]*-1));
setAttr ("DSN_lFinger7JTip.scale", $rFinger7JTipScale[0], $rFinger7JTipScale[1], $rFinger7JTipScale[2]);
}

if( `objExists DSN_rFinger8J1` )
{
$rFinger8J1Translate = `xform -q -t DSN_rFinger8J1`;
$rFinger8J1Rotate = `xform -q -ro DSN_rFinger8J1`;
$rFinger8J1Scale = `xform -q -r -s DSN_rFinger8J1`;
setAttr ("DSN_lFinger8J1.translate", ($rFinger8J1Translate[0]*-1), $rFinger8J1Translate[1], $rFinger8J1Translate[2]);
setAttr ("DSN_lFinger8J1.rotate", $rFinger8J1Rotate[0], ($rFinger8J1Rotate[1]*-1), ($rFinger8J1Rotate[2]*-1));
setAttr ("DSN_lFinger8J1.scale", $rFinger8J1Scale[0], $rFinger8J1Scale[1], $rFinger8J1Scale[2]);

$rFinger8J2Translate = `xform -q -t DSN_rFinger8J2`;
$rFinger8J2Rotate = `xform -q -ro DSN_rFinger8J2`;
$rFinger8J2Scale = `xform -q -r -s DSN_rFinger8J2`;
setAttr ("DSN_lFinger8J2.translate", ($rFinger8J2Translate[0]*-1), $rFinger8J2Translate[1], $rFinger8J2Translate[2]);
setAttr ("DSN_lFinger8J2.rotate", $rFinger8J2Rotate[0], ($rFinger8J2Rotate[1]*-1), ($rFinger8J2Rotate[2]*-1));
setAttr ("DSN_lFinger8J2.scale", $rFinger8J2Scale[0], $rFinger8J2Scale[1], $rFinger8J2Scale[2]);

$rFinger8J3Translate = `xform -q -t DSN_rFinger8J3`;
$rFinger8J3Rotate = `xform -q -ro DSN_rFinger8J3`;
$rFinger8J3Scale = `xform -q -r -s DSN_rFinger8J3`;
setAttr ("DSN_lFinger8J3.translate", ($rFinger8J3Translate[0]*-1), $rFinger8J3Translate[1], $rFinger8J3Translate[2]);
setAttr ("DSN_lFinger8J3.rotate", $rFinger8J3Rotate[0], ($rFinger8J3Rotate[1]*-1), ($rFinger8J3Rotate[2]*-1));
setAttr ("DSN_lFinger8J3.scale", $rFinger8J3Scale[0], $rFinger8J3Scale[1], $rFinger8J3Scale[2]);

$rFinger8JTipTranslate = `xform -q -t DSN_rFinger8JTip`;
$rFinger8JTipRotate = `xform -q -ro DSN_rFinger8JTip`;
$rFinger8JTipScale = `xform -q -r -s DSN_rFinger8JTip`;
setAttr ("DSN_lFinger8JTip.translate", ($rFinger8JTipTranslate[0]*-1), $rFinger8JTipTranslate[1], $rFinger8JTipTranslate[2]);
setAttr ("DSN_lFinger8JTip.rotate", $rFinger8JTipRotate[0], ($rFinger8JTipRotate[1]*-1), ($rFinger8JTipRotate[2]*-1));
setAttr ("DSN_lFinger8JTip.scale", $rFinger8JTipScale[0], $rFinger8JTipScale[1], $rFinger8JTipScale[2]);
}

if( `objExists DSN_rFinger9J1` )
{
$rFinger9J1Translate = `xform -q -t DSN_rFinger9J1`;
$rFinger9J1Rotate = `xform -q -ro DSN_rFinger9J1`;
$rFinger9J1Scale = `xform -q -r -s DSN_rFinger9J1`;
setAttr ("DSN_lFinger9J1.translate", ($rFinger9J1Translate[0]*-1), $rFinger9J1Translate[1], $rFinger9J1Translate[2]);
setAttr ("DSN_lFinger9J1.rotate", $rFinger9J1Rotate[0], ($rFinger9J1Rotate[1]*-1), ($rFinger9J1Rotate[2]*-1));
setAttr ("DSN_lFinger9J1.scale", $rFinger9J1Scale[0], $rFinger9J1Scale[1], $rFinger9J1Scale[2]);

$rFinger9J2Translate = `xform -q -t DSN_rFinger9J2`;
$rFinger9J2Rotate = `xform -q -ro DSN_rFinger9J2`;
$rFinger9J2Scale = `xform -q -r -s DSN_rFinger9J2`;
setAttr ("DSN_lFinger9J2.translate", ($rFinger9J2Translate[0]*-1), $rFinger9J2Translate[1], $rFinger9J2Translate[2]);
setAttr ("DSN_lFinger9J2.rotate", $rFinger9J2Rotate[0], ($rFinger9J2Rotate[1]*-1), ($rFinger9J2Rotate[2]*-1));
setAttr ("DSN_lFinger9J2.scale", $rFinger9J2Scale[0], $rFinger9J2Scale[1], $rFinger9J2Scale[2]);

$rFinger9J3Translate = `xform -q -t DSN_rFinger9J3`;
$rFinger9J3Rotate = `xform -q -ro DSN_rFinger9J3`;
$rFinger9J3Scale = `xform -q -r -s DSN_rFinger9J3`;
setAttr ("DSN_lFinger9J3.translate", ($rFinger9J3Translate[0]*-1), $rFinger9J3Translate[1], $rFinger9J3Translate[2]);
setAttr ("DSN_lFinger9J3.rotate", $rFinger9J3Rotate[0], ($rFinger9J3Rotate[1]*-1), ($rFinger9J3Rotate[2]*-1));
setAttr ("DSN_lFinger9J3.scale", $rFinger9J3Scale[0], $rFinger9J3Scale[1], $rFinger9J3Scale[2]);

$rFinger9JTipTranslate = `xform -q -t DSN_rFinger9JTip`;
$rFinger9JTipRotate = `xform -q -ro DSN_rFinger9JTip`;
$rFinger9JTipScale = `xform -q -r -s DSN_rFinger9JTip`;
setAttr ("DSN_lFinger9JTip.translate", ($rFinger9JTipTranslate[0]*-1), $rFinger9JTipTranslate[1], $rFinger9JTipTranslate[2]);
setAttr ("DSN_lFinger9JTip.rotate", $rFinger9JTipRotate[0], ($rFinger9JTipRotate[1]*-1), ($rFinger9JTipRotate[2]*-1));
setAttr ("DSN_lFinger9JTip.scale", $rFinger9JTipScale[0], $rFinger9JTipScale[1], $rFinger9JTipScale[2]);
}

if( `objExists DSN_rFinger10J1` )
{
$rFinger10J1Translate = `xform -q -t DSN_rFinger10J1`;
$rFinger10J1Rotate = `xform -q -ro DSN_rFinger10J1`;
$rFinger10J1Scale = `xform -q -r -s DSN_rFinger10J1`;
setAttr ("DSN_lFinger10J1.translate", ($rFinger10J1Translate[0]*-1), $rFinger10J1Translate[1], $rFinger10J1Translate[2]);
setAttr ("DSN_lFinger10J1.rotate", $rFinger10J1Rotate[0], ($rFinger10J1Rotate[1]*-1), ($rFinger10J1Rotate[2]*-1));
setAttr ("DSN_lFinger10J1.scale", $rFinger10J1Scale[0], $rFinger10J1Scale[1], $rFinger10J1Scale[2]);

$rFinger10J2Translate = `xform -q -t DSN_rFinger10J2`;
$rFinger10J2Rotate = `xform -q -ro DSN_rFinger10J2`;
$rFinger10J2Scale = `xform -q -r -s DSN_rFinger10J2`;
setAttr ("DSN_lFinger10J2.translate", ($rFinger10J2Translate[0]*-1), $rFinger10J2Translate[1], $rFinger10J2Translate[2]);
setAttr ("DSN_lFinger10J2.rotate", $rFinger10J2Rotate[0], ($rFinger10J2Rotate[1]*-1), ($rFinger10J2Rotate[2]*-1));
setAttr ("DSN_lFinger10J2.scale", $rFinger10J2Scale[0], $rFinger10J2Scale[1], $rFinger10J2Scale[2]);

$rFinger10J3Translate = `xform -q -t DSN_rFinger10J3`;
$rFinger10J3Rotate = `xform -q -ro DSN_rFinger10J3`;
$rFinger10J3Scale = `xform -q -r -s DSN_rFinger10J3`;
setAttr ("DSN_lFinger10J3.translate", ($rFinger10J3Translate[0]*-1), $rFinger10J3Translate[1], $rFinger10J3Translate[2]);
setAttr ("DSN_lFinger10J3.rotate", $rFinger10J3Rotate[0], ($rFinger10J3Rotate[1]*-1), ($rFinger10J3Rotate[2]*-1));
setAttr ("DSN_lFinger10J3.scale", $rFinger10J3Scale[0], $rFinger10J3Scale[1], $rFinger10J3Scale[2]);

$rFinger10JTipTranslate = `xform -q -t DSN_rFinger10JTip`;
$rFinger10JTipRotate = `xform -q -ro DSN_rFinger10JTip`;
$rFinger10JTipScale = `xform -q -r -s DSN_rFinger10JTip`;
setAttr ("DSN_lFinger10JTip.translate", ($rFinger10JTipTranslate[0]*-1), $rFinger10JTipTranslate[1], $rFinger10JTipTranslate[2]);
setAttr ("DSN_lFinger10JTip.rotate", $rFinger10JTipRotate[0], ($rFinger10JTipRotate[1]*-1), ($rFinger10JTipRotate[2]*-1));
setAttr ("DSN_lFinger10JTip.scale", $rFinger10JTipScale[0], $rFinger10JTipScale[1], $rFinger10JTipScale[2]);
}

////////////////////////////TOES///////////////////////////
if( `objExists DSN_rToe01J1` )
{
$rToe01J1Translate = `xform -q -t DSN_rToe01J1`;
$rToe01J1Rotate = `xform -q -ro DSN_rToe01J1`;
$rToe01J1Scale = `xform -q -r -s DSN_rToe01J1`;
setAttr ("DSN_lToe01J1.translate", ($rToe01J1Translate[0]*-1), $rToe01J1Translate[1], $rToe01J1Translate[2]);
setAttr ("DSN_lToe01J1.rotate", $rToe01J1Rotate[0], ($rToe01J1Rotate[1]*-1), ($rToe01J1Rotate[2]*-1));
setAttr ("DSN_lToe01J1.scale", $rToe01J1Scale[0], $rToe01J1Scale[1], $rToe01J1Scale[2]);

$rToe01J2Translate = `xform -q -t DSN_rToe01J2`;
$rToe01J2Rotate = `xform -q -ro DSN_rToe01J2`;
$rToe01J2Scale = `xform -q -r -s DSN_rToe01J2`;
setAttr ("DSN_lToe01J2.translate", ($rToe01J2Translate[0]*-1), $rToe01J2Translate[1], $rToe01J2Translate[2]);
setAttr ("DSN_lToe01J2.rotate", $rToe01J2Rotate[0], ($rToe01J2Rotate[1]*-1), ($rToe01J2Rotate[2]*-1));
setAttr ("DSN_lToe01J2.scale", $rToe01J2Scale[0], $rToe01J2Scale[1], $rToe01J2Scale[2]);

$rToe01JTipTranslate = `xform -q -t DSN_rToe01JTip`;
$rToe01JTipRotate = `xform -q -ro DSN_rToe01JTip`;
$rToe01JTipScale = `xform -q -r -s DSN_rToe01JTip`;
setAttr ("DSN_lToe01JTip.translate", ($rToe01JTipTranslate[0]*-1), $rToe01JTipTranslate[1], $rToe01JTipTranslate[2]);
setAttr ("DSN_lToe01JTip.rotate", $rToe01JTipRotate[0], ($rToe01JTipRotate[1]*-1), ($rToe01JTipRotate[2]*-1));
setAttr ("DSN_lToe01JTip.scale", $rToe01JTipScale[0], $rToe01JTipScale[1], $rToe01JTipScale[2]);
}

if( `objExists DSN_rToe02J1` )
{
$rToe02J1Translate = `xform -q -t DSN_rToe02J1`;
$rToe02J1Rotate = `xform -q -ro DSN_rToe02J1`;
$rToe02J1Scale = `xform -q -r -s DSN_rToe02J1`;
setAttr ("DSN_lToe02J1.translate", ($rToe02J1Translate[0]*-1), $rToe02J1Translate[1], $rToe02J1Translate[2]);
setAttr ("DSN_lToe02J1.rotate", $rToe02J1Rotate[0], ($rToe02J1Rotate[1]*-1), ($rToe02J1Rotate[2]*-1));
setAttr ("DSN_lToe02J1.scale", $rToe02J1Scale[0], $rToe02J1Scale[1], $rToe02J1Scale[2]);

$rToe02J2Translate = `xform -q -t DSN_rToe02J2`;
$rToe02J2Rotate = `xform -q -ro DSN_rToe02J2`;
$rToe02J2Scale = `xform -q -r -s DSN_rToe02J2`;
setAttr ("DSN_lToe02J2.translate", ($rToe02J2Translate[0]*-1), $rToe02J2Translate[1], $rToe02J2Translate[2]);
setAttr ("DSN_lToe02J2.rotate", $rToe02J2Rotate[0], ($rToe02J2Rotate[1]*-1), ($rToe02J2Rotate[2]*-1));
setAttr ("DSN_lToe02J2.scale", $rToe02J2Scale[0], $rToe02J2Scale[1], $rToe02J2Scale[2]);

$rToe02J3Translate = `xform -q -t DSN_rToe02J3`;
$rToe02J3Rotate = `xform -q -ro DSN_rToe02J3`;
$rToe02J3Scale = `xform -q -r -s DSN_rToe02J3`;
setAttr ("DSN_lToe02J3.translate", ($rToe02J3Translate[0]*-1), $rToe02J3Translate[1], $rToe02J3Translate[2]);
setAttr ("DSN_lToe02J3.rotate", $rToe02J3Rotate[0], ($rToe02J3Rotate[1]*-1), ($rToe02J3Rotate[2]*-1));
setAttr ("DSN_lToe02J3.scale", $rToe02J3Scale[0], $rToe02J3Scale[1], $rToe02J3Scale[2]);

$rToe02JTipTranslate = `xform -q -t DSN_rToe02JTip`;
$rToe02JTipRotate = `xform -q -ro DSN_rToe02JTip`;
$rToe02JTipScale = `xform -q -r -s DSN_rToe02JTip`;
setAttr ("DSN_lToe02JTip.translate", ($rToe02JTipTranslate[0]*-1), $rToe02JTipTranslate[1], $rToe02JTipTranslate[2]);
setAttr ("DSN_lToe02JTip.rotate", $rToe02JTipRotate[0], ($rToe02JTipRotate[1]*-1), ($rToe02JTipRotate[2]*-1));
setAttr ("DSN_lToe02JTip.scale", $rToe02JTipScale[0], $rToe02JTipScale[1], $rToe02JTipScale[2]);
}

if( `objExists DSN_rToe03J1` )
{
$rToe03J1Translate = `xform -q -t DSN_rToe03J1`;
$rToe03J1Rotate = `xform -q -ro DSN_rToe03J1`;
$rToe03J1Scale = `xform -q -r -s DSN_rToe03J1`;
setAttr ("DSN_lToe03J1.translate", ($rToe03J1Translate[0]*-1), $rToe03J1Translate[1], $rToe03J1Translate[2]);
setAttr ("DSN_lToe03J1.rotate", $rToe03J1Rotate[0], ($rToe03J1Rotate[1]*-1), ($rToe03J1Rotate[2]*-1));
setAttr ("DSN_lToe03J1.scale", $rToe03J1Scale[0], $rToe03J1Scale[1], $rToe03J1Scale[2]);

$rToe03J2Translate = `xform -q -t DSN_rToe03J2`;
$rToe03J2Rotate = `xform -q -ro DSN_rToe03J2`;
$rToe03J2Scale = `xform -q -r -s DSN_rToe03J2`;
setAttr ("DSN_lToe03J2.translate", ($rToe03J2Translate[0]*-1), $rToe03J2Translate[1], $rToe03J2Translate[2]);
setAttr ("DSN_lToe03J2.rotate", $rToe03J2Rotate[0], ($rToe03J2Rotate[1]*-1), ($rToe03J2Rotate[2]*-1));
setAttr ("DSN_lToe03J2.scale", $rToe03J2Scale[0], $rToe03J2Scale[1], $rToe03J2Scale[2]);

$rToe03J3Translate = `xform -q -t DSN_rToe03J3`;
$rToe03J3Rotate = `xform -q -ro DSN_rToe03J3`;
$rToe03J3Scale = `xform -q -r -s DSN_rToe03J3`;
setAttr ("DSN_lToe03J3.translate", ($rToe03J3Translate[0]*-1), $rToe03J3Translate[1], $rToe03J3Translate[2]);
setAttr ("DSN_lToe03J3.rotate", $rToe03J3Rotate[0], ($rToe03J3Rotate[1]*-1), ($rToe03J3Rotate[2]*-1));
setAttr ("DSN_lToe03J3.scale", $rToe03J3Scale[0], $rToe03J3Scale[1], $rToe03J3Scale[2]);

$rToe03JTipTranslate = `xform -q -t DSN_rToe03JTip`;
$rToe03JTipRotate = `xform -q -ro DSN_rToe03JTip`;
$rToe03JTipScale = `xform -q -r -s DSN_rToe03JTip`;
setAttr ("DSN_lToe03JTip.translate", ($rToe03JTipTranslate[0]*-1), $rToe03JTipTranslate[1], $rToe03JTipTranslate[2]);
setAttr ("DSN_lToe03JTip.rotate", $rToe03JTipRotate[0], ($rToe03JTipRotate[1]*-1), ($rToe03JTipRotate[2]*-1));
setAttr ("DSN_lToe03JTip.scale", $rToe03JTipScale[0], $rToe03JTipScale[1], $rToe03JTipScale[2]);
}

if( `objExists DSN_rToe04J1` )
{
$rToe04J1Translate = `xform -q -t DSN_rToe04J1`;
$rToe04J1Rotate = `xform -q -ro DSN_rToe04J1`;
$rToe04J1Scale = `xform -q -r -s DSN_rToe04J1`;
setAttr ("DSN_lToe04J1.translate", ($rToe04J1Translate[0]*-1), $rToe04J1Translate[1], $rToe04J1Translate[2]);
setAttr ("DSN_lToe04J1.rotate", $rToe04J1Rotate[0], ($rToe04J1Rotate[1]*-1), ($rToe04J1Rotate[2]*-1));
setAttr ("DSN_lToe04J1.scale", $rToe04J1Scale[0], $rToe04J1Scale[1], $rToe04J1Scale[2]);

$rToe04J2Translate = `xform -q -t DSN_rToe04J2`;
$rToe04J2Rotate = `xform -q -ro DSN_rToe04J2`;
$rToe04J2Scale = `xform -q -r -s DSN_rToe04J2`;
setAttr ("DSN_lToe04J2.translate", ($rToe04J2Translate[0]*-1), $rToe04J2Translate[1], $rToe04J2Translate[2]);
setAttr ("DSN_lToe04J2.rotate", $rToe04J2Rotate[0], ($rToe04J2Rotate[1]*-1), ($rToe04J2Rotate[2]*-1));
setAttr ("DSN_lToe04J2.scale", $rToe04J2Scale[0], $rToe04J2Scale[1], $rToe04J2Scale[2]);

$rToe04J3Translate = `xform -q -t DSN_rToe04J3`;
$rToe04J3Rotate = `xform -q -ro DSN_rToe04J3`;
$rToe04J3Scale = `xform -q -r -s DSN_rToe04J3`;
setAttr ("DSN_lToe04J3.translate", ($rToe04J3Translate[0]*-1), $rToe04J3Translate[1], $rToe04J3Translate[2]);
setAttr ("DSN_lToe04J3.rotate", $rToe04J3Rotate[0], ($rToe04J3Rotate[1]*-1), ($rToe04J3Rotate[2]*-1));
setAttr ("DSN_lToe04J3.scale", $rToe04J3Scale[0], $rToe04J3Scale[1], $rToe04J3Scale[2]);

$rToe04JTipTranslate = `xform -q -t DSN_rToe04JTip`;
$rToe04JTipRotate = `xform -q -ro DSN_rToe04JTip`;
$rToe04JTipScale = `xform -q -r -s DSN_rToe04JTip`;
setAttr ("DSN_lToe04JTip.translate", ($rToe04JTipTranslate[0]*-1), $rToe04JTipTranslate[1], $rToe04JTipTranslate[2]);
setAttr ("DSN_lToe04JTip.rotate", $rToe04JTipRotate[0], ($rToe04JTipRotate[1]*-1), ($rToe04JTipRotate[2]*-1));
setAttr ("DSN_lToe04JTip.scale", $rToe04JTipScale[0], $rToe04JTipScale[1], $rToe04JTipScale[2]);
}

if( `objExists DSN_rToe05J1` )
{
$rToe05J1Translate = `xform -q -t DSN_rToe05J1`;
$rToe05J1Rotate = `xform -q -ro DSN_rToe05J1`;
$rToe05J1Scale = `xform -q -r -s DSN_rToe05J1`;
setAttr ("DSN_lToe05J1.translate", ($rToe05J1Translate[0]*-1), $rToe05J1Translate[1], $rToe05J1Translate[2]);
setAttr ("DSN_lToe05J1.rotate", $rToe05J1Rotate[0], ($rToe05J1Rotate[1]*-1), ($rToe05J1Rotate[2]*-1));
setAttr ("DSN_lToe05J1.scale", $rToe05J1Scale[0], $rToe05J1Scale[1], $rToe05J1Scale[2]);

$rToe05J2Translate = `xform -q -t DSN_rToe05J2`;
$rToe05J2Rotate = `xform -q -ro DSN_rToe05J2`;
$rToe05J2Scale = `xform -q -r -s DSN_rToe05J2`;
setAttr ("DSN_lToe05J2.translate", ($rToe05J2Translate[0]*-1), $rToe05J2Translate[1], $rToe05J2Translate[2]);
setAttr ("DSN_lToe05J2.rotate", $rToe05J2Rotate[0], ($rToe05J2Rotate[1]*-1), ($rToe05J2Rotate[2]*-1));
setAttr ("DSN_lToe05J2.scale", $rToe05J2Scale[0], $rToe05J2Scale[1], $rToe05J2Scale[2]);

$rToe05J3Translate = `xform -q -t DSN_rToe05J3`;
$rToe05J3Rotate = `xform -q -ro DSN_rToe05J3`;
$rToe05J3Scale = `xform -q -r -s DSN_rToe05J3`;
setAttr ("DSN_lToe05J3.translate", ($rToe05J3Translate[0]*-1), $rToe05J3Translate[1], $rToe05J3Translate[2]);
setAttr ("DSN_lToe05J3.rotate", $rToe05J3Rotate[0], ($rToe05J3Rotate[1]*-1), ($rToe05J3Rotate[2]*-1));
setAttr ("DSN_lToe05J3.scale", $rToe05J3Scale[0], $rToe05J3Scale[1], $rToe05J3Scale[2]);

$rToe05JTipTranslate = `xform -q -t DSN_rToe05JTip`;
$rToe05JTipRotate = `xform -q -ro DSN_rToe05JTip`;
$rToe05JTipScale = `xform -q -r -s DSN_rToe05JTip`;
setAttr ("DSN_lToe05JTip.translate", ($rToe05JTipTranslate[0]*-1), $rToe05JTipTranslate[1], $rToe05JTipTranslate[2]);
setAttr ("DSN_lToe05JTip.rotate", $rToe05JTipRotate[0], ($rToe05JTipRotate[1]*-1), ($rToe05JTipRotate[2]*-1));
setAttr ("DSN_lToe05JTip.scale", $rToe05JTipScale[0], $rToe05JTipScale[1], $rToe05JTipScale[2]);
}

if( `objExists DSN_rToe06J1` )
{
$rToe06J1Translate = `xform -q -t DSN_rToe06J1`;
$rToe06J1Rotate = `xform -q -ro DSN_rToe06J1`;
$rToe06J1Scale = `xform -q -r -s DSN_rToe06J1`;
setAttr ("DSN_lToe06J1.translate", ($rToe06J1Translate[0]*-1), $rToe06J1Translate[1], $rToe06J1Translate[2]);
setAttr ("DSN_lToe06J1.rotate", $rToe06J1Rotate[0], ($rToe06J1Rotate[1]*-1), ($rToe06J1Rotate[2]*-1));
setAttr ("DSN_lToe06J1.scale", $rToe06J1Scale[0], $rToe06J1Scale[1], $rToe06J1Scale[2]);

$rToe06J2Translate = `xform -q -t DSN_rToe06J2`;
$rToe06J2Rotate = `xform -q -ro DSN_rToe06J2`;
$rToe06J2Scale = `xform -q -r -s DSN_rToe06J2`;
setAttr ("DSN_lToe06J2.translate", ($rToe06J2Translate[0]*-1), $rToe06J2Translate[1], $rToe06J2Translate[2]);
setAttr ("DSN_lToe06J2.rotate", $rToe06J2Rotate[0], ($rToe06J2Rotate[1]*-1), ($rToe06J2Rotate[2]*-1));
setAttr ("DSN_lToe06J2.scale", $rToe06J2Scale[0], $rToe06J2Scale[1], $rToe06J2Scale[2]);

$rToe06J3Translate = `xform -q -t DSN_rToe06J3`;
$rToe06J3Rotate = `xform -q -ro DSN_rToe06J3`;
$rToe06J3Scale = `xform -q -r -s DSN_rToe06J3`;
setAttr ("DSN_lToe06J3.translate", ($rToe06J3Translate[0]*-1), $rToe06J3Translate[1], $rToe06J3Translate[2]);
setAttr ("DSN_lToe06J3.rotate", $rToe06J3Rotate[0], ($rToe06J3Rotate[1]*-1), ($rToe06J3Rotate[2]*-1));
setAttr ("DSN_lToe06J3.scale", $rToe06J3Scale[0], $rToe06J3Scale[1], $rToe06J3Scale[2]);

$rToe06JTipTranslate = `xform -q -t DSN_rToe06JTip`;
$rToe06JTipRotate = `xform -q -ro DSN_rToe06JTip`;
$rToe06JTipScale = `xform -q -r -s DSN_rToe06JTip`;
setAttr ("DSN_lToe06JTip.translate", ($rToe06JTipTranslate[0]*-1), $rToe06JTipTranslate[1], $rToe06JTipTranslate[2]);
setAttr ("DSN_lToe06JTip.rotate", $rToe06JTipRotate[0], ($rToe06JTipRotate[1]*-1), ($rToe06JTipRotate[2]*-1));
setAttr ("DSN_lToe06JTip.scale", $rToe06JTipScale[0], $rToe06JTipScale[1], $rToe06JTipScale[2]);
}

if( `objExists DSN_rToe07J1` )
{
$rToe07J1Translate = `xform -q -t DSN_rToe07J1`;
$rToe07J1Rotate = `xform -q -ro DSN_rToe07J1`;
$rToe07J1Scale = `xform -q -r -s DSN_rToe07J1`;
setAttr ("DSN_lToe07J1.translate", ($rToe07J1Translate[0]*-1), $rToe07J1Translate[1], $rToe07J1Translate[2]);
setAttr ("DSN_lToe07J1.rotate", $rToe07J1Rotate[0], ($rToe07J1Rotate[1]*-1), ($rToe07J1Rotate[2]*-1));
setAttr ("DSN_lToe07J1.scale", $rToe07J1Scale[0], $rToe07J1Scale[1], $rToe07J1Scale[2]);

$rToe07J2Translate = `xform -q -t DSN_rToe07J2`;
$rToe07J2Rotate = `xform -q -ro DSN_rToe07J2`;
$rToe07J2Scale = `xform -q -r -s DSN_rToe07J2`;
setAttr ("DSN_lToe07J2.translate", ($rToe07J2Translate[0]*-1), $rToe07J2Translate[1], $rToe07J2Translate[2]);
setAttr ("DSN_lToe07J2.rotate", $rToe07J2Rotate[0], ($rToe07J2Rotate[1]*-1), ($rToe07J2Rotate[2]*-1));
setAttr ("DSN_lToe07J2.scale", $rToe07J2Scale[0], $rToe07J2Scale[1], $rToe07J2Scale[2]);

$rToe07J3Translate = `xform -q -t DSN_rToe07J3`;
$rToe07J3Rotate = `xform -q -ro DSN_rToe07J3`;
$rToe07J3Scale = `xform -q -r -s DSN_rToe07J3`;
setAttr ("DSN_lToe07J3.translate", ($rToe07J3Translate[0]*-1), $rToe07J3Translate[1], $rToe07J3Translate[2]);
setAttr ("DSN_lToe07J3.rotate", $rToe07J3Rotate[0], ($rToe07J3Rotate[1]*-1), ($rToe07J3Rotate[2]*-1));
setAttr ("DSN_lToe07J3.scale", $rToe07J3Scale[0], $rToe07J3Scale[1], $rToe07J3Scale[2]);

$rToe07JTipTranslate = `xform -q -t DSN_rToe07JTip`;
$rToe07JTipRotate = `xform -q -ro DSN_rToe07JTip`;
$rToe07JTipScale = `xform -q -r -s DSN_rToe07JTip`;
setAttr ("DSN_lToe07JTip.translate", ($rToe07JTipTranslate[0]*-1), $rToe07JTipTranslate[1], $rToe07JTipTranslate[2]);
setAttr ("DSN_lToe07JTip.rotate", $rToe07JTipRotate[0], ($rToe07JTipRotate[1]*-1), ($rToe07JTipRotate[2]*-1));
setAttr ("DSN_lToe07JTip.scale", $rToe07JTipScale[0], $rToe07JTipScale[1], $rToe07JTipScale[2]);
}

if( `objExists DSN_rToe08J1` )
{
$rToe08J1Translate = `xform -q -t DSN_rToe08J1`;
$rToe08J1Rotate = `xform -q -ro DSN_rToe08J1`;
$rToe08J1Scale = `xform -q -r -s DSN_rToe08J1`;
setAttr ("DSN_lToe08J1.translate", ($rToe08J1Translate[0]*-1), $rToe08J1Translate[1], $rToe08J1Translate[2]);
setAttr ("DSN_lToe08J1.rotate", $rToe08J1Rotate[0], ($rToe08J1Rotate[1]*-1), ($rToe08J1Rotate[2]*-1));
setAttr ("DSN_lToe08J1.scale", $rToe08J1Scale[0], $rToe08J1Scale[1], $rToe08J1Scale[2]);

$rToe08J2Translate = `xform -q -t DSN_rToe08J2`;
$rToe08J2Rotate = `xform -q -ro DSN_rToe08J2`;
$rToe08J2Scale = `xform -q -r -s DSN_rToe08J2`;
setAttr ("DSN_lToe08J2.translate", ($rToe08J2Translate[0]*-1), $rToe08J2Translate[1], $rToe08J2Translate[2]);
setAttr ("DSN_lToe08J2.rotate", $rToe08J2Rotate[0], ($rToe08J2Rotate[1]*-1), ($rToe08J2Rotate[2]*-1));
setAttr ("DSN_lToe08J2.scale", $rToe08J2Scale[0], $rToe08J2Scale[1], $rToe08J2Scale[2]);

$rToe08J3Translate = `xform -q -t DSN_rToe08J3`;
$rToe08J3Rotate = `xform -q -ro DSN_rToe08J3`;
$rToe08J3Scale = `xform -q -r -s DSN_rToe08J3`;
setAttr ("DSN_lToe08J3.translate", ($rToe08J3Translate[0]*-1), $rToe08J3Translate[1], $rToe08J3Translate[2]);
setAttr ("DSN_lToe08J3.rotate", $rToe08J3Rotate[0], ($rToe08J3Rotate[1]*-1), ($rToe08J3Rotate[2]*-1));
setAttr ("DSN_lToe08J3.scale", $rToe08J3Scale[0], $rToe08J3Scale[1], $rToe08J3Scale[2]);

$rToe08JTipTranslate = `xform -q -t DSN_rToe08JTip`;
$rToe08JTipRotate = `xform -q -ro DSN_rToe08JTip`;
$rToe08JTipScale = `xform -q -r -s DSN_rToe08JTip`;
setAttr ("DSN_lToe08JTip.translate", ($rToe08JTipTranslate[0]*-1), $rToe08JTipTranslate[1], $rToe08JTipTranslate[2]);
setAttr ("DSN_lToe08JTip.rotate", $rToe08JTipRotate[0], ($rToe08JTipRotate[1]*-1), ($rToe08JTipRotate[2]*-1));
setAttr ("DSN_lToe08JTip.scale", $rToe08JTipScale[0], $rToe08JTipScale[1], $rToe08JTipScale[2]);
}

if( `objExists DSN_rToe09J1` )
{
$rToe09J1Translate = `xform -q -t DSN_rToe09J1`;
$rToe09J1Rotate = `xform -q -ro DSN_rToe09J1`;
$rToe09J1Scale = `xform -q -r -s DSN_rToe09J1`;
setAttr ("DSN_lToe09J1.translate", ($rToe09J1Translate[0]*-1), $rToe09J1Translate[1], $rToe09J1Translate[2]);
setAttr ("DSN_lToe09J1.rotate", $rToe09J1Rotate[0], ($rToe09J1Rotate[1]*-1), ($rToe09J1Rotate[2]*-1));
setAttr ("DSN_lToe09J1.scale", $rToe09J1Scale[0], $rToe09J1Scale[1], $rToe09J1Scale[2]);

$rToe09J2Translate = `xform -q -t DSN_rToe09J2`;
$rToe09J2Rotate = `xform -q -ro DSN_rToe09J2`;
$rToe09J2Scale = `xform -q -r -s DSN_rToe09J2`;
setAttr ("DSN_lToe09J2.translate", ($rToe09J2Translate[0]*-1), $rToe09J2Translate[1], $rToe09J2Translate[2]);
setAttr ("DSN_lToe09J2.rotate", $rToe09J2Rotate[0], ($rToe09J2Rotate[1]*-1), ($rToe09J2Rotate[2]*-1));
setAttr ("DSN_lToe09J2.scale", $rToe09J2Scale[0], $rToe09J2Scale[1], $rToe09J2Scale[2]);

$rToe09J3Translate = `xform -q -t DSN_rToe09J3`;
$rToe09J3Rotate = `xform -q -ro DSN_rToe09J3`;
$rToe09J3Scale = `xform -q -r -s DSN_rToe09J3`;
setAttr ("DSN_lToe09J3.translate", ($rToe09J3Translate[0]*-1), $rToe09J3Translate[1], $rToe09J3Translate[2]);
setAttr ("DSN_lToe09J3.rotate", $rToe09J3Rotate[0], ($rToe09J3Rotate[1]*-1), ($rToe09J3Rotate[2]*-1));
setAttr ("DSN_lToe09J3.scale", $rToe09J3Scale[0], $rToe09J3Scale[1], $rToe09J3Scale[2]);

$rToe09JTipTranslate = `xform -q -t DSN_rToe09JTip`;
$rToe09JTipRotate = `xform -q -ro DSN_rToe09JTip`;
$rToe09JTipScale = `xform -q -r -s DSN_rToe09JTip`;
setAttr ("DSN_lToe09JTip.translate", ($rToe09JTipTranslate[0]*-1), $rToe09JTipTranslate[1], $rToe09JTipTranslate[2]);
setAttr ("DSN_lToe09JTip.rotate", $rToe09JTipRotate[0], ($rToe09JTipRotate[1]*-1), ($rToe09JTipRotate[2]*-1));
setAttr ("DSN_lToe09JTip.scale", $rToe09JTipScale[0], $rToe09JTipScale[1], $rToe09JTipScale[2]);
}

if( `objExists DSN_rToe10J1` )
{
$rToe10J1Translate = `xform -q -t DSN_rToe10J1`;
$rToe10J1Rotate = `xform -q -ro DSN_rToe10J1`;
$rToe10J1Scale = `xform -q -r -s DSN_rToe10J1`;
setAttr ("DSN_lToe10J1.translate", ($rToe10J1Translate[0]*-1), $rToe10J1Translate[1], $rToe10J1Translate[2]);
setAttr ("DSN_lToe10J1.rotate", $rToe10J1Rotate[0], ($rToe10J1Rotate[1]*-1), ($rToe10J1Rotate[2]*-1));
setAttr ("DSN_lToe10J1.scale", $rToe10J1Scale[0], $rToe10J1Scale[1], $rToe10J1Scale[2]);

$rToe10J2Translate = `xform -q -t DSN_rToe10J2`;
$rToe10J2Rotate = `xform -q -ro DSN_rToe10J2`;
$rToe10J2Scale = `xform -q -r -s DSN_rToe10J2`;
setAttr ("DSN_lToe10J2.translate", ($rToe10J2Translate[0]*-1), $rToe10J2Translate[1], $rToe10J2Translate[2]);
setAttr ("DSN_lToe10J2.rotate", $rToe10J2Rotate[0], ($rToe10J2Rotate[1]*-1), ($rToe10J2Rotate[2]*-1));
setAttr ("DSN_lToe10J2.scale", $rToe10J2Scale[0], $rToe10J2Scale[1], $rToe10J2Scale[2]);

$rToe10J3Translate = `xform -q -t DSN_rToe10J3`;
$rToe10J3Rotate = `xform -q -ro DSN_rToe10J3`;
$rToe10J3Scale = `xform -q -r -s DSN_rToe10J3`;
setAttr ("DSN_lToe10J3.translate", ($rToe10J3Translate[0]*-1), $rToe10J3Translate[1], $rToe10J3Translate[2]);
setAttr ("DSN_lToe10J3.rotate", $rToe10J3Rotate[0], ($rToe10J3Rotate[1]*-1), ($rToe10J3Rotate[2]*-1));
setAttr ("DSN_lToe10J3.scale", $rToe10J3Scale[0], $rToe10J3Scale[1], $rToe10J3Scale[2]);

$rToe10JTipTranslate = `xform -q -t DSN_rToe10JTip`;
$rToe10JTipRotate = `xform -q -ro DSN_rToe10JTip`;
$rToe10JTipScale = `xform -q -r -s DSN_rToe10JTip`;
setAttr ("DSN_lToe10JTip.translate", ($rToe10JTipTranslate[0]*-1), $rToe10JTipTranslate[1], $rToe10JTipTranslate[2]);
setAttr ("DSN_lToe10JTip.rotate", $rToe10JTipRotate[0], ($rToe10JTipRotate[1]*-1), ($rToe10JTipRotate[2]*-1));
setAttr ("DSN_lToe10JTip.scale", $rToe10JTipScale[0], $rToe10JTipScale[1], $rToe10JTipScale[2]);
}

$rHipTranslate = `xform -q -t DSN_rHip`;
$rHipRotate = `xform -q -ro DSN_rHip`;
$rHipScale = `xform -q -r -s DSN_rHip`;
setAttr  DSN_lHip.tx ($rHipTranslate[0]*-1);
setAttr  DSN_lHip.ty $rHipTranslate[1];

$rKneeTranslate = `xform -q -t DSN_rKnee`;
$rKneeRotate = `xform -q -ro DSN_rKnee`;
$rKneeScale = `xform -q -r -s DSN_rKnee`;
setAttr ("DSN_lKnee.translate", ($rKneeTranslate[0]*-1), $rKneeTranslate[1], $rKneeTranslate[2]);


$rAnkleTranslate = `xform -q -t DSN_rAnkle`;
$rAnkleRotate = `xform -q -ro DSN_rAnkle`;
$rAnkleScale = `xform -q -r -s DSN_rAnkle`;
setAttr ("DSN_lAnkle.translate", ($rAnkleTranslate[0]*-1), $rAnkleTranslate[1], $rAnkleTranslate[2]);
setAttr DSN_lAnkle.ry ($rAnkleRotate[1]*-1);
setAttr ("DSN_lAnkle.scale", $rAnkleScale[0], $rAnkleScale[1], $rAnkleScale[2]);

$rBallTranslate = `xform -q -t DSN_rBall`;
$rBallRotate = `xform -q -ro DSN_rBall`;
$rBallScale = `xform -q -r -s DSN_rBall`;
setAttr DSN_lBall.tx ($rBallTranslate[0]*-1);
setAttr DSN_lBall.tz $rBallTranslate[2];
setAttr DSN_lBall.ry ($rBallRotate[1]*-1);
setAttr ("DSN_lBall.scale", $rBallScale[0], $rBallScale[1], $rBallScale[2]);

if (`objExists DSN_lToe01J1`)
	{}
else
{
$rToeTranslate = `xform -q -t DSN_rToe`;
$rToeRotate = `xform -q -ro DSN_rToe`;
$rToeScale = `xform -q -r -s DSN_rToe`;
setAttr DSN_lToe.tx ($rToeTranslate[0]*-1);
setAttr DSN_lToe.tz $rToeTranslate[2];
setAttr DSN_lToe.ry ($rToeRotate[1]*-1);
setAttr ("DSN_lToe.scale", $rToeScale[0], $rToeScale[1], $rToeScale[2]);
}

//LOCATORS
$rFootOutTilt = `xform -q -t DSN_rFootOutTilt`;
setAttr  DSN_lFootOutTilt.tx ($rFootOutTilt[0]*-1);

$rFootInTilt = `xform -q -t DSN_rFootInTilt`;
setAttr  DSN_lFootInTilt.tx ($rFootInTilt[0]*-1);

$rFootHeelPivot = `xform -q -t DSN_rFootHeelPivot`;
setAttr  DSN_lFootHeelPivot.tz $rFootHeelPivot[2];

changeLinearUnit $currentUnit;

print "SUCCESS! MIRRORED CHARACTER'S RIGHT SIDE TO LEFT SIDE\n";
}
else
{
	error "NO DUMMY RIG TO MIRROR!\n";
}
}

global proc reset()
{
if (`objExists  DSN_MAIN`) 
	{

string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}

setAttr DSN_MAIN.scale 1 1 1;

select -cl;

if (`objExists DSN_lThumbJ1`)
{
select -add
DSN_lThumbJ1 DSN_lThumbJ2 DSN_lThumbJ3 DSN_lThumbJTip
DSN_rThumbJ1 DSN_rThumbJ2 DSN_rThumbJ3 DSN_rThumbJTip;
}

if (`objExists DSN_lFinger1J1`)
{
select -add
DSN_lFinger1J1 DSN_lFinger1J2 DSN_lFinger1J3 DSN_lFinger1JTip
DSN_rFinger1J1 DSN_rFinger1J2 DSN_rFinger1J3 DSN_rFinger1JTip;
}

if (`objExists DSN_lFinger2J1`)
{
select -add
DSN_lFinger2J1 DSN_lFinger2J2 DSN_lFinger2J3 DSN_lFinger2JTip
DSN_rFinger2J1 DSN_rFinger2J2 DSN_rFinger2J3 DSN_rFinger2JTip;
}

if (`objExists DSN_lFinger3J1`)
{
select -add
DSN_lFinger3J1 DSN_lFinger3J2 DSN_lFinger3J3 DSN_lFinger3JTip
DSN_rFinger3J1 DSN_rFinger3J2 DSN_rFinger3J3 DSN_rFinger3JTip;
}

if (`objExists DSN_lFinger4J1`)
{
select -add
DSN_lFinger4J1 DSN_lFinger4J2 DSN_lFinger4J3 DSN_lFinger4JTip
DSN_rFinger4J1 DSN_rFinger4J2 DSN_rFinger4J3 DSN_rFinger4JTip;
}

if (`objExists DSN_lFinger5J1`)
{
select -add
DSN_lFinger5J1 DSN_lFinger5J2 DSN_lFinger5J3 DSN_lFinger5JTip
DSN_rFinger5J1 DSN_rFinger5J2 DSN_rFinger5J3 DSN_rFinger5JTip;
}

if (`objExists DSN_lFinger6J1`)
{
select -add
DSN_lFinger6J1 DSN_lFinger6J2 DSN_lFinger6J3 DSN_lFinger6JTip
DSN_rFinger6J1 DSN_rFinger6J2 DSN_rFinger6J3 DSN_rFinger6JTip;
}

if (`objExists DSN_lFinger7J1`)
{
select -add
DSN_lFinger7J1 DSN_lFinger7J2 DSN_lFinger7J3 DSN_lFinger7JTip
DSN_rFinger7J1 DSN_rFinger7J2 DSN_rFinger7J3 DSN_rFinger7JTip;
}

if (`objExists DSN_lFinger8J1`)
{
select -add
DSN_lFinger8J1 DSN_lFinger8J2 DSN_lFinger8J3 DSN_lFinger8JTip
DSN_rFinger8J1 DSN_rFinger8J2 DSN_rFinger8J3 DSN_rFinger8JTip;
}

if (`objExists DSN_lFinger9J1`)
{
select -add
DSN_lFinger9J1 DSN_lFinger9J2 DSN_lFinger9J3 DSN_lFinger9JTip
DSN_rFinger9J1 DSN_rFinger9J2 DSN_rFinger9J3 DSN_rFinger9JTip;
}

if (`objExists DSN_lFinger10J1`)
{
select -add
DSN_lFinger10J1 DSN_lFinger10J2 DSN_lFinger10J3 DSN_lFinger10JTip
DSN_rFinger10J1 DSN_rFinger10J2 DSN_rFinger10J3 DSN_rFinger10JTip;
}


if (`objExists DSN_lToe01J1`)
{
select -add
DSN_lToe01J1 DSN_lToe01J2 DSN_lToe01JTip
DSN_rToe01J1 DSN_rToe01J2 DSN_rToe01JTip;
}

if (`objExists DSN_lToe02J1`)
{
select -add
DSN_lToe02J1 DSN_lToe02J2 DSN_lToe02J3 DSN_lToe02JTip
DSN_rToe02J1 DSN_rToe02J2 DSN_rToe02J3 DSN_rToe02JTip;
}

if (`objExists DSN_lToe03J1`)
{
select -add
DSN_lToe03J1 DSN_lToe03J2 DSN_lToe03J3 DSN_lToe03JTip
DSN_rToe03J1 DSN_rToe03J2 DSN_rToe03J3 DSN_rToe03JTip;
}

if (`objExists DSN_lToe04J1`)
{
select -add
DSN_lToe04J1 DSN_lToe04J2 DSN_lToe04J3 DSN_lToe04JTip
DSN_rToe04J1 DSN_rToe04J2 DSN_rToe04J3 DSN_rToe04JTip;
}

if (`objExists DSN_lToe05J1`)
{
select -add
DSN_lToe05J1 DSN_lToe05J2 DSN_lToe05J3 DSN_lToe05JTip
DSN_rToe05J1 DSN_rToe05J2 DSN_rToe05J3 DSN_rToe05JTip;
}

if (`objExists DSN_lToe06J1`)
{
select -add
DSN_lToe06J1 DSN_lToe06J2 DSN_lToe06J3 DSN_lToe06JTip
DSN_rToe06J1 DSN_rToe06J2 DSN_rToe06J3 DSN_rToe06JTip;
}

if (`objExists DSN_lToe07J1`)
{
select -add
DSN_lToe07J1 DSN_lToe07J2 DSN_lToe07J3 DSN_lToe07JTip
DSN_rToe07J1 DSN_rToe07J2 DSN_rToe07J3 DSN_rToe07JTip;
}

if (`objExists DSN_lToe08J1`)
{
select -add
DSN_lToe08J1 DSN_lToe08J2 DSN_lToe08J3 DSN_lToe08JTip
DSN_rToe08J1 DSN_rToe08J2 DSN_rToe08J3 DSN_rToe08JTip;
}

if (`objExists DSN_lToe09J1`)
{
select -add
DSN_lToe09J1 DSN_lToe09J2 DSN_lToe09J3 DSN_lToe09JTip
DSN_rToe09J1 DSN_rToe09J2 DSN_rToe09J3 DSN_rToe09JTip;
}

if (`objExists DSN_lToe10J1`)
{
select -add
DSN_lToe10J1 DSN_lToe10J2 DSN_lToe10J3 DSN_lToe10JTip
DSN_rToe10J1 DSN_rToe10J2 DSN_rToe10J3 DSN_rToe10JTip;
}

select -add
DSN_lWrist DSN_rWrist DSN_lClavicle DSN_rClavicle DSN_lEye DSN_rEye;

string $selectedDummies[] = `ls -sl`;
string $currentDummy;
for ($currentDummy in $selectedDummies)
{
setAttr {$currentDummy + ".translateX"} 0;
setAttr {$currentDummy + ".translateY"} 0;
setAttr {$currentDummy + ".translateZ"} 0;
setAttr {$currentDummy + ".rotateX"} 0;
setAttr {$currentDummy + ".rotateY"} 0;
setAttr {$currentDummy + ".rotateZ"} 0;
setAttr {$currentDummy + ".scaleX"} 1;
setAttr {$currentDummy + ".scaleY"} 1;
setAttr {$currentDummy + ".scaleZ"} 1;
}

setAttr DSN_lAnkle.translate 0 0 0;
setAttr DSN_lAnkle.ry 0;
setAttr DSN_lAnkle.scale 1 1 1;

setAttr DSN_rAnkle.translate 0 0 0;
setAttr DSN_rAnkle.ry 0;
setAttr DSN_rAnkle.scale 1 1 1;

setAttr DSN_lElbow.translate 0 0 0;
setAttr DSN_rElbow.translate 0 0 0;

setAttr DSN_lShoulder.translate 0 0 0;
setAttr DSN_rShoulder.translate 0 0 0;

setAttr DSN_HeadTip.translateY 0;
setAttr DSN_HeadTip.translateZ 0;
setAttr DSN_HeadTip.rotateX 0;
setAttr DSN_HeadTip.scale 1 1 1;

setAttr DSN_JawTip.translateY 0;
setAttr DSN_JawTip.translateZ 0;
setAttr DSN_JawTip.rotateX 0;
setAttr DSN_JawTip.scale 1 1 1;

setAttr DSN_Jaw.translateY 0;
setAttr DSN_Jaw.translateZ 0;
setAttr DSN_Jaw.rotateX 0;
setAttr DSN_Jaw.scale 1 1 1;

setAttr DSN_Head.translateY 0;
setAttr DSN_Head.translateZ 0;
setAttr DSN_Head.rotateX 0;
setAttr DSN_Head.scale 1 1 1;

setAttr DSN_Neck.translateY 0;
setAttr DSN_Neck.translateZ 0;
setAttr DSN_Neck.rotateX 0;
setAttr DSN_Neck.scale 1 1 1;

setAttr DSN_Spine04.translateY 0;
setAttr DSN_Spine04.translateZ 0;
setAttr DSN_Spine04.rotateX 0;
setAttr DSN_Spine04.scale 1 1 1;

setAttr DSN_Spine03.translateZ 0;
setAttr DSN_Spine02.translateZ 0;
setAttr DSN_Spine01.translateZ 0;

setAttr DSN_ROOT.translateY 0;
setAttr DSN_ROOT.translateZ 0;
setAttr DSN_ROOT.rotateX 0;
setAttr DSN_ROOT.scale 1 1 1;

setAttr DSN_lHip.translateX 0;
setAttr DSN_lHip.translateY 0;
setAttr DSN_rHip.translateX 0;
setAttr DSN_rHip.translateY 0;

setAttr DSN_lKnee.translate 0 0 0;
setAttr DSN_rKnee.translate 0 0 0;

setAttr DSN_lBall.translateX 0;
setAttr DSN_lBall.translateZ 0;
setAttr DSN_lBall.rotateY 0;
setAttr DSN_lBall.scale 1 1 1;
setAttr DSN_rBall.translateX 0;
setAttr DSN_rBall.translateZ 0;
setAttr DSN_rBall.rotateY 0;
setAttr DSN_rBall.scale 1 1 1;

if (`objExists DSN_lToe01J1`)
{
//setAttr DSN_lToe.translateZ 0;
//setAttr DSN_rToe.translateZ 0;
}

else
{
setAttr DSN_lToe.translateX 0;
setAttr DSN_rToe.translateX 0;
setAttr DSN_lToe.translateZ 0;
setAttr DSN_rToe.translateZ 0;
}

setAttr DSN_lToe.rotateY 0;
setAttr DSN_lToe.scale 1 1 1;
setAttr DSN_rToe.rotateY 0;
setAttr DSN_rToe.scale 1 1 1;

setAttr DSN_lFootOutTilt.translateX 0;
setAttr DSN_rFootOutTilt.translateX 0;
setAttr DSN_lFootInTilt.translateX 0;
setAttr DSN_rFootInTilt.translateX 0;
setAttr DSN_lFootHeelPivot.translateZ 0;
setAttr DSN_rFootHeelPivot.translateZ 0;

select -cl;

changeLinearUnit $currentUnit;

	print "SUCCESS! CHARACTER RESET TO DEFAULT PROPORTIONS\n";

}
else
{
	error "NO DUMMY RIG TO RESET!\n";
}
}

//////////////////////////////////////////////////////////////////////////////
///////////////////////////////    TOON ARM    ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////
global proc createToonArms()
{
		global string $charName;
string $name = `textField -q -text $charName`;

string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////LEFT ARM////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//CREATE LEFT CURVES
$lWristLoc = `xform -q -ws -rp {$name + "_lWristJ"}`;
$lElbowLoc = `xform -q -ws -rp {$name + "_lElbowJ"}`;
$lShoulderLoc = `xform -q -ws -rp {$name + "_lShoulderJ"}`;

curve -n {$name + "_lLowerArmCurve"} -d 1 -p $lElbowLoc[0] $lElbowLoc[1] $lElbowLoc[2]
-p $lWristLoc[0] $lWristLoc[1] $lWristLoc[2] -k 0 -k 1 ;

curve -n {$name + "_lUpperArmCurve"} -d 1 -p $lShoulderLoc[0] $lShoulderLoc[1] $lShoulderLoc[2]
-p $lElbowLoc[0] $lElbowLoc[1] $lElbowLoc[2] -k 0 -k 1 ;

rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_lLowerArmCurve"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_lUpperArmCurve"};

curve -n {$name + "_lLowerArmCurveGuide"} -d 1 -p $lElbowLoc[0] $lElbowLoc[1] $lElbowLoc[2]
-p $lWristLoc[0] $lWristLoc[1] $lWristLoc[2] -k 0 -k 1 ;

curve -n {$name + "_lUpperArmCurveGuide"} -d 1 -p $lShoulderLoc[0] $lShoulderLoc[1] $lShoulderLoc[2]
-p $lElbowLoc[0] $lElbowLoc[1] $lElbowLoc[2] -k 0 -k 1 ;
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_lLowerArmCurveGuide"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_lUpperArmCurveGuide"};
delete -ch {$name + "_lLowerArmCurve"} {$name + "_lUpperArmCurve"} {$name + "_lLowerArmCurveGuide"} {$name + "_lUpperArmCurveGuide"};

//CREATE LEFT LOCATOR FOR UP AXIS
spaceLocator -n {$name + "lArmUpLctr"};
parentConstraint {$name + "_lElbowFKAimLctr"} {$name + "lArmUpLctr"};
delete {$name + "lArmUpLctr_parentConstraint1"};
parent {$name + "lArmUpLctr"} {$name + "_lShoulderJ"};
orientConstraint -mo -skip x -skip z {$name + "_lElbowJ"} {$name + "_lShoulderJ"} {$name + "lArmUpLctr"};
setAttr {$name + "lArmUpLctr_orientConstraint1.interpType"} 2;

////////////////////////////////////LOWER ARM////////////////////////////////////
//LEFT LOWER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "lElbowCurveLctr"};
parentConstraint {$name + "_lWristFKC"} {$name + "lElbowCurveLctr"};
delete {$name + "lElbowCurveLctr_parentConstraint1"};
parent {$name + "lElbowCurveLctr"} {$name + "_lWristFKC"};                                
$lLowerArmLength = `getAttr {$name + "_lWristJDummy.tx"}`;
move -r -os ($lLowerArmLength *-1) 0 0 {$name + "lElbowCurveLctr"};
parent -w {$name + "lElbowCurveLctr"};
parentConstraint -mo {$name + "_lWristJ"} {$name + "lElbowCurveLctr"};

//LEFT LOWER CURVE CLUSTERS
select {$name + "_lLowerArmCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerArmTopClstr"};
group -em -n {$name + "_lLowerArmTopClstrG"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lLowerArmTopClstrG"};
parent {$name + "_lLowerArmTopClstrG"} {$name + "_lElbowJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerArmTopClstrG"};
parent -w {$name + "_lLowerArmTopClstrG"};
parent {$name + "_lLowerArmTopClstr"} {$name + "_lLowerArmTopClstrG"};
aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "lArmUpLctr"} {$name + "_lLowerArmTopClstrG"};

select {$name + "_lLowerArmCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerArmBtmClstr"};
group -em -n {$name + "_lLowerArmBtmClstrG"};
pointConstraint {$name + "_lWristJ"} {$name + "_lLowerArmBtmClstrG"};
parent {$name + "_lLowerArmBtmClstrG"} {$name + "_lElbowJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerArmBtmClstrG"};
parent {$name + "_lLowerArmBtmClstr"} {$name + "_lLowerArmBtmClstrG"};
parent -w {$name + "_lLowerArmBtmClstrG"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "lElbowCurveLctr"} {$name + "lElbowCurveLctr"} {$name + "_lLowerArmBtmClstrG"};

select {$name + "_lLowerArmCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerArmMidClstr"};

//LEFT LOWER GUIDE CURVE CLUSTERS
select {$name + "_lLowerArmCurveGuide.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerArmTopGuideClstr"};
group -em -n {$name + "_lLowerArmTopGuideClstrG"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lLowerArmTopGuideClstrG"};
parent {$name + "_lLowerArmTopGuideClstrG"} {$name + "_lElbowJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerArmTopGuideClstrG"};
parent -w {$name + "_lLowerArmTopGuideClstrG"};
parent {$name + "_lLowerArmTopGuideClstr"} {$name + "_lLowerArmTopGuideClstrG"};
aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "lArmUpLctr"} {$name + "_lLowerArmTopGuideClstrG"}; 

select {$name + "_lLowerArmCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerArmBtmGuideClstr"};
group -em -n {$name + "_lLowerArmBtmGuideClstrG"};
pointConstraint {$name + "_lWristJ"} {$name + "_lLowerArmBtmGuideClstrG"};
parent {$name + "_lLowerArmBtmGuideClstrG"} {$name + "_lElbowJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerArmBtmGuideClstrG"};
parent {$name + "_lLowerArmBtmGuideClstr"} {$name + "_lLowerArmBtmGuideClstrG"};
parent -w {$name + "_lLowerArmBtmGuideClstrG"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "lElbowCurveLctr"} {$name + "lElbowCurveLctr"} {$name + "_lLowerArmBtmGuideClstrG"};

////////////////////////////////////UPPER ARM////////////////////////////////////
//LEFT UPPER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_lShoulderCurveLctr"};
parentConstraint {$name + "_lElbowFKC"} {$name + "_lShoulderCurveLctr"};
delete {$name + "_lShoulderCurveLctr_parentConstraint1"};
parent {$name + "_lShoulderCurveLctr"} {$name + "_lElbowFKC"};
$lUpperArmLength = `getAttr {$name + "_lElbowJ.tx"}`;
move -r -os ($lUpperArmLength *-1) 0 0 {$name + "_lShoulderCurveLctr"};
parent -w {$name + "_lShoulderCurveLctr"};
parentConstraint -mo {$name + "_lElbowJ"} {$name + "_lShoulderCurveLctr"};

spaceLocator -n {$name + "_lElbowTopCurveLctr"};
parentConstraint {$name + "_lClavicleC"} {$name + "_lElbowTopCurveLctr"};
delete {$name + "_lElbowTopCurveLctr_parentConstraint1"};
parent {$name + "_lElbowTopCurveLctr"} {$name + "_lClavicleC"};
pointConstraint {$name + "_lShoulderFKC"} {$name + "_lElbowTopCurveLctr"};
delete {$name + "_lElbowTopCurveLctr_pointConstraint1"};
move -r -os $lUpperArmLength 0 0 {$name + "_lElbowTopCurveLctr"};
parent -w {$name + "_lElbowTopCurveLctr"};
parentConstraint -mo {$name + "_lClavicleC"} {$name + "_lElbowTopCurveLctr"};

//LEFT UPPER CURVE CLUSTERS
select {$name + "_lUpperArmCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "lUpperArmTopClstr"};
group -em -n {$name + "lUpperArmTopClstrG"};
pointConstraint {$name + "_lShoulderJ"} {$name + "lUpperArmTopClstrG"};
parent {$name + "lUpperArmTopClstrG"} {$name + "_lShoulderJ"};
makeIdentity -apply false -r 1 {$name + "lUpperArmTopClstrG"};
parent -w {$name + "lUpperArmTopClstrG"};
parent {$name + "lUpperArmTopClstr"} {$name + "lUpperArmTopClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderCurveLctr"} {$name + "_lElbowTopCurveLctr"} {$name + "lUpperArmTopClstrG"};

select {$name + "_lUpperArmCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperArmBtmClstr"};
group -em -n {$name + "_lUpperArmBtmClstrG"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lUpperArmBtmClstrG"};
orientConstraint {$name + "_lShoulderFKC"} {$name + "_lUpperArmBtmClstrG"};
delete {$name + "_lUpperArmBtmClstrG_orientConstraint1"};
parent {$name + "_lUpperArmBtmClstr"} {$name + "_lUpperArmBtmClstrG"};
aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "lArmUpLctr"} {$name + "lArmUpLctr"} {$name + "_lUpperArmBtmClstrG"}; 

select {$name + "_lUpperArmCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperArmMidClstr"};

//LEFT UPPER GUIDE CURVE CLUSTERS
select {$name + "_lUpperArmCurveGuide.cv[0:1]"} ;                            
newCluster " -envelope 1";
rename {$name + "_lUpperArmTopGuideClstr"};
group -em -n {$name + "_lUpperArmTopGuideClstrG"};
pointConstraint {$name + "_lShoulderJ"} {$name + "_lUpperArmTopGuideClstrG"};
parent {$name + "_lUpperArmTopGuideClstrG"} {$name + "_lShoulderJ"};
makeIdentity -apply false -r 1 {$name + "_lUpperArmTopGuideClstrG"};
parent -w {$name + "_lUpperArmTopGuideClstrG"};
parent {$name + "_lUpperArmTopGuideClstr"} {$name + "_lUpperArmTopGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderCurveLctr"} {$name + "_lElbowTopCurveLctr"} {$name + "_lUpperArmTopGuideClstrG"};

select {$name + "_lUpperArmCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperArmBtmGuideClstr"};
group -em -n {$name + "_lUpperArmBtmGuideClstrG"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lUpperArmBtmGuideClstrG"};
orientConstraint {$name + "_lShoulderFKC"} {$name + "_lUpperArmBtmGuideClstrG"};
delete {$name + "_lUpperArmBtmGuideClstrG_orientConstraint1"};
parent {$name + "_lUpperArmBtmGuideClstr"} {$name + "_lUpperArmBtmGuideClstrG"};
aimConstraint -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "lArmUpLctr"} {$name + "lArmUpLctr"} {$name + "_lUpperArmBtmGuideClstrG"}; 

////////////////////////////////////////////////////////////////////////////////
///////////////////////////CREATE LEFT CURVE CONTROLS///////////////////////////
////////////////////////////////////////////////////////////////////////////////

nurbsSquare -n {$name + "_lLowerArmCurveC"} -c 0 0 0 -nr 0 1 0 -sl1 1 -sl2 1 -sps 1 -d 3 -ch 1 ;
setAttr {$name + "_lLowerArmCurveC.rotateOrder"} 1;
parent -r -s {"right" + $name + "_lLowerArmCurveCShape"} {"bottom" + $name + "_lLowerArmCurveCShape"} {"left" + $name + "_lLowerArmCurveCShape"} {"top" + $name + "_lLowerArmCurveCShape"} {$name + "_lLowerArmCurveC"};
delete {"top" + $name + "_lLowerArmCurveC"} {"left" + $name + "_lLowerArmCurveC"} {"bottom" + $name + "_lLowerArmCurveC"} {"right" + $name + "_lLowerArmCurveC"};

$lElbowLength = `getAttr {$name + "_lElbowJ.tx"}`;
$lWristLength = `getAttr {$name + "_lWristJDummy.tx"}`;
$lArmLength = (($lElbowLength + $lWristLength) *.4);

setAttr ({$name + "_lLowerArmCurveC.scale"}, $lArmLength, $lArmLength, $lArmLength);
rotate -r 0 0 90 {$name + "_lLowerArmCurveC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lLowerArmCurveC"};

duplicate -n {$name + "_lElbowCurveC"} {$name + "_lLowerArmCurveC"};
setAttr {$name + "_lElbowCurveC.rotateOrder"} 1;
duplicate -n {$name + "_lUpperArmCurveC"} {$name + "_lLowerArmCurveC"};
setAttr {$name + "_lUpperArmCurveC.rotateOrder"} 1;

group -n {$name + "_lElbowCurveCG"} {$name + "_lElbowCurveC"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lElbowCurveCG"};
orientConstraint {$name + "lArmUpLctr"} {$name + "_lElbowCurveCG"};

//CONSTRAIN CENTER CLUSTERS TO MID CONTROL
delete {$name + "_lLowerArmTopClstrG_pointConstraint1"} {$name + "_lLowerArmTopClstrG_aimConstraint1"}
{$name + "_lLowerArmTopGuideClstrG_pointConstraint1"} {$name + "_lLowerArmTopGuideClstrG_aimConstraint1"}
{$name + "_lUpperArmBtmClstrG_pointConstraint1"} {$name + "_lUpperArmBtmClstrG_aimConstraint1"}
{$name + "_lUpperArmBtmGuideClstrG_pointConstraint1"} {$name + "_lUpperArmBtmGuideClstrG_aimConstraint1"};

parentConstraint {$name + "_lElbowCurveC"} {$name + "_lLowerArmTopClstrG"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lLowerArmTopGuideClstrG"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lUpperArmBtmClstrG"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lUpperArmBtmGuideClstrG"};

//CREATE LEFT LOCATORS FOR ANKLE TWIST
spaceLocator -n {$name + "_lElbowTwistLctr"};
duplicate -n {$name + "_lWristAimLctr"} {$name + "_lElbowTwistLctr"};
duplicate -n {$name + "_lWristTwistLctr"} {$name + "_lElbowTwistLctr"};
duplicate -n {$name + "_lElbowTwist75Lctr"} {$name + "_lElbowTwistLctr"};
duplicate -n {$name + "_lElbowTwist50Lctr"} {$name + "_lElbowTwistLctr"};
duplicate -n {$name + "_lElbowTwist25Lctr"} {$name + "_lElbowTwistLctr"};
parent {$name + "_lWristTwistLctr"} {$name + "_lWristAimLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lElbowCurveC"} {$name + "_lWristJ"} {$name + "_lElbowTwistLctr"};
pointConstraint {$name + "_lElbowCurveC"} {$name + "_lElbowTwistLctr"};
parentConstraint {$name + "_lElbowJ"} {$name + "_lWristAimLctr"};
parentConstraint {$name + "_lWristFKC"} {$name + "_lWristTwistLctr"};
delete {$name + "_lWristTwistLctr_parentConstraint1"};
parentConstraint -mo {$name + "_lWristJ"} {$name + "_lWristTwistLctr"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lElbowJ"} {$name + "_lElbowTwist75Lctr"};
setAttr {$name + "_lElbowTwist75Lctr_parentConstraint1." + $name + "_lElbowCurveCW0"} 3;
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lElbowJ"} {$name + "_lElbowTwist50Lctr"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lElbowJ"} {$name + "_lElbowTwist25Lctr"};
setAttr {$name + "_lElbowTwist25Lctr_parentConstraint1." + $name + "_lElbowJW1"} 3;

//CREATE MULTIPLY DIVIDES FOR LEFT TWIST
shadingNode -n {$name + "_lWristTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_lWristTwistLctr.rotateX"} {$name + "_lWristTwist_MD.input1X"};
connectAttr -force {$name + "_lWristTwistLctr.rotateX"} {$name + "_lWristTwist_MD.input1Y"};
connectAttr -force {$name + "_lWristTwistLctr.rotateX"} {$name + "_lWristTwist_MD.input1Z"};
setAttr {$name + "_lWristTwist_MD.input2X"} 0.25;
setAttr {$name + "_lWristTwist_MD.input2Y"} 0.5;
setAttr {$name + "_lWristTwist_MD.input2Z"} 0.75;

shadingNode -n {$name + "_lElbowTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_lElbowCurveC.rotateX"} {$name + "_lElbowTwist_MD.input1X"};
connectAttr -force {$name + "_lElbowCurveC.rotateX"} {$name + "_lElbowTwist_MD.input1Y"};
connectAttr -force {$name + "_lElbowCurveC.rotateX"} {$name + "_lElbowTwist_MD.input1Z"};
setAttr {$name + "_lElbowTwist_MD.input2X"} 0.25;
setAttr {$name + "_lElbowTwist_MD.input2Y"} 0.5;
setAttr {$name + "_lElbowTwist_MD.input2Z"} 0.75;

//LEFT MOTION PATHS FOR CONTROLS
group -n {$name + "_lLowerArmCurveCG"} {$name + "_lLowerArmCurveC"};
setAttr {$name + "_lLowerArmCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_lLowerArmGuide_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lElbowTwist50Lctr"} {$name + "_lLowerArmCurveCG"} {$name + "_lLowerArmCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerArmGuide_MP"};
setAttr {$name + "_lLowerArmGuide_MP.uValue"} .5;
parentConstraint {$name + "_lLowerArmCurveC"} {$name + "_lLowerArmMidClstr"};
connectAttr -force {$name + "_lWristTwist_MD.outputY"} {$name + "_lLowerArmGuide_MP.frontTwist"};

group -n {$name + "_lUpperArmCurveCG"} {$name + "_lUpperArmCurveC"};
setAttr {$name + "_lUpperArmCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_lUpperArmGuide_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "_lUpperArmCurveCG"} {$name + "_lUpperArmCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperArmGuide_MP"};
setAttr {$name + "_lUpperArmGuide_MP.uValue"} .5;
parentConstraint {$name + "_lUpperArmCurveC"} {$name + "_lUpperArmMidClstr"};
connectAttr -force {$name + "_lElbowTwist_MD.outputY"} {$name + "_lUpperArmGuide_MP.frontTwist"};

//LEFT INDIVIDUAL JOINT CONTROLS
circle -n {$name + "_CurveArm1b"} -c 0 0 2.5 -nr 1 0 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
circle -n {$name + "_CurveArm1c"} -c 0 0 -2.5 -nr 1 0 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
curve -n {$name + "_CurveArm1"} -d 1 -p 0 0 -2 -p 0 0 2 -k 0 -k 1 ;

parent -r -s {$name + "_CurveArm1bShape"} {$name + "_CurveArm1cShape"} {$name + "_CurveArm1"};
delete {$name + "_CurveArm1b"} {$name + "_CurveArm1c"};

setAttr {$name + "_CurveArm1.rotateOrder"} 1;

duplicate -n {$name + "_lLowerArmCurve1C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_lLowerArmCurve2C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_lLowerArmCurve3C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_lUpperArmCurve1C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_lUpperArmCurve2C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_lUpperArmCurve3C"} {$name + "_CurveArm1"};
scale -r ($lLowerArmLength/6) ($lLowerArmLength/6) ($lLowerArmLength/6) {$name + "_lLowerArmCurve1C"} {$name + "_lLowerArmCurve2C"} {$name + "_lLowerArmCurve3C"};
$lUpperArmLength = `getAttr {$name + "_lElbowJ.tx"}`;
scale -r ($lUpperArmLength/6) ($lUpperArmLength/6) ($lUpperArmLength/6) {$name + "_lUpperArmCurve1C"} {$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurve3C"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lLowerArmCurve1C"} {$name + "_lLowerArmCurve2C"} {$name + "_lLowerArmCurve3C"} {$name + "_lUpperArmCurve1C"} {$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurve3C"};

//LEFT MOTION PATHS FOR INDIVIDUAL JOINT CONTROLS
group -n {$name + "_lLowerArmCurve1CG"} {$name + "_lLowerArmCurve1C"};
setAttr {$name + "_lLowerArmCurve1CG.rotateOrder"} 1;
group -n {$name + "_lLowerArmCurve2CG"} {$name + "_lLowerArmCurve2C"};
setAttr {$name + "_lLowerArmCurve2CG.rotateOrder"} 1;
group -n {$name + "_lLowerArmCurve3CG"} {$name + "_lLowerArmCurve3C"};
setAttr {$name + "_lLowerArmCurve3CG.rotateOrder"} 1;
group -n {$name + "_lUpperArmCurve1CG"} {$name + "_lUpperArmCurve1C"};
setAttr {$name + "_lUpperArmCurve1CG.rotateOrder"} 1;
group -n {$name + "_lUpperArmCurve2CG"} {$name + "_lUpperArmCurve2C"};
setAttr {$name + "_lUpperArmCurve2CG.rotateOrder"} 1;
group -n {$name + "_lUpperArmCurve3CG"} {$name + "_lUpperArmCurve3C"};
setAttr {$name + "_lUpperArmCurve3CG.rotateOrder"} 1;

pathAnimation -n {$name + "_lLowerArm1_MP"} -fractionMode true -followAxis x -upAxis y-worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lElbowTwist75Lctr"} {$name + "_lLowerArmCurve1CG"} {$name + "_lLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerArm1_MP"};
setAttr {$name + "_lLowerArm1_MP.uValue"} .25;
connectAttr -force {$name + "_lWristTwist_MD.outputX"} {$name + "_lLowerArm1_MP.frontTwist"};

pathAnimation -n {$name + "_lLowerArm2_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lElbowTwist50Lctr"} {$name + "_lLowerArmCurve2CG"} {$name + "_lLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerArm2_MP"};
setAttr {$name + "_lLowerArm2_MP.uValue"} .5;
connectAttr -force {$name + "_lWristTwist_MD.outputY"} {$name + "_lLowerArm2_MP.frontTwist"};

pathAnimation -n {$name + "_lLowerArm3_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lElbowTwist25Lctr"} {$name + "_lLowerArmCurve3CG"} {$name + "_lLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerArm3_MP"};
setAttr {$name + "_lLowerArm3_MP.uValue"} .75;
connectAttr -force {$name + "_lWristTwist_MD.outputZ"} {$name + "_lLowerArm3_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperArm1_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "_lUpperArmCurve1CG"} {$name + "_lUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperArm1_MP"};
setAttr {$name + "_lUpperArm1_MP.uValue"} .25;
connectAttr -force {$name + "_lElbowTwist_MD.outputX"} {$name + "_lUpperArm1_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperArm2_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "_lUpperArmCurve2CG"} {$name + "_lUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperArm2_MP"};
setAttr {$name + "_lUpperArm2_MP.uValue"} .5;
connectAttr -force {$name + "_lElbowTwist_MD.outputY"} {$name + "_lUpperArm2_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperArm3_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lShoulderJ"} {$name + "_lUpperArmCurve3CG"} {$name + "_lUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperArm3_MP"};
setAttr {$name + "_lUpperArm3_MP.uValue"} .75;
connectAttr -force {$name + "_lElbowTwist_MD.outputZ"} {$name + "_lUpperArm3_MP.frontTwist"};


//LEFT CURVE ARM JOINTS
select -cl;
joint -n {$name + "_lLowerArmCurveJ1"};
parentConstraint {$name + "_lLowerArmCurve1C"} {$name + "_lLowerArmCurveJ1"};
select -cl;
joint -n {$name + "_lLowerArmCurveJ2"};
parentConstraint {$name + "_lLowerArmCurve2C"} {$name + "_lLowerArmCurveJ2"};
select -cl;
joint -n {$name + "_lLowerArmCurveJ3"};
parentConstraint {$name + "_lLowerArmCurve3C"} {$name + "_lLowerArmCurveJ3"};
select -cl;
joint -n {$name + "_lElbowCurveJ"};
parentConstraint {$name + "_lElbowCurveC"} {$name + "_lElbowCurveJ"};
select -cl;
joint -n {$name + "_lUpperArmCurveJ1"};
parentConstraint {$name + "_lUpperArmCurve1C"} {$name + "_lUpperArmCurveJ1"};
select -cl;
joint -n {$name + "_lUpperArmCurveJ2"};
parentConstraint {$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurveJ2"};
select -cl;
joint -n {$name + "_lUpperArmCurveJ3"};
parentConstraint {$name + "_lUpperArmCurve3C"} {$name + "_lUpperArmCurveJ3"};
select -cl;

joint -n {$name + "_lShoulderCurveJ"};
pointConstraint {$name + "_lShoulderJ"} {$name + "_lShoulderCurveJ"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lUpperArmCurve1C"} {$name + "_lUpperArmCurveJ1"} {$name + "_lShoulderCurveJ"}; 

//ADD LEFT CURVE ATTRIBUTE TO IK FK SWITCH
addAttr -ln "curve"  -at double  -min 0 -max 1 -dv 0 {$name + "_lArmSwitchC"};
setAttr -e-keyable true {$name + "_lArmSwitchC.curve"};

shadingNode -asUtility multiplyDivide -n {$name + "_lArmCurve_MD1"};
connectAttr -force {$name + "_lArmSwitchC.curve"} {$name + "_lArmCurve_MD1.input1X"};
setAttr {$name + "_lArmCurve_MD1.input2X"} 2;
shadingNode -asUtility multiplyDivide -n {$name + "_lArmCurve_MD2"};
connectAttr -force {$name + "_lArmCurve_MD1.outputX"} {$name + "_lArmCurve_MD2.input1X"};
connectAttr -force {$name + "_lShoulderFKC.scaleX"} {$name + "_lArmCurve_MD2.input2X"};

connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lLowerArmBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lLowerArmBtmClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lLowerArmTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lLowerArmTopClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lUpperArmBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lUpperArmBtmClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "_lUpperArmTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_lArmCurve_MD2.outputX"} {$name + "lUpperArmTopClstrG.scaleX"};

//ADD ATTRIBUTE TO MAIN CONTROL FOR LEFT ARM CURVE
addAttr -ln "armCurveMacro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.armCurveMacro"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_lLowerArmCurveC.v"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_lElbowCurveC.v"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_lUpperArmCurveC.v"};

addAttr -ln "armCurveMicro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.armCurveMicro"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lLowerArmCurve1C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lLowerArmCurve2C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lLowerArmCurve3C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lUpperArmCurve1C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lUpperArmCurve2C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_lUpperArmCurve3C.v"};

//CONNECT LEFT SCALE
shadingNode -asUtility blendColors -n {$name + "_lUpperArmCurve1_Blend"};
setAttr {$name + "_lUpperArmCurve1_Blend.blender"} 0.9;
connectAttr -force {$name + "_lShoulderJ.scale"} {$name + "_lUpperArmCurve1_Blend.color1"};
connectAttr -force {$name + "_lElbowJ.scale"} {$name + "_lUpperArmCurve1_Blend.color2"};
connectAttr -force {$name + "_lUpperArmCurve1_Blend.output"} {$name + "_lUpperArmCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_lUpperArmCurve2_Blend"} {$name + "_lUpperArmCurve1_Blend"};
setAttr {$name + "_lUpperArmCurve2_Blend.blender"} 0.75;
connectAttr -force {$name + "_lUpperArmCurve2_Blend.output"} {$name + "_lUpperArmCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_lUpperArmCurve3_Blend"} {$name + "_lUpperArmCurve1_Blend"};
setAttr {$name + "_lUpperArmCurve3_Blend.blender"} 0.6;
connectAttr -force {$name + "_lUpperArmCurve3_Blend.output"} {$name + "_lUpperArmCurveJ3.scale"};

duplicate -rr -ic -n {$name + "lElbowCurve_Blend"} {$name + "_lUpperArmCurve1_Blend"};
setAttr {$name + "lElbowCurve_Blend.blender"} 0.5;
connectAttr -force {$name + "lElbowCurve_Blend.output"} {$name + "_lElbowCurveJ.scale"};

duplicate -rr -ic -n {$name + "_lLowerArmCurve1_Blend"} {$name + "_lUpperArmCurve1_Blend"};
setAttr {$name + "_lLowerArmCurve1_Blend.blender"} 0.4;
connectAttr -force {$name + "_lLowerArmCurve1_Blend.output"} {$name + "_lLowerArmCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_lLowerArmCurve2_Blend"} {$name + "_lLowerArmCurve1_Blend"};
setAttr {$name + "_lLowerArmCurve2_Blend.blender"} 0.25;
connectAttr -force {$name + "_lLowerArmCurve2_Blend.output"} {$name + "_lLowerArmCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_lLowerArmCurve3_Blend"} {$name + "_lLowerArmCurve1_Blend"};
setAttr {$name + "_lLowerArmCurve3_Blend.blender"} 0.1;
connectAttr -force {$name + "_lLowerArmCurve3_Blend.output"} {$name + "_lLowerArmCurveJ3.scale"};


//LEFT CLEAN UP
group -em -n {$name + "_curveNodesG"};
parent {$name + "_curveNodesG"} {$name + "_MainC"};
group -em -n {$name + "_extraCurveNodesG"};
parent {$name + "_extraCurveNodesG"} {$name + "ExtraNodes"};

parent {$name + "lElbowCurveLctr"} {$name + "_lLowerArmTopClstrG"} {$name + "_lLowerArmBtmClstrG"}
{$name + "_lLowerArmTopGuideClstrG"} {$name + "_lLowerArmBtmGuideClstrG"} {$name + "_lShoulderCurveLctr"}
{$name + "_lElbowTopCurveLctr"} {$name + "lUpperArmTopClstrG"} {$name + "_lUpperArmBtmClstrG"} {$name + "_lUpperArmTopGuideClstrG"}
{$name + "_lUpperArmBtmGuideClstrG"} {$name + "_lElbowCurveCG"} {$name + "_lLowerArmCurveJ1"} {$name + "_lLowerArmCurveJ2"}
{$name + "_lLowerArmCurveJ3"} {$name + "_lElbowCurveJ"} {$name + "_lUpperArmCurveJ1"} {$name + "_lUpperArmCurveJ2"} {$name + "_lUpperArmCurveJ3"}
{$name + "_lShoulderCurveJ"} {$name + "_curveNodesG"};

parent {$name + "_lLowerArmCurve"} {$name + "_lUpperArmCurve"} {$name + "_lLowerArmCurveGuide"} {$name + "_lUpperArmCurveGuide"}
{$name + "_lLowerArmMidClstr"} {$name + "_lUpperArmMidClstr"} {$name + "_lLowerArmCurveCG"} {$name + "_lUpperArmCurveCG"}
{$name + "_lLowerArmCurve1CG"} {$name + "_lLowerArmCurve2CG"} {$name + "_lLowerArmCurve3CG"} {$name + "_lUpperArmCurve1CG"}
{$name + "_lUpperArmCurve2CG"} {$name + "_lUpperArmCurve3CG"} {$name + "_extraCurveNodesG"};

connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerArmCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerArmCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerArmCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerArmCurve3CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperArmCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperArmCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperArmCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperArmCurve3CG.scale"};

setAttr {$name + "_lWristIKLctr.v"} 0;
setAttr {$name + "_lWristFKLctr.v"} 0;
setAttr {$name + "_lElbowTopCurveLctr.v"} 0;
setAttr {$name + "lElbowCurveLctr.v"} 0;
setAttr {$name + "_lShoulderCurveLctr.v"} 0;
setAttr {$name + "_lElbowTwist25Lctr.v"} 0;
setAttr {$name + "_lElbowTwistLctr.v"} 0;
setAttr {$name + "_lWristAimLctr.v"} 0;
setAttr {$name + "_lElbowTwist75Lctr.v"} 0;
setAttr {$name + "_lElbowTwist50Lctr.v"} 0;

setAttr {$name + "_lUpperArmBtmGuideClstr.v"} 0;
setAttr {$name + "_lLowerArmMidClstr.v"} 0;
setAttr {$name + "_lUpperArmMidClstr.v"} 0;
setAttr {$name + "_lLowerArmTopClstr.v"} 0;
setAttr {$name + "_lLowerArmBtmClstr.v"} 0;
setAttr {$name + "_lLowerArmTopGuideClstr.v"} 0;
setAttr {$name + "_lLowerArmBtmGuideClstr.v"} 0;
setAttr {$name + "lUpperArmTopClstr.v"} 0;
setAttr {$name + "_lUpperArmBtmClstr.v"} 0;
setAttr {$name + "_lUpperArmTopGuideClstr.v"} 0;
setAttr {$name + "lArmUpLctr.v"} 0;

setAttr {$name + "_lShoulderJ.overrideEnabled"} 1;
setAttr {$name + "_lShoulderJ.overrideLevelOfDetail"} 1;

setAttr {$name + "_lUpperArmCurveGuide.v"} 0;
setAttr {$name + "_lLowerArmCurveGuide.v"} 0;
setAttr {$name + "_lUpperArmCurve.template"} 1;
setAttr {$name + "_lLowerArmCurve.template"} 1;

editDisplayLayerMembers -noRecurse {$name + "_JointsLayer"} {$name + "_lWristJ"} {$name + "_lWristJFK"} {$name + "_lLowerArmCurveJ1"}
{$name + "_lLowerArmCurveJ2"} {$name + "_lLowerArmCurveJ3"} {$name + "_lElbowCurveJ"} {$name + "_lUpperArmCurveJ1"} {$name + "_lUpperArmCurveJ2"}
{$name + "_lUpperArmCurveJ3"} {$name + "_lShoulderCurveJ"};

editDisplayLayerMembers -noRecurse {$name + "_ControlsLayer"} {$name + "_lUpperArmCurve3C"}
{$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurveC"} {$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurve1C"} {$name + "_lElbowCurveC"}
{$name + "_lLowerArmCurveC"} {$name + "_lLowerArmCurve3C"} {$name + "_lLowerArmCurve2C"} {$name + "_lLowerArmCurve1C"} {$name + "_lLowerArmCurve"}
{$name + "_lUpperArmCurve"} {$name + "_lLowerArmCurveGuide"} {$name + "_lUpperArmCurveGuide"} ;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////RIGHT ARM////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//CREATE RIGHT CURVES
$rWristLoc = `xform -q -ws -rp {$name + "_rWristJ"}`;
$rElbowLoc = `xform -q -ws -rp {$name + "_rElbowJ"}`;
$rShoulderLoc = `xform -q -ws -rp {$name + "_rShoulderJ"}`;

curve -n {$name + "_rLowerArmCurve"} -d 1 -p $rElbowLoc[0] $rElbowLoc[1] $rElbowLoc[2]
-p $rWristLoc[0] $rWristLoc[1] $rWristLoc[2] -k 0 -k 1 ;

curve -n {$name + "_rUpperArmCurve"} -d 1 -p $rShoulderLoc[0] $rShoulderLoc[1] $rShoulderLoc[2]
-p $rElbowLoc[0] $rElbowLoc[1] $rElbowLoc[2] -k 0 -k 1 ;

rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_rLowerArmCurve"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_rUpperArmCurve"};

curve -n {$name + "_rLowerArmCurveGuide"} -d 1 -p $rElbowLoc[0] $rElbowLoc[1] $rElbowLoc[2]
-p $rWristLoc[0] $rWristLoc[1] $rWristLoc[2] -k 0 -k 1 ;

curve -n {$name + "_rUpperArmCurveGuide"} -d 1 -p $rShoulderLoc[0] $rShoulderLoc[1] $rShoulderLoc[2]
-p $rElbowLoc[0] $rElbowLoc[1] $rElbowLoc[2] -k 0 -k 1 ;
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_rLowerArmCurveGuide"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_rUpperArmCurveGuide"};
delete -ch {$name + "_rLowerArmCurve"} {$name + "_rUpperArmCurve"} {$name + "_rLowerArmCurveGuide"} {$name + "_rUpperArmCurveGuide"};

//CREATE RIGHT LOCATOR FOR UP AXIS
spaceLocator -n {$name + "rArmUpLctr"};
parentConstraint {$name + "_rElbowFKAimLctr"} {$name + "rArmUpLctr"};
delete {$name + "rArmUpLctr_parentConstraint1"};
parent {$name + "rArmUpLctr"} {$name + "_rShoulderJ"};
orientConstraint -mo -skip x -skip z {$name + "_rElbowJ"} {$name + "_rShoulderJ"} {$name + "rArmUpLctr"};
setAttr {$name + "rArmUpLctr_orientConstraint1.interpType"} 2;
rotate -r 180 0 0 {$name + "rArmUpLctr"};

////////////////////////////////////LOWER ARM////////////////////////////////////
//RIGHT LOWER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "rElbowCurveLctr"};
parentConstraint {$name + "_rWristFKC"} {$name + "rElbowCurveLctr"};
delete {$name + "rElbowCurveLctr_parentConstraint1"};
parent {$name + "rElbowCurveLctr"} {$name + "_rWristFKC"};                                
$rLowerArmLength = `getAttr {$name + "_rWristJDummy.tx"}`;
move -r -os ($rLowerArmLength *-1) 0 0 {$name + "rElbowCurveLctr"};
parent -w {$name + "rElbowCurveLctr"};
parentConstraint -mo {$name + "_rWristJ"} {$name + "rElbowCurveLctr"};

//RIGHT LOWER CURVE CLUSTERS
select {$name + "_rLowerArmCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "rLowerArmTopClstr"};
group -em -n {$name + "rLowerArmTopClstrG"};
pointConstraint {$name + "_rElbowJ"} {$name + "rLowerArmTopClstrG"};
parent {$name + "rLowerArmTopClstrG"} {$name + "_rElbowFKC"};
makeIdentity -apply false -r 1 {$name + "rLowerArmTopClstrG"};
parent -w {$name + "rLowerArmTopClstrG"};
parent {$name + "rLowerArmTopClstr"} {$name + "rLowerArmTopClstrG"};
aimConstraint -aimVector 0 0 1 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 -1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "rArmUpLctr"} {$name + "rLowerArmTopClstrG"};

select {$name + "_rLowerArmCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "rLowerArmBtmClstr"};
group -em -n {$name + "rLowerArmBtmClstrG"};
pointConstraint {$name + "_rWristJ"} {$name + "rLowerArmBtmClstrG"};
parent {$name + "rLowerArmBtmClstrG"} {$name + "_rElbowJ"};
makeIdentity -apply false -r 1 {$name + "rLowerArmBtmClstrG"};
parent {$name + "rLowerArmBtmClstr"} {$name + "rLowerArmBtmClstrG"};
parent -w {$name + "rLowerArmBtmClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "rElbowCurveLctr"} {$name + "rElbowCurveLctr"} {$name + "rLowerArmBtmClstrG"};

select {$name + "_rLowerArmCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerArmMidClstr"};

//RIGHT LOWER GUIDE CURVE CLUSTERS
select {$name + "_rLowerArmCurveGuide.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "rLowerArmTopGuideClstr"};
group -em -n {$name + "rLowerArmTopGuideClstrG"};
pointConstraint {$name + "_rElbowJ"} {$name + "rLowerArmTopGuideClstrG"};
parent {$name + "rLowerArmTopGuideClstrG"} {$name + "_rElbowFKC"};
makeIdentity -apply false -r 1 {$name + "rLowerArmTopGuideClstrG"};
parent -w {$name + "rLowerArmTopGuideClstrG"};
parent {$name + "rLowerArmTopGuideClstr"} {$name + "rLowerArmTopGuideClstrG"};
aimConstraint -aimVector 0 0 1 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 -1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "rArmUpLctr"} {$name + "rLowerArmTopGuideClstrG"};

select {$name + "_rLowerArmCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "rLowerArmBtmGuideClstr"};
group -em -n {$name + "rLowerArmBtmGuideClstrG"};
pointConstraint {$name + "_rWristJ"} {$name + "rLowerArmBtmGuideClstrG"};
parent {$name + "rLowerArmBtmGuideClstrG"} {$name + "_rElbowJ"};
makeIdentity -apply false -r 1 {$name + "rLowerArmBtmGuideClstrG"};
parent {$name + "rLowerArmBtmGuideClstr"} {$name + "rLowerArmBtmGuideClstrG"};
parent -w {$name + "rLowerArmBtmGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "rElbowCurveLctr"} {$name + "rElbowCurveLctr"} {$name + "rLowerArmBtmGuideClstrG"};

////////////////////////////////////UPPER ARM////////////////////////////////////
//RIGHT UPPER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_rShoulderCurveLctr"};
parentConstraint {$name + "_rElbowFKC"} {$name + "_rShoulderCurveLctr"};
delete {$name + "_rShoulderCurveLctr_parentConstraint1"};
parent {$name + "_rShoulderCurveLctr"} {$name + "_rElbowFKC"};
$rUpperArmLength = `getAttr {$name + "_rElbowJ.tx"}`;
move -r -os ($rUpperArmLength *-1) 0 0 {$name + "_rShoulderCurveLctr"};
parent -w {$name + "_rShoulderCurveLctr"};
parentConstraint -mo {$name + "_rElbowJ"} {$name + "_rShoulderCurveLctr"};

spaceLocator -n {$name + "_rElbowTopCurveLctr"};
parentConstraint {$name + "_rClavicleC"} {$name + "_rElbowTopCurveLctr"};
delete {$name + "_rElbowTopCurveLctr_parentConstraint1"};
parent {$name + "_rElbowTopCurveLctr"} {$name + "_rClavicleC"};
pointConstraint {$name + "_rShoulderFKC"} {$name + "_rElbowTopCurveLctr"};
delete {$name + "_rElbowTopCurveLctr_pointConstraint1"};
move -r -os ($rUpperArmLength* -1) 0 0 {$name + "_rElbowTopCurveLctr"};
parent -w {$name + "_rElbowTopCurveLctr"};
parentConstraint -mo {$name + "_rClavicleC"} {$name + "_rElbowTopCurveLctr"};

//RIGHT UPPER CURVE CLUSTERS
select {$name + "_rUpperArmCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperArmTopClstr"};
group -em -n {$name + "_rUpperArmTopClstrG"};
pointConstraint {$name + "_rShoulderJ"} {$name + "_rUpperArmTopClstrG"};
parent {$name + "_rUpperArmTopClstrG"} {$name + "_rShoulderJ"};
makeIdentity -apply false -r 1 {$name + "_rUpperArmTopClstrG"};
parent -w {$name + "_rUpperArmTopClstrG"};
parent {$name + "_rUpperArmTopClstr"} {$name + "_rUpperArmTopClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rShoulderCurveLctr"} {$name + "_rElbowTopCurveLctr"} {$name + "_rUpperArmTopClstrG"};

select {$name + "_rUpperArmCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperArmBtmClstr"};
group -em -n {$name + "_rUpperArmBtmClstrG"};
pointConstraint {$name + "_rElbowFKC"} {$name + "_rUpperArmBtmClstrG"};
orientConstraint {$name + "_rShoulderFKC"} {$name + "_rUpperArmBtmClstrG"};
delete {$name + "_rUpperArmBtmClstrG_orientConstraint1"};
parent {$name + "_rUpperArmBtmClstr"} {$name + "_rUpperArmBtmClstrG"};
aimConstraint -aimVector 0 0 1 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 -1 0 -worldUpObject {$name + "rArmUpLctr"} {$name + "rArmUpLctr"} {$name + "_rUpperArmBtmClstrG"};

select {$name + "_rUpperArmCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperArmMidClstr"};

//RIGHT UPPER GUIDE CURVE CLUSTERS
select {$name + "_rUpperArmCurveGuide.cv[0:1]"} ;                            
newCluster " -envelope 1";
rename {$name + "_rUpperArmTopGuideClstr"};
group -em -n {$name + "_rUpperArmTopGuideClstrG"};
pointConstraint {$name + "_rShoulderJ"} {$name + "_rUpperArmTopGuideClstrG"};
parent {$name + "_rUpperArmTopGuideClstrG"} {$name + "_rShoulderJ"};
makeIdentity -apply false -r 1 {$name + "_rUpperArmTopGuideClstrG"};
parent -w {$name + "_rUpperArmTopGuideClstrG"};
parent {$name + "_rUpperArmTopGuideClstr"} {$name + "_rUpperArmTopGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rShoulderCurveLctr"} {$name + "_rElbowTopCurveLctr"} {$name + "_rUpperArmTopGuideClstrG"};

select {$name + "_rUpperArmCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperArmBtmGuideClstr"};
group -em -n {$name + "_rUpperArmBtmGuideClstrG"};
pointConstraint {$name + "_rElbowFKC"} {$name + "_rUpperArmBtmGuideClstrG"};
orientConstraint {$name + "_rShoulderFKC"} {$name + "_rUpperArmBtmGuideClstrG"};
delete {$name + "_rUpperArmBtmGuideClstrG_orientConstraint1"};
parent {$name + "_rUpperArmBtmGuideClstr"} {$name + "_rUpperArmBtmGuideClstrG"};
aimConstraint -aimVector 0 0 1 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 -1 0 -worldUpObject {$name + "rArmUpLctr"} {$name + "rArmUpLctr"} {$name + "_rUpperArmBtmGuideClstrG"};

////////////////////////////////////////////////////////////////////////////////
///////////////////////////CREATE RIGHT CURVE CONTROLS///////////////////////////
////////////////////////////////////////////////////////////////////////////////

nurbsSquare -n {$name + "_rLowerArmCurveC"} -c 0 0 0 -nr 0 1 0 -sl1 1 -sl2 1 -sps 1 -d 3 -ch 1 ;
setAttr {$name + "_rLowerArmCurveC.rotateOrder"} 1;
parent -r -s {"right" + $name + "_rLowerArmCurveCShape"} {"bottom" + $name + "_rLowerArmCurveCShape"} {"left" + $name + "_rLowerArmCurveCShape"} {"top" + $name + "_rLowerArmCurveCShape"} {$name + "_rLowerArmCurveC"};
delete {"top" + $name + "_rLowerArmCurveC"} {"left" + $name + "_rLowerArmCurveC"} {"bottom" + $name + "_rLowerArmCurveC"} {"right" + $name + "_rLowerArmCurveC"};

$rElbowLength = `getAttr {$name + "_rElbowJ.tx"}`;
$rWristLength = `getAttr {$name + "_rWristJDummy.tx"}`;
$rArmLength = (($rElbowLength + $rWristLength) *.4);


setAttr ({$name + "_rLowerArmCurveC.scale"}, $rArmLength, $rArmLength, $rArmLength);
rotate -r 0 0 90 {$name + "_rLowerArmCurveC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLowerArmCurveC"};


duplicate -n {$name + "_rElbowCurveC"} {$name + "_rLowerArmCurveC"};
setAttr {$name + "_rElbowCurveC.rotateOrder"} 1;
duplicate -n {$name + "_rUpperArmCurveC"} {$name + "_rLowerArmCurveC"};
setAttr {$name + "_rUpperArmCurveC.rotateOrder"} 1;

group -n {$name + "_rElbowCurveCG"} {$name + "_rElbowCurveC"};
pointConstraint {$name + "_rElbowJ"} {$name + "_rElbowCurveCG"};
orientConstraint {$name + "rArmUpLctr"} {$name + "_rElbowCurveCG"};

//CONSTRAIN CENTER CLUSTERS TO MID CONTROL
delete {$name + "rLowerArmTopClstrG_pointConstraint1"} {$name + "rLowerArmTopClstrG_aimConstraint1"}
{$name + "rLowerArmTopGuideClstrG_pointConstraint1"} {$name + "rLowerArmTopGuideClstrG_aimConstraint1"}
{$name + "_rUpperArmBtmClstrG_pointConstraint1"} {$name + "_rUpperArmBtmClstrG_aimConstraint1"}
{$name + "_rUpperArmBtmGuideClstrG_pointConstraint1"} {$name + "_rUpperArmBtmGuideClstrG_aimConstraint1"};

parentConstraint {$name + "_rElbowCurveC"} {$name + "rLowerArmTopClstrG"};
parentConstraint {$name + "_rElbowCurveC"} {$name + "rLowerArmTopGuideClstrG"};
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rUpperArmBtmClstrG"};
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rUpperArmBtmGuideClstrG"};

//CREATE RIGHT LOCATORS FOR ANKLE TWIST
spaceLocator -n {$name + "_rElbowTwistLctr"};
duplicate -n {$name + "_rWristAimLctr"} {$name + "_rElbowTwistLctr"};
duplicate -n {$name + "_rWristTwistLctr"} {$name + "_rElbowTwistLctr"};
duplicate -n {$name + "_rElbowTwist75Lctr"} {$name + "_rElbowTwistLctr"};
duplicate -n {$name + "_rElbowTwist50Lctr"} {$name + "_rElbowTwistLctr"};
duplicate -n {$name + "_rElbowTwist25Lctr"} {$name + "_rElbowTwistLctr"};
parent {$name + "_rWristTwistLctr"} {$name + "_rWristAimLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rElbowCurveC"} {$name + "_rWristJ"} {$name + "_rElbowTwistLctr"};
pointConstraint {$name + "_rElbowCurveC"} {$name + "_rElbowTwistLctr"};
parentConstraint {$name + "_rElbowJ"} {$name + "_rWristAimLctr"};
parentConstraint {$name + "_rWristFKC"} {$name + "_rWristTwistLctr"};
delete {$name + "_rWristTwistLctr_parentConstraint1"};
parentConstraint -mo {$name + "_rWristJ"} {$name + "_rWristTwistLctr"};
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rElbowJ"} {$name + "_rElbowTwist75Lctr"};
setAttr {$name + "_rElbowTwist75Lctr_parentConstraint1." + $name + "_rElbowCurveCW0"} 3;
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rElbowJ"} {$name + "_rElbowTwist50Lctr"};
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rElbowJ"} {$name + "_rElbowTwist25Lctr"};
setAttr {$name + "_rElbowTwist25Lctr_parentConstraint1." + $name + "_rElbowJW1"} 3;

//CREATE MULTIPLY DIVIDES FOR RIGHT TWIST
shadingNode -n {$name + "_rWristTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_rWristTwistLctr.rotateX"} {$name + "_rWristTwist_MD.input1X"};
connectAttr -force {$name + "_rWristTwistLctr.rotateX"} {$name + "_rWristTwist_MD.input1Y"};
connectAttr -force {$name + "_rWristTwistLctr.rotateX"} {$name + "_rWristTwist_MD.input1Z"};
setAttr {$name + "_rWristTwist_MD.input2X"} 0.25;
setAttr {$name + "_rWristTwist_MD.input2Y"} 0.5;
setAttr {$name + "_rWristTwist_MD.input2Z"} 0.75;

shadingNode -n {$name + "_rElbowTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_rElbowCurveC.rotateX"} {$name + "_rElbowTwist_MD.input1X"};
connectAttr -force {$name + "_rElbowCurveC.rotateX"} {$name + "_rElbowTwist_MD.input1Y"};
connectAttr -force {$name + "_rElbowCurveC.rotateX"} {$name + "_rElbowTwist_MD.input1Z"};
setAttr {$name + "_rElbowTwist_MD.input2X"} 0.25;
setAttr {$name + "_rElbowTwist_MD.input2Y"} 0.5;
setAttr {$name + "_rElbowTwist_MD.input2Z"} 0.75;

//RIGHT MOTION PATHS FOR CONTROLS
group -n {$name + "_rLowerArmCurveCG"} {$name + "_rLowerArmCurveC"};
setAttr {$name + "_rLowerArmCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_rLowerArmGuide_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rElbowTwist50Lctr"} {$name + "_rLowerArmCurveCG"} {$name + "_rLowerArmCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerArmGuide_MP"};
setAttr {$name + "_rLowerArmGuide_MP.uValue"} .5;
parentConstraint {$name + "_rLowerArmCurveC"} {$name + "_rLowerArmMidClstr"};
connectAttr -force {$name + "_rWristTwist_MD.outputY"} {$name + "_rLowerArmGuide_MP.frontTwist"};

group -n {$name + "_rUpperArmCurveCG"} {$name + "_rUpperArmCurveC"};
setAttr {$name + "_rUpperArmCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_rUpperArmGuide_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "_rUpperArmCurveCG"} {$name + "_rUpperArmCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperArmGuide_MP"};
setAttr {$name + "_rUpperArmGuide_MP.uValue"} .5;
parentConstraint {$name + "_rUpperArmCurveC"} {$name + "_rUpperArmMidClstr"};
connectAttr -force {$name + "_rElbowTwist_MD.outputY"} {$name + "_rUpperArmGuide_MP.frontTwist"};

//RIGHT INDIVIDUAL JOINT CONTROLS
duplicate -n {$name + "_rLowerArmCurve1C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_rLowerArmCurve2C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_rLowerArmCurve3C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_rUpperArmCurve1C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_rUpperArmCurve2C"} {$name + "_CurveArm1"};
duplicate -n {$name + "_rUpperArmCurve3C"} {$name + "_CurveArm1"};
scale -r ($rLowerArmLength/6) ($rLowerArmLength/6) ($rLowerArmLength/6) {$name + "_rLowerArmCurve1C"} {$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurve3C"};
$rUpperArmLength = `getAttr {$name + "_rElbowJ.tx"}`;
scale -r ($rUpperArmLength/6) ($rUpperArmLength/6) ($rUpperArmLength/6) {$name + "_rUpperArmCurve1C"} {$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurve3C"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLowerArmCurve1C"} {$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurve3C"} {$name + "_rUpperArmCurve1C"} {$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurve3C"};

//RIGHT MOTION PATHS FOR INDIVIDUAL JOINT CONTROLS
group -n {$name + "_rLowerArmCurve1CG"} {$name + "_rLowerArmCurve1C"};
setAttr {$name + "_rLowerArmCurve1CG.rotateOrder"} 1;
group -n {$name + "_rLowerArmCurve2CG"} {$name + "_rLowerArmCurve2C"};
setAttr {$name + "_rLowerArmCurve2CG.rotateOrder"} 1;
group -n {$name + "_rLowerArmCurve3CG"} {$name + "_rLowerArmCurve3C"};
setAttr {$name + "_rLowerArmCurve3CG.rotateOrder"} 1;
group -n {$name + "_rUpperArmCurve1CG"} {$name + "_rUpperArmCurve1C"};
setAttr {$name + "_rUpperArmCurve1CG.rotateOrder"} 1;
group -n {$name + "_rUpperArmCurve2CG"} {$name + "_rUpperArmCurve2C"};
setAttr {$name + "_rUpperArmCurve2CG.rotateOrder"} 1;
group -n {$name + "_rUpperArmCurve3CG"} {$name + "_rUpperArmCurve3C"};
setAttr {$name + "_rUpperArmCurve3CG.rotateOrder"} 1;

pathAnimation -n {$name + "_rLowerArm1_MP"} -fractionMode true -followAxis x -upAxis y-worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rElbowTwist75Lctr"} {$name + "_rLowerArmCurve1CG"} {$name + "_rLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerArm1_MP"};
setAttr {$name + "_rLowerArm1_MP.uValue"} .25;
connectAttr -force {$name + "_rWristTwist_MD.outputX"} {$name + "_rLowerArm1_MP.frontTwist"};

pathAnimation -n {$name + "_rLowerArm2_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rElbowTwist50Lctr"} {$name + "_rLowerArmCurve2CG"} {$name + "_rLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerArm2_MP"};
setAttr {$name + "_rLowerArm2_MP.uValue"} .5;
connectAttr -force {$name + "_rWristTwist_MD.outputY"} {$name + "_rLowerArm2_MP.frontTwist"};

pathAnimation -n {$name + "_rLowerArm3_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rElbowTwist25Lctr"} {$name + "_rLowerArmCurve3CG"} {$name + "_rLowerArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerArm3_MP"};
setAttr {$name + "_rLowerArm3_MP.uValue"} .75;
connectAttr -force {$name + "_rWristTwist_MD.outputZ"} {$name + "_rLowerArm3_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperArm1_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "_rUpperArmCurve1CG"} {$name + "_rUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperArm1_MP"};
setAttr {$name + "_rUpperArm1_MP.uValue"} .25;
connectAttr -force {$name + "_rElbowTwist_MD.outputX"} {$name + "_rUpperArm1_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperArm2_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "_rUpperArmCurve2CG"} {$name + "_rUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperArm2_MP"};
setAttr {$name + "_rUpperArm2_MP.uValue"} .5;
connectAttr -force {$name + "_rElbowTwist_MD.outputY"} {$name + "_rUpperArm2_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperArm3_MP"} -fractionMode true -followAxis x -upAxis y -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 1 0 -worldUpObject {$name + "_rShoulderJ"} {$name + "_rUpperArmCurve3CG"} {$name + "_rUpperArmCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperArm3_MP"};
setAttr {$name + "_rUpperArm3_MP.uValue"} .75;
connectAttr -force {$name + "_rElbowTwist_MD.outputZ"} {$name + "_rUpperArm3_MP.frontTwist"};


//RIGHT CURVE ARM JOINTS
select -cl;
joint -n {$name + "_rLowerArmCurveJ1"};
setAttr {$name + "_rLowerArmCurveJ1.jointOrientX"} -180;
parentConstraint {$name + "_rLowerArmCurve1C"} {$name + "_rLowerArmCurveJ1"};
select -cl;
joint -n {$name + "_rLowerArmCurveJ2"};
setAttr {$name + "_rLowerArmCurveJ2.jointOrientX"} -180;
parentConstraint {$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurveJ2"};
select -cl;
joint -n {$name + "_rLowerArmCurveJ3"};
setAttr {$name + "_rLowerArmCurveJ3.jointOrientX"} -180;
parentConstraint {$name + "_rLowerArmCurve3C"} {$name + "_rLowerArmCurveJ3"};
select -cl;
joint -n {$name + "_rElbowCurveJ"};
setAttr {$name + "_rElbowCurveJ.jointOrientX"} -180;
parentConstraint {$name + "_rElbowCurveC"} {$name + "_rElbowCurveJ"};
select -cl;
joint -n {$name + "_rUpperArmCurveJ1"};
setAttr {$name + "_rUpperArmCurveJ1.jointOrientX"} -180;
parentConstraint {$name + "_rUpperArmCurve1C"} {$name + "_rUpperArmCurveJ1"};
select -cl;
joint -n {$name + "_rUpperArmCurveJ2"};
setAttr {$name + "_rUpperArmCurveJ2.jointOrientX"} -180;
parentConstraint {$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurveJ2"};
select -cl;
joint -n {$name + "_rUpperArmCurveJ3"};
setAttr {$name + "_rUpperArmCurveJ3.jointOrientX"} -180;
parentConstraint {$name + "_rUpperArmCurve3C"} {$name + "_rUpperArmCurveJ3"};
select -cl;

joint -n {$name + "_rShoulderCurveJ"};
pointConstraint {$name + "_rShoulderJ"} {$name + "_rShoulderCurveJ"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rUpperArmCurve1C"} {$name + "_rUpperArmCurveJ1"} {$name + "_rShoulderCurveJ"}; 

//ADD RIGHT CURVE ATTRIBUTE TO IK FK SWITCH
addAttr -ln "curve"  -at double  -min 0 -max 1 -dv 0 {$name + "_MainC"} {$name + "_rArmSwitchCG"} {$name + "_rArmSwitchC"};
setAttr -e-keyable true {$name + "_rArmSwitchC.curve"};

shadingNode -asUtility multiplyDivide -n {$name + "_rArmCurve_MD1"};
connectAttr -force {$name + "_rArmSwitchC.curve"} {$name + "_rArmCurve_MD1.input1X"};
setAttr {$name + "_rArmCurve_MD1.input2X"} 2;
shadingNode -asUtility multiplyDivide -n {$name + "_rArmCurve_MD2"};
connectAttr -force {$name + "_rArmCurve_MD1.outputX"} {$name + "_rArmCurve_MD2.input1X"};
connectAttr -force {$name + "_rShoulderFKC.scaleX"} {$name + "_rArmCurve_MD2.input2X"};

connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "rLowerArmBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "rLowerArmBtmClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "rLowerArmTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "rLowerArmTopClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "_rUpperArmBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "_rUpperArmBtmClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "_rUpperArmTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_rArmCurve_MD2.outputX"} {$name + "_rUpperArmTopClstrG.scaleX"};

//ADD ATTRIBUTE TO MAIN CONTROL FOR RIGHT ARM CURVE
addAttr -ln "regCurveMacro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.armCurveMacro"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_rLowerArmCurveC.v"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_rElbowCurveC.v"};
connectAttr -f {$name + "_MainC.armCurveMacro"} {$name + "_rUpperArmCurveC.v"};

addAttr -ln "regCurveMicro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.armCurveMicro"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rLowerArmCurve1C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rLowerArmCurve2C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rLowerArmCurve3C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rUpperArmCurve1C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rUpperArmCurve2C.v"};
connectAttr -f {$name + "_MainC.armCurveMicro"} {$name + "_rUpperArmCurve3C.v"};

//CONNECT RIGHT SCALE
shadingNode -asUtility blendColors -n {$name + "_rUpperArmCurve1_Blend"};
setAttr {$name + "_rUpperArmCurve1_Blend.blender"} 0.9;
connectAttr -force {$name + "_rShoulderJ.scale"} {$name + "_rUpperArmCurve1_Blend.color1"};
connectAttr -force {$name + "_rElbowJ.scale"} {$name + "_rUpperArmCurve1_Blend.color2"};
connectAttr -force {$name + "_rUpperArmCurve1_Blend.output"} {$name + "_rUpperArmCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_rUpperArmCurve2_Blend"} {$name + "_rUpperArmCurve1_Blend"};
setAttr {$name + "_rUpperArmCurve2_Blend.blender"} 0.75;
connectAttr -force {$name + "_rUpperArmCurve2_Blend.output"} {$name + "_rUpperArmCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_rUpperArmCurve3_Blend"} {$name + "_rUpperArmCurve1_Blend"};
setAttr {$name + "_rUpperArmCurve3_Blend.blender"} 0.6;
connectAttr -force {$name + "_rUpperArmCurve3_Blend.output"} {$name + "_rUpperArmCurveJ3.scale"};

duplicate -rr -ic -n {$name + "_rElbowCurve_Blend"} {$name + "_rUpperArmCurve1_Blend"};
setAttr {$name + "_rElbowCurve_Blend.blender"} 0.5;
connectAttr -force {$name + "_rElbowCurve_Blend.output"} {$name + "_rElbowCurveJ.scale"};

duplicate -rr -ic -n {$name + "_rLowerArmCurve1_Blend"} {$name + "_rUpperArmCurve1_Blend"};
setAttr {$name + "_rLowerArmCurve1_Blend.blender"} 0.4;
connectAttr -force {$name + "_rLowerArmCurve1_Blend.output"} {$name + "_rLowerArmCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_rLowerArmCurve2_Blend"} {$name + "_rLowerArmCurve1_Blend"};
setAttr {$name + "_rLowerArmCurve2_Blend.blender"} 0.25;
connectAttr -force {$name + "_rLowerArmCurve2_Blend.output"} {$name + "_rLowerArmCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_rLowerArmCurve3_Blend"} {$name + "_rLowerArmCurve1_Blend"};
setAttr {$name + "_rLowerArmCurve3_Blend.blender"} 0.1;
connectAttr -force {$name + "_rLowerArmCurve3_Blend.output"} {$name + "_rLowerArmCurveJ3.scale"};

//RIGHT CLEAN UP
parent {$name + "rElbowCurveLctr"} {$name + "rLowerArmTopClstrG"} {$name + "rLowerArmBtmClstrG"}
{$name + "rLowerArmTopGuideClstrG"} {$name + "rLowerArmBtmGuideClstrG"} {$name + "_rShoulderCurveLctr"}
{$name + "_rElbowTopCurveLctr"} {$name + "_rUpperArmTopClstrG"} {$name + "_rUpperArmBtmClstrG"} {$name + "_rUpperArmTopGuideClstrG"}
{$name + "_rUpperArmBtmGuideClstrG"} {$name + "_rElbowCurveCG"} {$name + "_rLowerArmCurveJ1"} {$name + "_rLowerArmCurveJ2"}
{$name + "_rLowerArmCurveJ3"} {$name + "_rElbowCurveJ"} {$name + "_rUpperArmCurveJ1"} {$name + "_rUpperArmCurveJ2"} {$name + "_rUpperArmCurveJ3"}
{$name + "_rShoulderCurveJ"} {$name + "_curveNodesG"};

parent {$name + "_rLowerArmCurve"} {$name + "_rUpperArmCurve"} {$name + "_rLowerArmCurveGuide"} {$name + "_rUpperArmCurveGuide"}
{$name + "_rLowerArmMidClstr"} {$name + "_rUpperArmMidClstr"} {$name + "_rLowerArmCurveCG"} {$name + "_rUpperArmCurveCG"}
{$name + "_rLowerArmCurve1CG"} {$name + "_rLowerArmCurve2CG"} {$name + "_rLowerArmCurve3CG"} {$name + "_rUpperArmCurve1CG"}
{$name + "_rUpperArmCurve2CG"} {$name + "_rUpperArmCurve3CG"} {$name + "_extraCurveNodesG"};

connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerArmCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerArmCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerArmCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerArmCurve3CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperArmCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperArmCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperArmCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperArmCurve3CG.scale"};

setAttr {$name + "_rWristIKLctr.v"} 0;
setAttr {$name + "_rWristFKLctr.v"} 0;
setAttr {$name + "_rElbowTopCurveLctr.v"} 0;
setAttr {$name + "rElbowCurveLctr.v"} 0;
setAttr {$name + "_rShoulderCurveLctr.v"} 0;
setAttr {$name + "_rElbowTwist25Lctr.v"} 0;
setAttr {$name + "_rElbowTwistLctr.v"} 0;
setAttr {$name + "_rWristAimLctr.v"} 0;
setAttr {$name + "_rElbowTwist75Lctr.v"} 0;
setAttr {$name + "_rElbowTwist50Lctr.v"} 0;

setAttr {$name + "_rUpperArmBtmGuideClstr.v"} 0;
setAttr {$name + "_rLowerArmMidClstr.v"} 0;
setAttr {$name + "_rUpperArmMidClstr.v"} 0;
setAttr {$name + "rLowerArmTopClstr.v"} 0;
setAttr {$name + "rLowerArmBtmClstr.v"} 0;
setAttr {$name + "rLowerArmTopGuideClstr.v"} 0;
setAttr {$name + "rLowerArmBtmGuideClstr.v"} 0;
setAttr {$name + "_rUpperArmTopClstr.v"} 0;
setAttr {$name + "_rUpperArmBtmClstr.v"} 0;
setAttr {$name + "_rUpperArmTopGuideClstr.v"} 0;
setAttr {$name + "rArmUpLctr.v"} 0;

setAttr {$name + "_rShoulderJ.overrideEnabled"} 1;
setAttr {$name + "_rShoulderJ.overrideLevelOfDetail"} 1;

setAttr {$name + "_rUpperArmCurveGuide.v"} 0;
setAttr {$name + "_rLowerArmCurveGuide.v"} 0;
setAttr {$name + "_rUpperArmCurve.template"} 1;
setAttr {$name + "_rLowerArmCurve.template"} 1;

editDisplayLayerMembers -noRecurse {$name + "_JointsLayer"} {$name + "_rWristJ"} {$name + "_rWristJFK"} {$name + "_rLowerArmCurveJ1"}
{$name + "_rLowerArmCurveJ2"} {$name + "_rLowerArmCurveJ3"} {$name + "_rElbowCurveJ"} {$name + "_rUpperArmCurveJ1"} {$name + "_rUpperArmCurveJ2"}
{$name + "_rUpperArmCurveJ3"} {$name + "_rShoulderCurveJ"};

editDisplayLayerMembers -noRecurse {$name + "_ControlsLayer"} {$name + "_rUpperArmCurve3C"}
{$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurveC"} {$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurve1C"} {$name + "_rElbowCurveC"}
{$name + "_rLowerArmCurveC"} {$name + "_rLowerArmCurve3C"} {$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurve1C"} {$name + "_rLowerArmCurve"}
{$name + "_rUpperArmCurve"} {$name + "_rLowerArmCurveGuide"} {$name + "_rUpperArmCurveGuide"} ;

//LOCK AND HIDE
select {$name + "_lElbowCurveC"} {$name + "_lLowerArmCurveC"} {$name + "_lUpperArmCurveC"} {$name + "_lLowerArmCurve1C"} {$name + "_lLowerArmCurve2C"}
{$name + "_lLowerArmCurve3C"} {$name + "_lUpperArmCurve1C"} {$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurve3C"} {$name + "_rElbowCurveC"}
{$name + "_rLowerArmCurveC"} {$name + "_rUpperArmCurveC"} {$name + "_rLowerArmCurve1C"} {$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurve3C"}
{$name + "_rUpperArmCurve1C"} {$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurve3C"} ;
string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l false -k true {$currentCurveControl + ".sx"};
setAttr -l false -k true {$currentCurveControl + ".sy"};
setAttr -l false -k true {$currentCurveControl + ".sz"};
setAttr -l false -k true {$currentCurveControl + ".v"};
}

select {$name + "_lUpperArmCurveC"} {$name + "_rUpperArmCurveC"} {$name + "_rLowerArmCurveC"} {$name + "_lLowerArmCurveC"} ;
string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l false -k true {$currentCurveControl + ".rx"};
setAttr -l false -k true {$currentCurveControl + ".ry"};
setAttr -l false -k true {$currentCurveControl + ".rz"};
}

delete {$name + "_CurveArm1"};

//LOCK CHANNELS
select {$name + "_lLowerArmCurveC"} {$name + "_lUpperArmCurveC"} {$name + "_lLowerArmCurve1C"}
{$name + "_lLowerArmCurve2C"} {$name + "_lLowerArmCurve3C"} {$name + "_lUpperArmCurve1C"}
{$name + "_lUpperArmCurve2C"} {$name + "_lUpperArmCurve3C"} {$name + "_lElbowCurveC"}
{$name + "_rLowerArmCurveC"} {$name + "_rUpperArmCurveC"} {$name + "_rLowerArmCurve1C"}
{$name + "_rLowerArmCurve2C"} {$name + "_rLowerArmCurve3C"} {$name + "_rUpperArmCurve1C"}
{$name + "_rUpperArmCurve2C"} {$name + "_rUpperArmCurve3C"} {$name + "_rElbowCurveC"} ;

string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l 1 -k 0 {$currentCurveControl + ".sx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sy"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".v"};
}

select {$name + "_lLowerArmCurveCG"} {$name + "_lUpperArmCurveCG"} {$name + "_lLowerArmCurve1CG"}
{$name + "_lLowerArmCurve2CG"} {$name + "_lLowerArmCurve3CG"} {$name + "_lUpperArmCurve1CG"}
{$name + "_lUpperArmCurve2CG"} {$name + "_lUpperArmCurve3CG"} {$name + "_rLowerArmCurveCG"}
{$name + "_rUpperArmCurveCG"} {$name + "_rLowerArmCurve1CG"} {$name + "_rLowerArmCurve2CG"}
{$name + "_rLowerArmCurve3CG"} {$name + "_rUpperArmCurve1CG"} {$name + "_rUpperArmCurve2CG"}
{$name + "_rUpperArmCurve3CG"} ;

string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l 1 -k 0 {$currentCurveControl + ".tx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".ty"};
setAttr -l 1 -k 0 {$currentCurveControl + ".tz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".rx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".ry"};
setAttr -l 1 -k 0 {$currentCurveControl + ".rz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sy"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".v"};
}

changeLinearUnit $currentUnit;
}
global proc createToonLegs()
{
	global string $charName;
string $name = `textField -q -text $charName`;

string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////LEFT LEG////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//CREATE LEFT CURVES
$rAnkleLoc = `xform -q -ws -rp {$name + "_lAnkleJ"}`;
$rKneeLoc = `xform -q -ws -rp {$name + "_lKneeJ"}`;
$rHipLoc = `xform -q -ws -rp {$name + "_lHipJ"}`;

curve -n {$name + "_lLowerLegCurve"} -d 1 -p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2]
-p $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] -k 0 -k 1 ;

curve -n {$name + "_lUpperLegCurve"} -d 1 -p $rHipLoc[0] $rHipLoc[1] $rHipLoc[2]
-p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2] -k 0 -k 1 ;

rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_lLowerLegCurve"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_lUpperLegCurve"};

curve -n {$name + "_lLowerLegCurveGuide"} -d 1 -p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2]
-p $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] -k 0 -k 1 ;

curve -n {$name + "_lUpperLegCurveGuide"} -d 1 -p $rHipLoc[0] $rHipLoc[1] $rHipLoc[2]
-p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2] -k 0 -k 1 ;
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_lLowerLegCurveGuide"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_lUpperLegCurveGuide"};
delete -ch {$name + "_lLowerLegCurve"} {$name + "_lUpperLegCurve"} {$name + "_lLowerLegCurveGuide"} {$name + "_lUpperLegCurveGuide"};

//CREATE LEFT LOCATOR FOR UP AXIS
spaceLocator -n {$name + "_lLegUpLctr"};
parentConstraint {$name + "_lKneeJ"} {$name + "_lLegUpLctr"};
delete {$name + "_lLegUpLctr_parentConstraint1"};
parent {$name + "_lLegUpLctr"} {$name + "_lHipJ"};

shadingNode -asUtility multiplyDivide -n {$name + "_lLegUp_MD"};
connectAttr -force {$name + "_lKneeJ.rotateZ"} {$name + "_lLegUp_MD.input1X"};
setAttr {$name + "_lLegUp_MD.operation"} 2;
setAttr {$name + "_lLegUp_MD.input2X"} 2;
connectAttr -force {$name + "_lLegUp_MD.outputX"} {$name + "_lLegUpLctr.rotateZ"};

////////////////////////////////////LOWER LEG////////////////////////////////////
//LEFT LOWER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_lKneeCurveLctr"};
parentConstraint {$name + "_lAnkleFKC"} {$name + "_lKneeCurveLctr"};
delete {$name + "_lKneeCurveLctr_parentConstraint1"};
parent {$name + "_lKneeCurveLctr"} {$name + "_lAnkleFKC"};                                
$lLowerLegLength = `getAttr {$name + "_lAnkleJ.tx"}`;
move -r -os ($lLowerLegLength *-1) 0 0 {$name + "_lKneeCurveLctr"};
parent -w {$name + "_lKneeCurveLctr"};
parentConstraint -mo {$name + "_lAnkleJ"} {$name + "_lKneeCurveLctr"};

//LEFT LOWER CURVE CLUSTERS
select {$name + "_lLowerLegCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerLegTopClstr"};
group -em -n {$name + "_lLowerLegTopClstrG"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lLowerLegTopClstrG"};
parent {$name + "_lLowerLegTopClstrG"} {$name + "_lKneeJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerLegTopClstrG"};
parent -w {$name + "_lLowerLegTopClstrG"};
parent {$name + "_lLowerLegTopClstr"} {$name + "_lLowerLegTopClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_lHipJ"} {$name + "_lLegUpLctr"} {$name + "_lLowerLegTopClstrG"};

select {$name + "_lLowerLegCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerLegBtmClstr"};
group -em -n {$name + "_lLowerLegBtmClstrG"};
pointConstraint {$name + "_lAnkleJ"} {$name + "_lLowerLegBtmClstrG"};
parent {$name + "_lLowerLegBtmClstrG"} {$name + "_lKneeJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerLegBtmClstrG"};
parent {$name + "_lLowerLegBtmClstr"} {$name + "_lLowerLegBtmClstrG"};
parent -w {$name + "_lLowerLegBtmClstrG"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lKneeCurveLctr"} {$name + "_lKneeCurveLctr"} {$name + "_lLowerLegBtmClstrG"};

select {$name + "_lLowerLegCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerLegMidClstr"};

//LEFT LOWER GUIDE CURVE CLUSTERS
select {$name + "_lLowerLegCurveGuide.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerLegTopGuideClstr"};
group -em -n {$name + "_lLowerLegTopGuideClstrG"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lLowerLegTopGuideClstrG"};
parent {$name + "_lLowerLegTopGuideClstrG"} {$name + "_lKneeJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerLegTopGuideClstrG"};
parent -w {$name + "_lLowerLegTopGuideClstrG"};
parent {$name + "_lLowerLegTopGuideClstr"} {$name + "_lLowerLegTopGuideClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_lHipJ"} {$name + "_lLegUpLctr"} {$name + "_lLowerLegTopGuideClstrG"}; 

select {$name + "_lLowerLegCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_lLowerLegBtmGuideClstr"};
group -em -n {$name + "_lLowerLegBtmGuideClstrG"};
pointConstraint {$name + "_lAnkleJ"} {$name + "_lLowerLegBtmGuideClstrG"};
parent {$name + "_lLowerLegBtmGuideClstrG"} {$name + "_lKneeJ"};
makeIdentity -apply false -r 1 {$name + "_lLowerLegBtmGuideClstrG"};
parent {$name + "_lLowerLegBtmGuideClstr"} {$name + "_lLowerLegBtmGuideClstrG"};
parent -w {$name + "_lLowerLegBtmGuideClstrG"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lKneeCurveLctr"} {$name + "_lKneeCurveLctr"} {$name + "_lLowerLegBtmGuideClstrG"};

////////////////////////////////////UPPER LEG////////////////////////////////////
//LEFT UPPER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_lHipCurveLctr"};
parentConstraint {$name + "_lKneeFKC"} {$name + "_lHipCurveLctr"};
delete {$name + "_lHipCurveLctr_parentConstraint1"};
parent {$name + "_lHipCurveLctr"} {$name + "_lKneeFKC"};
$lUpperLegLength = `getAttr {$name + "_lKneeJ.tx"}`;
move -r -os ($lUpperLegLength *-1) 0 0 {$name + "_lHipCurveLctr"};
parent -w {$name + "_lHipCurveLctr"};
parentConstraint -mo {$name + "_lKneeJ"} {$name + "_lHipCurveLctr"};

spaceLocator -n {$name + "_lKneeTopCurveLctr"};
parentConstraint {$name + "_MainHipC"} {$name + "_lKneeTopCurveLctr"};
delete {$name + "_lKneeTopCurveLctr_parentConstraint1"};
parent {$name + "_lKneeTopCurveLctr"} {$name + "_MainHipC"};
pointConstraint {$name + "_lHipFKC"} {$name + "_lKneeTopCurveLctr"};
delete {$name + "_lKneeTopCurveLctr_pointConstraint1"};
move -r -os 0 ($lUpperLegLength* -1) 0 {$name + "_lKneeTopCurveLctr"};
parent -w {$name + "_lKneeTopCurveLctr"};
parentConstraint -mo {$name + "_MainHipC"} {$name + "_lKneeTopCurveLctr"};

//LEFT UPPER CURVE CLUSTERS
select {$name + "_lUpperLegCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperLegTopClstr"};
group -em -n {$name + "_lUpperLegTopClstrG"};
pointConstraint {$name + "_lHipJ"} {$name + "_lUpperLegTopClstrG"};
parent {$name + "_lUpperLegTopClstrG"} {$name + "_lHipJ"};
makeIdentity -apply false -r 1 {$name + "_lUpperLegTopClstrG"};
parent -w {$name + "_lUpperLegTopClstrG"};
parent {$name + "_lUpperLegTopClstr"} {$name + "_lUpperLegTopClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lHipCurveLctr"} {$name + "_lKneeTopCurveLctr"} {$name + "_lUpperLegTopClstrG"};

select {$name + "_lUpperLegCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperLegBtmClstr"};
group -em -n {$name + "_lUpperLegBtmClstrG"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lUpperLegBtmClstrG"};
orientConstraint {$name + "_lHipFKC"} {$name + "_lUpperLegBtmClstrG"};
delete {$name + "_lUpperLegBtmClstrG_orientConstraint1"};
parent {$name + "_lUpperLegBtmClstr"} {$name + "_lUpperLegBtmClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_lLegUpLctr"} {$name + "_lLegUpLctr"} {$name + "_lUpperLegBtmClstrG"}; 

select {$name + "_lUpperLegCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperLegMidClstr"};

//LEFT UPPER GUIDE CURVE CLUSTERS
select {$name + "_lUpperLegCurveGuide.cv[0:1]"} ;                            
newCluster " -envelope 1";
rename {$name + "_lUpperLegTopGuideClstr"};
group -em -n {$name + "_lUpperLegTopGuideClstrG"};
pointConstraint {$name + "_lHipJ"} {$name + "_lUpperLegTopGuideClstrG"};
parent {$name + "_lUpperLegTopGuideClstrG"} {$name + "_lHipJ"};
makeIdentity -apply false -r 1 {$name + "_lUpperLegTopGuideClstrG"};
parent -w {$name + "_lUpperLegTopGuideClstrG"};
parent {$name + "_lUpperLegTopGuideClstr"} {$name + "_lUpperLegTopGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_lHipCurveLctr"} {$name + "_lKneeTopCurveLctr"} {$name + "_lUpperLegTopGuideClstrG"};

select {$name + "_lUpperLegCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_lUpperLegBtmGuideClstr"};
group -em -n {$name + "_lUpperLegBtmGuideClstrG"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lUpperLegBtmGuideClstrG"};
orientConstraint {$name + "_lHipFKC"} {$name + "_lUpperLegBtmGuideClstrG"};
delete {$name + "_lUpperLegBtmGuideClstrG_orientConstraint1"};
parent {$name + "_lUpperLegBtmGuideClstr"} {$name + "_lUpperLegBtmGuideClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_lLegUpLctr"} {$name + "_lLegUpLctr"} {$name + "_lUpperLegBtmGuideClstrG"}; 

////////////////////////////////////////////////////////////////////////////////
///////////////////////////CREATE LEFT CURVE CONTROLS///////////////////////////
////////////////////////////////////////////////////////////////////////////////

nurbsSquare -n {$name + "_lLowerLegCurveC"} -c 0 0 0 -nr 0 1 0 -sl1 1 -sl2 1 -sps 1 -d 3 -ch 1 ;
setAttr {$name + "_lLowerLegCurveC.rotateOrder"} 1;
parent -r -s {"right" + $name + "_lLowerLegCurveCShape"} {"bottom" + $name + "_lLowerLegCurveCShape"} {"left" + $name + "_lLowerLegCurveCShape"} {"top" + $name + "_lLowerLegCurveC"} ;
parent -w {"top" + $name + "_lLowerLegCurveC"};
delete {$name + "_lLowerLegCurveC"};
rename {"top" + $name + "_lLowerLegCurveC"} {$name + "_lLowerLegCurveC"};

$rKneeLength = `getAttr {$name + "_lKneeJ.tx"}`;
$rAnkleLength = `getAttr {$name + "_lAnkleJ.tx"}`;
$rLegLength = (($rKneeLength + $rAnkleLength) /2);


setAttr ({$name + "_lLowerLegCurveC.scale"}, ($rLegLength/2), ($rLegLength/2), ($rLegLength/2));
rotate -r 0 0 90 {$name + "_lLowerLegCurveC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lLowerLegCurveC"};


duplicate -n {$name + "_lKneeCurveC"} {$name + "_lLowerLegCurveC"};
setAttr {$name + "_lKneeCurveC.rotateOrder"} 1;
duplicate -n {$name + "_lUpperLegCurveC"} {$name + "_lLowerLegCurveC"};
setAttr {$name + "_lUpperLegCurveC.rotateOrder"} 1;

group -n {$name + "_lKneeCurveCG"} {$name + "_lKneeCurveC"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lKneeCurveCG"};
orientConstraint {$name + "_lLegUpLctr"} {$name + "_lKneeCurveCG"};

//CONSTRAIN CENTER CLUSTERS TO MID CONTROL
delete {$name + "_lLowerLegTopClstrG_pointConstraint1"} {$name + "_lLowerLegTopClstrG_aimConstraint1"}
{$name + "_lLowerLegTopGuideClstrG_pointConstraint1"} {$name + "_lLowerLegTopGuideClstrG_aimConstraint1"}
{$name + "_lUpperLegBtmClstrG_pointConstraint1"} {$name + "_lUpperLegBtmClstrG_aimConstraint1"}
{$name + "_lUpperLegBtmGuideClstrG_pointConstraint1"} {$name + "_lUpperLegBtmGuideClstrG_aimConstraint1"};

parentConstraint {$name + "_lKneeCurveC"} {$name + "_lLowerLegTopClstrG"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lLowerLegTopGuideClstrG"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lUpperLegBtmClstrG"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lUpperLegBtmGuideClstrG"};

//CREATE LEFT LOCATORS FOR ANKLE TWIST
spaceLocator -n {$name + "_lKneeTwistLctr"};
duplicate -n {$name + "_lAnkleAimLctr"} {$name + "_lKneeTwistLctr"};
duplicate -n {$name + "_lAnkleTwistLctr"} {$name + "_lKneeTwistLctr"};
duplicate -n {$name + "_lKneeTwist75Lctr"} {$name + "_lKneeTwistLctr"};
duplicate -n {$name + "_lKneeTwist50Lctr"} {$name + "_lKneeTwistLctr"};
duplicate -n {$name + "_lKneeTwist25Lctr"} {$name + "_lKneeTwistLctr"};
parent {$name + "_lAnkleTwistLctr"} {$name + "_lAnkleAimLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lKneeCurveC"} {$name + "_lAnkleJ"} {$name + "_lKneeTwistLctr"};
pointConstraint {$name + "_lKneeCurveC"} {$name + "_lKneeTwistLctr"};
parentConstraint {$name + "_lKneeJ"} {$name + "_lAnkleAimLctr"};
parentConstraint {$name + "_lAnkleFKC"} {$name + "_lAnkleTwistLctr"};
delete {$name + "_lAnkleTwistLctr_parentConstraint1"};
parentConstraint -mo {$name + "_lAnkleJ"} {$name + "_lAnkleTwistLctr"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lKneeJ"} {$name + "_lKneeTwist75Lctr"};
setAttr {$name + "_lKneeTwist75Lctr_parentConstraint1." + $name + "_lKneeCurveCW0"} 3;
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lKneeJ"} {$name + "_lKneeTwist50Lctr"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lKneeJ"} {$name + "_lKneeTwist25Lctr"};
setAttr {$name + "_lKneeTwist25Lctr_parentConstraint1." + $name + "_lKneeJW1"} 3;

//CREATE MULTIPLY DIVIDES FOR LEFT TWIST
shadingNode -n {$name + "_lAnkleTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_lAnkleTwistLctr.rotateX"} {$name + "_lAnkleTwist_MD.input1X"};
connectAttr -force {$name + "_lAnkleTwistLctr.rotateX"} {$name + "_lAnkleTwist_MD.input1Y"};
connectAttr -force {$name + "_lAnkleTwistLctr.rotateX"} {$name + "_lAnkleTwist_MD.input1Z"};
setAttr {$name + "_lAnkleTwist_MD.input2X"} 0.25;
setAttr {$name + "_lAnkleTwist_MD.input2Y"} 0.5;
setAttr {$name + "_lAnkleTwist_MD.input2Z"} 0.75;

shadingNode -n {$name + "_lKNeeTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_lKneeCurveC.rotateX"} {$name + "_lKNeeTwist_MD.input1X"};
connectAttr -force {$name + "_lKneeCurveC.rotateX"} {$name + "_lKNeeTwist_MD.input1Y"};
connectAttr -force {$name + "_lKneeCurveC.rotateX"} {$name + "_lKNeeTwist_MD.input1Z"};
setAttr {$name + "_lKNeeTwist_MD.input2X"} 0.25;
setAttr {$name + "_lKNeeTwist_MD.input2Y"} 0.5;
setAttr {$name + "_lKNeeTwist_MD.input2Z"} 0.75;

//LEFT MOTION PATHS FOR CONTROLS
group -n {$name + "_lLowerLegCurveCG"} {$name + "_lLowerLegCurveC"};
setAttr {$name + "_lLowerLegCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_lLowerLegGuide_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lKneeTwist50Lctr"} {$name + "_lLowerLegCurveCG"} {$name + "_lLowerLegCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerLegGuide_MP"};
setAttr {$name + "_lLowerLegGuide_MP.uValue"} .5;
parentConstraint {$name + "_lLowerLegCurveC"} {$name + "_lLowerLegMidClstr"};
connectAttr -force {$name + "_lAnkleTwist_MD.outputY"} {$name + "_lLowerLegGuide_MP.frontTwist"};

group -n {$name + "_lUpperLegCurveCG"} {$name + "_lUpperLegCurveC"};
setAttr {$name + "_lUpperLegCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_lUpperLegGuide_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lHipJ"} {$name + "_lUpperLegCurveCG"} {$name + "_lUpperLegCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperLegGuide_MP"};
setAttr {$name + "_lUpperLegGuide_MP.uValue"} .5;
parentConstraint {$name + "_lUpperLegCurveC"} {$name + "_lUpperLegMidClstr"};
connectAttr -force {$name + "_lKNeeTwist_MD.outputY"} {$name + "_lUpperLegGuide_MP.frontTwist"};

//LEFT INDIVIDUAL JOINT CONTROLS
circle -n {$name + "_CurveLeg1b"} -c 0 0 2.5 -nr 1 0 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
circle -n {$name + "_CurveLeg1c"} -c 0 0 -2.5 -nr 1 0 0 -sw 360 -r 0.5 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
curve -n {$name + "_CurveLeg1"} -d 1 -p 0 0 -2 -p 0 0 2 -k 0 -k 1 ;

parent -r -s {$name + "_CurveLeg1bShape"} {$name + "_CurveLeg1cShape"} {$name + "_CurveLeg1"};
delete {$name + "_CurveLeg1b"} {$name + "_CurveLeg1c"};

setAttr {$name + "_CurveLeg1.rotateOrder"} 1;

duplicate -n {$name + "_lLowerLegCurve1C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_lLowerLegCurve2C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_lLowerLegCurve3C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_lUpperLegCurve1C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_lUpperLegCurve2C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_lUpperLegCurve3C"} {$name + "_CurveLeg1"};
scale -r ($lLowerLegLength/10) ($lLowerLegLength/10) ($lLowerLegLength/10) {$name + "_lLowerLegCurve1C"} {$name + "_lLowerLegCurve2C"} {$name + "_lLowerLegCurve3C"};
$lUpperLegLength = `getAttr {$name + "_lKneeJ.tx"}`;
scale -r ($lUpperLegLength/10) ($lUpperLegLength/10) ($lUpperLegLength/10) {$name + "_lUpperLegCurve1C"} {$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurve3C"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lLowerLegCurve1C"} {$name + "_lLowerLegCurve2C"} {$name + "_lLowerLegCurve3C"} {$name + "_lUpperLegCurve1C"} {$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurve3C"};

//LEFT MOTION PATHS FOR INDIVIDUAL JOINT CONTROLS
group -n {$name + "_lLowerLegCurve1CG"} {$name + "_lLowerLegCurve1C"};
setAttr {$name + "_lLowerLegCurve1CG.rotateOrder"} 1;
group -n {$name + "_lLowerLegCurve2CG"} {$name + "_lLowerLegCurve2C"};
setAttr {$name + "_lLowerLegCurve2CG.rotateOrder"} 1;
group -n {$name + "_lLowerLegCurve3CG"} {$name + "_lLowerLegCurve3C"};
setAttr {$name + "_lLowerLegCurve3CG.rotateOrder"} 1;
group -n {$name + "_lUpperLegCurve1CG"} {$name + "_lUpperLegCurve1C"};
setAttr {$name + "_lUpperLegCurve1CG.rotateOrder"} 1;
group -n {$name + "_lUpperLegCurve2CG"} {$name + "_lUpperLegCurve2C"};
setAttr {$name + "_lUpperLegCurve2CG.rotateOrder"} 1;
group -n {$name + "_lUpperLegCurve3CG"} {$name + "_lUpperLegCurve3C"};
setAttr {$name + "_lUpperLegCurve3CG.rotateOrder"} 1;

pathAnimation -n {$name + "_lLowerLeg1_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lKneeTwist75Lctr"} {$name + "_lLowerLegCurve1CG"} {$name + "_lLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerLeg1_MP"};
setAttr {$name + "_lLowerLeg1_MP.uValue"} .25;
connectAttr -force {$name + "_lAnkleTwist_MD.outputX"} {$name + "_lLowerLeg1_MP.frontTwist"};

pathAnimation -n {$name + "_lLowerLeg2_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lKneeTwist50Lctr"} {$name + "_lLowerLegCurve2CG"} {$name + "_lLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerLeg2_MP"};
setAttr {$name + "_lLowerLeg2_MP.uValue"} .5;
connectAttr -force {$name + "_lAnkleTwist_MD.outputY"} {$name + "_lLowerLeg2_MP.frontTwist"};

pathAnimation -n {$name + "_lLowerLeg3_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lKneeTwist25Lctr"} {$name + "_lLowerLegCurve3CG"} {$name + "_lLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lLowerLeg3_MP"};
setAttr {$name + "_lLowerLeg3_MP.uValue"} .75;
connectAttr -force {$name + "_lAnkleTwist_MD.outputZ"} {$name + "_lLowerLeg3_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperLeg1_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lHipJ"} {$name + "_lUpperLegCurve1CG"} {$name + "_lUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperLeg1_MP"};
setAttr {$name + "_lUpperLeg1_MP.uValue"} .25;
connectAttr -force {$name + "_lKNeeTwist_MD.outputX"} {$name + "_lUpperLeg1_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperLeg2_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lHipJ"} {$name + "_lUpperLegCurve2CG"} {$name + "_lUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperLeg2_MP"};
setAttr {$name + "_lUpperLeg2_MP.uValue"} .5;
connectAttr -force {$name + "_lKNeeTwist_MD.outputY"} {$name + "_lUpperLeg2_MP.frontTwist"};

pathAnimation -n {$name + "_lUpperLeg3_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation"
-worldUpVector 0 0 1 -worldUpObject {$name + "_lHipJ"} {$name + "_lUpperLegCurve3CG"} {$name + "_lUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_lUpperLeg3_MP"};
setAttr {$name + "_lUpperLeg3_MP.uValue"} .75;
connectAttr -force {$name + "_lKNeeTwist_MD.outputZ"} {$name + "_lUpperLeg3_MP.frontTwist"};


//LEFT CURVE LEG JOINTS
select -cl;
joint -n {$name + "_lLowerLegCurveJ1"};
parentConstraint {$name + "_lLowerLegCurve1C"} {$name + "_lLowerLegCurveJ1"};
select -cl;
joint -n {$name + "_lLowerLegCurveJ2"};
parentConstraint {$name + "_lLowerLegCurve2C"} {$name + "_lLowerLegCurveJ2"};
select -cl;
joint -n {$name + "_lLowerLegCurveJ3"};
parentConstraint {$name + "_lLowerLegCurve3C"} {$name + "_lLowerLegCurveJ3"};
select -cl;
joint -n {$name + "_lKneeCurveJ"};
parentConstraint {$name + "_lKneeCurveC"} {$name + "_lKneeCurveJ"};
select -cl;
joint -n {$name + "_lUpperLegCurveJ1"};
parentConstraint {$name + "_lUpperLegCurve1C"} {$name + "_lUpperLegCurveJ1"};
select -cl;
joint -n {$name + "_lUpperLegCurveJ2"};
parentConstraint {$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurveJ2"};
select -cl;
joint -n {$name + "_lUpperLegCurveJ3"};
parentConstraint {$name + "_lUpperLegCurve3C"} {$name + "_lUpperLegCurveJ3"};
select -cl;

joint -n {$name + "_lHipCurveJ"};
pointConstraint {$name + "_lHipJ"} {$name + "_lHipCurveJ"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lHipJ"} {$name + "_lUpperLegCurveJ1"} {$name + "_lHipCurveJ"}; 

//ADD LEFT CURVE ATTRIBUTE TO IK FK SWITCH
addAttr -ln "curve"  -at double  -min 0 -max 1 -dv 0  {$name + "_lLegSwitchC"};
setAttr -e-keyable true {$name + "_lLegSwitchC.curve"};

shadingNode -asUtility multiplyDivide -n {$name + "_lLegCurve_MD1"};
connectAttr -force {$name + "_lLegSwitchC.curve"} {$name + "_lLegCurve_MD1.input1X"};
setAttr {$name + "_lLegCurve_MD1.input2X"} 2;
shadingNode -asUtility multiplyDivide -n {$name + "_lLegCurve_MD2"};
connectAttr -force {$name + "_lLegCurve_MD1.outputX"} {$name + "_lLegCurve_MD2.input1X"};
connectAttr -force {$name + "_lHipFKC.scaleX"} {$name + "_lLegCurve_MD2.input2X"};

connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lLowerLegBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lLowerLegBtmClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lLowerLegTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lLowerLegTopClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lUpperLegBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lUpperLegBtmClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lUpperLegTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_lLegCurve_MD2.outputX"} {$name + "_lUpperLegTopClstrG.scaleX"};

//ADD ATTRIBUTE TO MAIN CONTROL FOR LEFT LEG CURVE
addAttr -ln "legCurveMacro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.legCurveMacro"};
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_lLowerLegCurveC.v"};
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_lKneeCurveC.v"};
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_lUpperLegCurveC.v"};

addAttr -ln "legCurveMicro"  -at bool  -min 0 {$name + "_MainC"};
setAttr -e-keyable true {$name + "_MainC.legCurveMicro"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lLowerLegCurve1C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lLowerLegCurve2C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lLowerLegCurve3C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lUpperLegCurve1C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lUpperLegCurve2C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_lUpperLegCurve3C.v"};

//CONNECT LEFT SCALE
shadingNode -asUtility blendColors -n {$name + "_lUpperLegCurve1_Blend"};
setAttr {$name + "_lUpperLegCurve1_Blend.blender"} 0.9;
connectAttr -force {$name + "_lHipJ.scale"} {$name + "_lUpperLegCurve1_Blend.color1"};
connectAttr -force {$name + "_lKneeJ.scale"} {$name + "_lUpperLegCurve1_Blend.color2"};
connectAttr -force {$name + "_lUpperLegCurve1_Blend.output"} {$name + "_lUpperLegCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_lUpperLegCurve2_Blend"} {$name + "_lUpperLegCurve1_Blend"};
setAttr {$name + "_lUpperLegCurve2_Blend.blender"} 0.75;
connectAttr -force {$name + "_lUpperLegCurve2_Blend.output"} {$name + "_lUpperLegCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_lUpperLegCurve3_Blend"} {$name + "_lUpperLegCurve1_Blend"};
setAttr {$name + "_lUpperLegCurve3_Blend.blender"} 0.6;
connectAttr -force {$name + "_lUpperLegCurve3_Blend.output"} {$name + "_lUpperLegCurveJ3.scale"};

duplicate -rr -ic -n {$name + "_lKneeCurve_Blend"} {$name + "_lUpperLegCurve1_Blend"};
setAttr {$name + "_lKneeCurve_Blend.blender"} 0.5;
connectAttr -force {$name + "_lKneeCurve_Blend.output"} {$name + "_lKneeCurveJ.scale"};

duplicate -rr -ic -n {$name + "_lLowerLegCurve1_Blend"} {$name + "_lUpperLegCurve1_Blend"};
setAttr {$name + "_lLowerLegCurve1_Blend.blender"} 0.4;
connectAttr -force {$name + "_lLowerLegCurve1_Blend.output"} {$name + "_lLowerLegCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_lLowerLegCurve2_Blend"} {$name + "_lLowerLegCurve1_Blend"};
setAttr {$name + "_lLowerLegCurve2_Blend.blender"} 0.25;
connectAttr -force {$name + "_lLowerLegCurve2_Blend.output"} {$name + "_lLowerLegCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_lLowerLegCurve3_Blend"} {$name + "_lLowerLegCurve1_Blend"};
setAttr {$name + "_lLowerLegCurve3_Blend.blender"} 0.1;
connectAttr -force {$name + "_lLowerLegCurve3_Blend.output"} {$name + "_lLowerLegCurveJ3.scale"};

//LEFT CLEAN UP
if (`objExists ($name + "_curveNodesG")`)
	{	}
else
{
	group -em -n {$name + "_curveNodesG"};
	parent {$name + "_curveNodesG"} {$name + "_MainC"};
	group -em -n {$name + "_extraCurveNodesG"};
}
parent {$name + "_lKneeCurveLctr"} {$name + "_lLowerLegTopClstrG"} {$name + "_lLowerLegBtmClstrG"}
{$name + "_lLowerLegTopGuideClstrG"} {$name + "_lLowerLegBtmGuideClstrG"} {$name + "_lHipCurveLctr"}
{$name + "_lKneeTopCurveLctr"} {$name + "_lUpperLegTopClstrG"} {$name + "_lUpperLegBtmClstrG"} {$name + "_lUpperLegTopGuideClstrG"}
{$name + "_lUpperLegBtmGuideClstrG"} {$name + "_lKneeCurveCG"} {$name + "_lLowerLegCurveJ1"} {$name + "_lLowerLegCurveJ2"}
{$name + "_lLowerLegCurveJ3"} {$name + "_lKneeCurveJ"} {$name + "_lUpperLegCurveJ1"} {$name + "_lUpperLegCurveJ2"} {$name + "_lUpperLegCurveJ3"}
{$name + "_lHipCurveJ"} {$name + "_curveNodesG"};

parent {$name + "_lLowerLegCurve"} {$name + "_lUpperLegCurve"} {$name + "_lLowerLegCurveGuide"} {$name + "_lUpperLegCurveGuide"}
{$name + "_lLowerLegMidClstr"} {$name + "_lUpperLegMidClstr"} {$name + "_lLowerLegCurveCG"} {$name + "_lUpperLegCurveCG"}
{$name + "_lLowerLegCurve1CG"} {$name + "_lLowerLegCurve2CG"} {$name + "_lLowerLegCurve3CG"} {$name + "_lUpperLegCurve1CG"}
{$name + "_lUpperLegCurve2CG"} {$name + "_lUpperLegCurve3CG"} {$name + "_extraCurveNodesG"};

connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerLegCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerLegCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerLegCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lLowerLegCurve3CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperLegCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperLegCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperLegCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_lUpperLegCurve3CG.scale"};

setAttr {$name + "_lAnkleIKLctr.v"} 0;
setAttr {$name + "_lAnkleFKLctr.v"} 0;
setAttr {$name + "_lKneeTopCurveLctr.v"} 0;
setAttr {$name + "_lKneeCurveLctr.v"} 0;
setAttr {$name + "_lHipCurveLctr.v"} 0;
setAttr {$name + "_lKneeTwist25Lctr.v"} 0;
setAttr {$name + "_lKneeTwistLctr.v"} 0;
setAttr {$name + "_lAnkleAimLctr.v"} 0;
setAttr {$name + "_lKneeTwist75Lctr.v"} 0;
setAttr {$name + "_lKneeTwist50Lctr.v"} 0;

setAttr {$name + "_lUpperLegBtmGuideClstr.v"} 0;
setAttr {$name + "_lLowerLegMidClstr.v"} 0;
setAttr {$name + "_lUpperLegMidClstr.v"} 0;
setAttr {$name + "_lLowerLegTopClstr.v"} 0;
setAttr {$name + "_lLowerLegBtmClstr.v"} 0;
setAttr {$name + "_lLowerLegTopGuideClstr.v"} 0;
setAttr {$name + "_lLowerLegBtmGuideClstr.v"} 0;
setAttr {$name + "_lUpperLegTopClstr.v"} 0;
setAttr {$name + "_lUpperLegBtmClstr.v"} 0;
setAttr {$name + "_lUpperLegTopGuideClstr.v"} 0;
setAttr {$name + "_lLegUpLctr.v"} 0;

setAttr {$name + "_lHipJ.overrideEnabled"} 1;
setAttr {$name + "_lHipJ.overrideLevelOfDetail"} 1;
setAttr {$name + "_lAnkleJ.overrideEnabled"} 1;

setAttr {$name + "_lUpperLegCurveGuide.v"} 0;
setAttr {$name + "_lLowerLegCurveGuide.v"} 0;
setAttr {$name + "_lUpperLegCurve.template"} 1;
setAttr {$name + "_lLowerLegCurve.template"} 1;

editDisplayLayerMembers -noRecurse {$name + "_JointsLayer"} {$name + "_lAnkleJFK"} {$name + "_lLowerLegCurveJ1"}
{$name + "_lLowerLegCurveJ2"} {$name + "_lLowerLegCurveJ3"} {$name + "_lKneeCurveJ"} {$name + "_lUpperLegCurveJ1"} {$name + "_lUpperLegCurveJ2"}
{$name + "_lUpperLegCurveJ3"} {$name + "_lHipCurveJ"};

editDisplayLayerMembers -noRecurse {$name + "_ControlsLayer"} {$name + "_lUpperLegCurve3C"}
{$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurveC"} {$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurve1C"} {$name + "_lKneeCurveC"}
{$name + "_lLowerLegCurveC"} {$name + "_lLowerLegCurve3C"} {$name + "_lLowerLegCurve2C"} {$name + "_lLowerLegCurve1C"} {$name + "_lLowerLegCurve"}
{$name + "_lUpperLegCurve"} {$name + "_lLowerLegCurveGuide"} {$name + "_lUpperLegCurveGuide"} ;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////RIGHT LEG////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//CREATE RIGHT CURVES
$rAnkleLoc = `xform -q -ws -rp {$name + "_rAnkleJ"}`;
$rKneeLoc = `xform -q -ws -rp {$name + "_rKneeJ"}`;
$rHipLoc = `xform -q -ws -rp {$name + "_rHipJ"}`;

curve -n {$name + "_rLowerLegCurve"} -d 1 -p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2]
-p $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] -k 0 -k 1 ;

curve -n {$name + "_rUpperLegCurve"} -d 1 -p $rHipLoc[0] $rHipLoc[1] $rHipLoc[2]
-p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2] -k 0 -k 1 ;

rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_rLowerLegCurve"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 {$name + "_rUpperLegCurve"};

curve -n {$name + "_rLowerLegCurveGuide"} -d 1 -p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2]
-p $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] -k 0 -k 1 ;

curve -n {$name + "_rUpperLegCurveGuide"} -d 1 -p $rHipLoc[0] $rHipLoc[1] $rHipLoc[2]
-p $rKneeLoc[0] $rKneeLoc[1] $rKneeLoc[2] -k 0 -k 1 ;
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_rLowerLegCurveGuide"};
rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_rUpperLegCurveGuide"};
delete -ch {$name + "_rLowerLegCurve"} {$name + "_rUpperLegCurve"} {$name + "_rLowerLegCurveGuide"} {$name + "_rUpperLegCurveGuide"};

//CREATE RIGHT LOCATOR FOR UP AXIS
spaceLocator -n {$name + "_rLegUpLctr"};
parentConstraint {$name + "_rKneeJ"} {$name + "_rLegUpLctr"};
delete {$name + "_rLegUpLctr_parentConstraint1"};
parent {$name + "_rLegUpLctr"} {$name + "_rHipJ"};

shadingNode -asUtility multiplyDivide -n {$name + "_rLegUp_MD"};
connectAttr -force {$name + "_rKneeJ.rotateZ"} {$name + "_rLegUp_MD.input1X"};
setAttr {$name + "_rLegUp_MD.operation"} 2;
setAttr {$name + "_rLegUp_MD.input2X"} 2;
connectAttr -force {$name + "_rLegUp_MD.outputX"} {$name + "_rLegUpLctr.rotateZ"};

////////////////////////////////////LOWER LEG////////////////////////////////////
//RIGHT LOWER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_rKneeCurveLctr"};
parentConstraint {$name + "_rAnkleFKC"} {$name + "_rKneeCurveLctr"};
delete {$name + "_rKneeCurveLctr_parentConstraint1"};
parent {$name + "_rKneeCurveLctr"} {$name + "_rAnkleFKC"};                                
$rLowerLegLength = `getAttr {$name + "_rAnkleJ.tx"}`;
move -r -os ($rLowerLegLength *-1) 0 0 {$name + "_rKneeCurveLctr"};
parent -w {$name + "_rKneeCurveLctr"};
parentConstraint -mo {$name + "_rAnkleJ"} {$name + "_rKneeCurveLctr"};

//RIGHT LOWER CURVE CLUSTERS
select {$name + "_rLowerLegCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerLegTopClstr"};
group -em -n {$name + "_rLowerLegTopClstrG"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rLowerLegTopClstrG"};
parent {$name + "_rLowerLegTopClstrG"} {$name + "_rKneeJ"};
makeIdentity -apply false -r 1 {$name + "_rLowerLegTopClstrG"};
parent -w {$name + "_rLowerLegTopClstrG"};
parent {$name + "_rLowerLegTopClstr"} {$name + "_rLowerLegTopClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rHipJ"} {$name + "_rLegUpLctr"} {$name + "_rLowerLegTopClstrG"};

select {$name + "_rLowerLegCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerLegBtmClstr"};
group -em -n {$name + "_rLowerLegBtmClstrG"};
pointConstraint {$name + "_rAnkleJ"} {$name + "_rLowerLegBtmClstrG"};
parent {$name + "_rLowerLegBtmClstrG"} {$name + "_rKneeJ"};
makeIdentity -apply false -r 1 {$name + "_rLowerLegBtmClstrG"};
parent {$name + "_rLowerLegBtmClstr"} {$name + "_rLowerLegBtmClstrG"};
parent -w {$name + "_rLowerLegBtmClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rKneeCurveLctr"} {$name + "_rKneeCurveLctr"} {$name + "_rLowerLegBtmClstrG"};

select {$name + "_rLowerLegCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerLegMidClstr"};

//RIGHT LOWER GUIDE CURVE CLUSTERS
select {$name + "_rLowerLegCurveGuide.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerLegTopGuideClstr"};
group -em -n {$name + "_rLowerLegTopGuideClstrG"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rLowerLegTopGuideClstrG"};
parent {$name + "_rLowerLegTopGuideClstrG"} {$name + "_rKneeJ"};
makeIdentity -apply false -r 1 {$name + "_rLowerLegTopGuideClstrG"};
parent -w {$name + "_rLowerLegTopGuideClstrG"};
parent {$name + "_rLowerLegTopGuideClstr"} {$name + "_rLowerLegTopGuideClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rHipJ"} {$name + "_rLegUpLctr"} {$name + "_rLowerLegTopGuideClstrG"}; 

select {$name + "_rLowerLegCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_rLowerLegBtmGuideClstr"};
group -em -n {$name + "_rLowerLegBtmGuideClstrG"};
pointConstraint {$name + "_rAnkleJ"} {$name + "_rLowerLegBtmGuideClstrG"};
parent {$name + "_rLowerLegBtmGuideClstrG"} {$name + "_rKneeJ"};
makeIdentity -apply false -r 1 {$name + "_rLowerLegBtmGuideClstrG"};
parent {$name + "_rLowerLegBtmGuideClstr"} {$name + "_rLowerLegBtmGuideClstrG"};
parent -w {$name + "_rLowerLegBtmGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rKneeCurveLctr"} {$name + "_rKneeCurveLctr"} {$name + "_rLowerLegBtmGuideClstrG"};

////////////////////////////////////UPPER LEG////////////////////////////////////
//RIGHT UPPER LOCATOR FOR AIMING CLUSTERS
spaceLocator -n {$name + "_rHipCurveLctr"};
parentConstraint {$name + "_rKneeFKC"} {$name + "_rHipCurveLctr"};
delete {$name + "_rHipCurveLctr_parentConstraint1"};
parent {$name + "_rHipCurveLctr"} {$name + "_rKneeFKC"};
$rUpperLegLength = `getAttr {$name + "_rKneeJ.tx"}`;
move -r -os ($rUpperLegLength *-1) 0 0 {$name + "_rHipCurveLctr"};
parent -w {$name + "_rHipCurveLctr"};
parentConstraint -mo {$name + "_rKneeJ"} {$name + "_rHipCurveLctr"};

spaceLocator -n {$name + "_rKneeTopCurveLctr"};
parentConstraint {$name + "_MainHipC"} {$name + "_rKneeTopCurveLctr"};
delete {$name + "_rKneeTopCurveLctr_parentConstraint1"};
parent {$name + "_rKneeTopCurveLctr"} {$name + "_MainHipC"};
pointConstraint {$name + "_rHipFKC"} {$name + "_rKneeTopCurveLctr"};
delete {$name + "_rKneeTopCurveLctr_pointConstraint1"};
move -r -os 0 ($rUpperLegLength* -1) 0 {$name + "_rKneeTopCurveLctr"};
parent -w {$name + "_rKneeTopCurveLctr"};
parentConstraint -mo {$name + "_MainHipC"} {$name + "_rKneeTopCurveLctr"};

//RIGHT UPPER CURVE CLUSTERS
select {$name + "_rUpperLegCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperLegTopClstr"};
group -em -n {$name + "_rUpperLegTopClstrG"};
pointConstraint {$name + "_rHipJ"} {$name + "_rUpperLegTopClstrG"};
parent {$name + "_rUpperLegTopClstrG"} {$name + "_rHipJ"};
makeIdentity -apply false -r 1 {$name + "_rUpperLegTopClstrG"};
parent -w {$name + "_rUpperLegTopClstrG"};
parent {$name + "_rUpperLegTopClstr"} {$name + "_rUpperLegTopClstrG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rHipCurveLctr"} {$name + "_rKneeTopCurveLctr"} {$name + "_rUpperLegTopClstrG"};

select {$name + "_rUpperLegCurve.cv[3:4]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperLegBtmClstr"};
group -em -n {$name + "_rUpperLegBtmClstrG"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rUpperLegBtmClstrG"};
orientConstraint {$name + "_rHipFKC"} {$name + "_rUpperLegBtmClstrG"};
delete {$name + "_rUpperLegBtmClstrG_orientConstraint1"};
parent {$name + "_rUpperLegBtmClstr"} {$name + "_rUpperLegBtmClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rLegUpLctr"} {$name + "_rLegUpLctr"} {$name + "_rUpperLegBtmClstrG"}; 

select {$name + "_rUpperLegCurve.cv[2]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperLegMidClstr"};

//RIGHT UPPER GUIDE CURVE CLUSTERS
select {$name + "_rUpperLegCurveGuide.cv[0:1]"} ;                            
newCluster " -envelope 1";
rename {$name + "_rUpperLegTopGuideClstr"};
group -em -n {$name + "_rUpperLegTopGuideClstrG"};
pointConstraint {$name + "_rHipJ"} {$name + "_rUpperLegTopGuideClstrG"};
parent {$name + "_rUpperLegTopGuideClstrG"} {$name + "_rHipJ"};
makeIdentity -apply false -r 1 {$name + "_rUpperLegTopGuideClstrG"};
parent -w {$name + "_rUpperLegTopGuideClstrG"};
parent {$name + "_rUpperLegTopGuideClstr"} {$name + "_rUpperLegTopGuideClstrG"};
aimConstraint -aimVector 1 0 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rHipCurveLctr"} {$name + "_rKneeTopCurveLctr"} {$name + "_rUpperLegTopGuideClstrG"};

select {$name + "_rUpperLegCurveGuide.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_rUpperLegBtmGuideClstr"};
group -em -n {$name + "_rUpperLegBtmGuideClstrG"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rUpperLegBtmGuideClstrG"};
orientConstraint {$name + "_rHipFKC"} {$name + "_rUpperLegBtmGuideClstrG"};
delete {$name + "_rUpperLegBtmGuideClstrG_orientConstraint1"};
parent {$name + "_rUpperLegBtmGuideClstr"} {$name + "_rUpperLegBtmGuideClstrG"};
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "objectrotation"
-worldUpVector -1 0 0 -worldUpObject {$name + "_rLegUpLctr"} {$name + "_rLegUpLctr"} {$name + "_rUpperLegBtmGuideClstrG"}; 

////////////////////////////////////////////////////////////////////////////////
///////////////////////////CREATE RIGHT CURVE CONTROLS///////////////////////////
////////////////////////////////////////////////////////////////////////////////

nurbsSquare -n {$name + "_rLowerLegCurveC"} -c 0 0 0 -nr 0 1 0 -sl1 1 -sl2 1 -sps 1 -d 3 -ch 1 ;
setAttr {$name + "_rLowerLegCurveC.rotateOrder"} 1;
parent -r -s {"right" + $name + "_rLowerLegCurveCShape"} {"bottom" + $name + "_rLowerLegCurveCShape"} {"left" + $name + "_rLowerLegCurveCShape"} {"top" + $name + "_rLowerLegCurveC"} ;
parent -w {"top" + $name + "_rLowerLegCurveC"};
delete {$name + "_rLowerLegCurveC"};
rename {"top" + $name + "_rLowerLegCurveC"} {$name + "_rLowerLegCurveC"};

$rKneeLength = `getAttr {$name + "_rKneeJ.tx"}`;
$rAnkleLength = `getAttr {$name + "_rAnkleJ.tx"}`;
$rLegLength = (($rKneeLength + $rAnkleLength) /2);


setAttr ({$name + "_rLowerLegCurveC.scale"}, ($rLegLength/2), ($rLegLength/2), ($rLegLength/2));
rotate -r 0 0 90 {$name + "_rLowerLegCurveC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLowerLegCurveC"};


duplicate -n {$name + "_rKneeCurveC"} {$name + "_rLowerLegCurveC"};
setAttr {$name + "_rKneeCurveC.rotateOrder"} 1;
duplicate -n {$name + "_rUpperLegCurveC"} {$name + "_rLowerLegCurveC"};
setAttr {$name + "_rUpperLegCurveC.rotateOrder"} 1;

group -n {$name + "_rKneeCurveCG"} {$name + "_rKneeCurveC"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rKneeCurveCG"};
orientConstraint {$name + "_rLegUpLctr"} {$name + "_rKneeCurveCG"};

//CONSTRAIN CENTER CLUSTERS TO MID CONTROL
delete {$name + "_rLowerLegTopClstrG_pointConstraint1"} {$name + "_rLowerLegTopClstrG_aimConstraint1"}
{$name + "_rLowerLegTopGuideClstrG_pointConstraint1"} {$name + "_rLowerLegTopGuideClstrG_aimConstraint1"}
{$name + "_rUpperLegBtmClstrG_pointConstraint1"} {$name + "_rUpperLegBtmClstrG_aimConstraint1"}
{$name + "_rUpperLegBtmGuideClstrG_pointConstraint1"} {$name + "_rUpperLegBtmGuideClstrG_aimConstraint1"};

parentConstraint {$name + "_rKneeCurveC"} {$name + "_rLowerLegTopClstrG"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rLowerLegTopGuideClstrG"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rUpperLegBtmClstrG"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rUpperLegBtmGuideClstrG"};

//CREATE RIGHT LOCATORS FOR ANKLE TWIST
spaceLocator -n {$name + "_rKneeTwistLctr"};
duplicate -n {$name + "_rAnkleAimLctr"} {$name + "_rKneeTwistLctr"};
duplicate -n {$name + "_rAnkleTwistLctr"} {$name + "_rKneeTwistLctr"};
duplicate -n {$name + "_rKneeTwist75Lctr"} {$name + "_rKneeTwistLctr"};
duplicate -n {$name + "_rKneeTwist50Lctr"} {$name + "_rKneeTwistLctr"};
duplicate -n {$name + "_rKneeTwist25Lctr"} {$name + "_rKneeTwistLctr"};
parent {$name + "_rAnkleTwistLctr"} {$name + "_rAnkleAimLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rKneeCurveC"} {$name + "_rAnkleJ"} {$name + "_rKneeTwistLctr"};
pointConstraint {$name + "_rKneeCurveC"} {$name + "_rKneeTwistLctr"};
parentConstraint {$name + "_rKneeJ"} {$name + "_rAnkleAimLctr"};
parentConstraint {$name + "_rAnkleFKC"} {$name + "_rAnkleTwistLctr"};
delete {$name + "_rAnkleTwistLctr_parentConstraint1"};
parentConstraint -mo {$name + "_rAnkleJ"} {$name + "_rAnkleTwistLctr"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rKneeJ"} {$name + "_rKneeTwist75Lctr"};
setAttr {$name + "_rKneeTwist75Lctr_parentConstraint1." + $name + "_rKneeCurveCW0"} 3;
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rKneeJ"} {$name + "_rKneeTwist50Lctr"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rKneeJ"} {$name + "_rKneeTwist25Lctr"};
setAttr {$name + "_rKneeTwist25Lctr_parentConstraint1." + $name + "_rKneeJW1"} 3;

//CREATE MULTIPLY DIVIDES FOR RIGHT TWIST
shadingNode -n {$name + "_rAnkleTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_rAnkleTwistLctr.rotateX"} {$name + "_rAnkleTwist_MD.input1X"};
connectAttr -force {$name + "_rAnkleTwistLctr.rotateX"} {$name + "_rAnkleTwist_MD.input1Y"};
connectAttr -force {$name + "_rAnkleTwistLctr.rotateX"} {$name + "_rAnkleTwist_MD.input1Z"};
setAttr {$name + "_rAnkleTwist_MD.input2X"} 0.25;
setAttr {$name + "_rAnkleTwist_MD.input2Y"} 0.5;
setAttr {$name + "_rAnkleTwist_MD.input2Z"} 0.75;

shadingNode -n {$name + "_rKNeeTwist_MD"} -asUtility multiplyDivide;
connectAttr -force {$name + "_rKneeCurveC.rotateX"} {$name + "_rKNeeTwist_MD.input1X"};
connectAttr -force {$name + "_rKneeCurveC.rotateX"} {$name + "_rKNeeTwist_MD.input1Y"};
connectAttr -force {$name + "_rKneeCurveC.rotateX"} {$name + "_rKNeeTwist_MD.input1Z"};
setAttr {$name + "_rKNeeTwist_MD.input2X"} 0.25;
setAttr {$name + "_rKNeeTwist_MD.input2Y"} 0.5;
setAttr {$name + "_rKNeeTwist_MD.input2Z"} 0.75;

//RIGHT MOTION PATHS FOR CONTROLS
group -n {$name + "_rLowerLegCurveCG"} {$name + "_rLowerLegCurveC"};
setAttr {$name + "_rLowerLegCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_rLowerLegGuide_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rKneeTwist50Lctr"} {$name + "_rLowerLegCurveCG"} {$name + "_rLowerLegCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerLegGuide_MP"};
setAttr {$name + "_rLowerLegGuide_MP.uValue"} .5;
parentConstraint {$name + "_rLowerLegCurveC"} {$name + "_rLowerLegMidClstr"};
connectAttr -force {$name + "_rAnkleTwist_MD.outputY"} {$name + "_rLowerLegGuide_MP.frontTwist"};

group -n {$name + "_rUpperLegCurveCG"} {$name + "_rUpperLegCurveC"};
setAttr {$name + "_rUpperLegCurveCG.rotateOrder"} 1;
pathAnimation -n {$name + "_rUpperLegGuide_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rHipJ"} {$name + "_rUpperLegCurveCG"} {$name + "_rUpperLegCurveGuide"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperLegGuide_MP"};
setAttr {$name + "_rUpperLegGuide_MP.uValue"} .5;
parentConstraint {$name + "_rUpperLegCurveC"} {$name + "_rUpperLegMidClstr"};
connectAttr -force {$name + "_rKNeeTwist_MD.outputY"} {$name + "_rUpperLegGuide_MP.frontTwist"};

//RIGHT INDIVIDUAL JOINT CONTROLS
duplicate -n {$name + "_rLowerLegCurve1C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_rLowerLegCurve2C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_rLowerLegCurve3C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_rUpperLegCurve1C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_rUpperLegCurve2C"} {$name + "_CurveLeg1"};
duplicate -n {$name + "_rUpperLegCurve3C"} {$name + "_CurveLeg1"};
scale -r ($rLowerLegLength/10) ($rLowerLegLength/10) ($rLowerLegLength/10) {$name + "_rLowerLegCurve1C"} {$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurve3C"};
$rUpperLegLength = `getAttr {$name + "_rKneeJ.tx"}`;
scale -r ($rUpperLegLength/10) ($rUpperLegLength/10) ($rUpperLegLength/10) {$name + "_rUpperLegCurve1C"} {$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurve3C"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLowerLegCurve1C"} {$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurve3C"} {$name + "_rUpperLegCurve1C"} {$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurve3C"};

//RIGHT MOTION PATHS FOR INDIVIDUAL JOINT CONTROLS
group -n {$name + "_rLowerLegCurve1CG"} {$name + "_rLowerLegCurve1C"};
setAttr {$name + "_rLowerLegCurve1CG.rotateOrder"} 1;
group -n {$name + "_rLowerLegCurve2CG"} {$name + "_rLowerLegCurve2C"};
setAttr {$name + "_rLowerLegCurve2CG.rotateOrder"} 1;
group -n {$name + "_rLowerLegCurve3CG"} {$name + "_rLowerLegCurve3C"};
setAttr {$name + "_rLowerLegCurve3CG.rotateOrder"} 1;
group -n {$name + "_rUpperLegCurve1CG"} {$name + "_rUpperLegCurve1C"};
setAttr {$name + "_rUpperLegCurve1CG.rotateOrder"} 1;
group -n {$name + "_rUpperLegCurve2CG"} {$name + "_rUpperLegCurve2C"};
setAttr {$name + "_rUpperLegCurve2CG.rotateOrder"} 1;
group -n {$name + "_rUpperLegCurve3CG"} {$name + "_rUpperLegCurve3C"};
setAttr {$name + "_rUpperLegCurve3CG.rotateOrder"} 1;

pathAnimation -n {$name + "_rLowerLeg1_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rKneeTwist75Lctr"} {$name + "_rLowerLegCurve1CG"} {$name + "_rLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerLeg1_MP"};
setAttr {$name + "_rLowerLeg1_MP.uValue"} .25;
connectAttr -force {$name + "_rAnkleTwist_MD.outputX"} {$name + "_rLowerLeg1_MP.frontTwist"};

pathAnimation -n {$name + "_rLowerLeg2_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rKneeTwist50Lctr"} {$name + "_rLowerLegCurve2CG"} {$name + "_rLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerLeg2_MP"};
setAttr {$name + "_rLowerLeg2_MP.uValue"} .5;
connectAttr -force {$name + "_rAnkleTwist_MD.outputY"} {$name + "_rLowerLeg2_MP.frontTwist"};

pathAnimation -n {$name + "_rLowerLeg3_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rKneeTwist25Lctr"} {$name + "_rLowerLegCurve3CG"} {$name + "_rLowerLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rLowerLeg3_MP"};
setAttr {$name + "_rLowerLeg3_MP.uValue"} .75;
connectAttr -force {$name + "_rAnkleTwist_MD.outputZ"} {$name + "_rLowerLeg3_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperLeg1_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rHipJ"} {$name + "_rUpperLegCurve1CG"} {$name + "_rUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperLeg1_MP"};
setAttr {$name + "_rUpperLeg1_MP.uValue"} .25;
connectAttr -force {$name + "_rKNeeTwist_MD.outputX"} {$name + "_rUpperLeg1_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperLeg2_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rHipJ"} {$name + "_rUpperLegCurve2CG"} {$name + "_rUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperLeg2_MP"};
setAttr {$name + "_rUpperLeg2_MP.uValue"} .5;
connectAttr -force {$name + "_rKNeeTwist_MD.outputY"} {$name + "_rUpperLeg2_MP.frontTwist"};

pathAnimation -n {$name + "_rUpperLeg3_MP"} -fractionMode true -followAxis x -upAxis z -worldUpType "objectrotation" -inverseFront true
-worldUpVector 0 0 1 -worldUpObject {$name + "_rHipJ"} {$name + "_rUpperLegCurve3CG"} {$name + "_rUpperLegCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_rUpperLeg3_MP"};
setAttr {$name + "_rUpperLeg3_MP.uValue"} .75;
connectAttr -force {$name + "_rKNeeTwist_MD.outputZ"} {$name + "_rUpperLeg3_MP.frontTwist"};


//RIGHT CURVE LEG JOINTS
select -cl;
joint -n {$name + "_rLowerLegCurveJ1"};
parentConstraint {$name + "_rLowerLegCurve1C"} {$name + "_rLowerLegCurveJ1"};
select -cl;
joint -n {$name + "_rLowerLegCurveJ2"};
parentConstraint {$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurveJ2"};
select -cl;
joint -n {$name + "_rLowerLegCurveJ3"};
parentConstraint {$name + "_rLowerLegCurve3C"} {$name + "_rLowerLegCurveJ3"};
select -cl;
joint -n {$name + "_rKneeCurveJ"};
parentConstraint {$name + "_rKneeCurveC"} {$name + "_rKneeCurveJ"};
select -cl;
joint -n {$name + "_rUpperLegCurveJ1"};
parentConstraint {$name + "_rUpperLegCurve1C"} {$name + "_rUpperLegCurveJ1"};
select -cl;
joint -n {$name + "_rUpperLegCurveJ2"};
parentConstraint {$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurveJ2"};
select -cl;
joint -n {$name + "_rUpperLegCurveJ3"};
parentConstraint {$name + "_rUpperLegCurve3C"} {$name + "_rUpperLegCurveJ3"};
select -cl;

joint -n {$name + "_rHipCurveJ"};
pointConstraint {$name + "_rHipJ"} {$name + "_rHipCurveJ"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rHipJ"} {$name + "_rUpperLegCurveJ1"} {$name + "_rHipCurveJ"}; 

//ADD RIGHT CURVE ATTRIBUTE TO IK FK SWITCH
addAttr -ln "curve"  -at double  -min 0 -max 1 -dv 0 {$name + "_rLegSwitchC"};
setAttr -e-keyable true {$name + "_rLegSwitchC.curve"};

shadingNode -asUtility multiplyDivide -n {$name + "_rLegCurve_MD1"};
connectAttr -force {$name + "_rLegSwitchC.curve"} {$name + "_rLegCurve_MD1.input1X"};
setAttr {$name + "_rLegCurve_MD1.input2X"} 2;
shadingNode -asUtility multiplyDivide -n {$name + "_rLegCurve_MD2"};
connectAttr -force {$name + "_rLegCurve_MD1.outputX"} {$name + "_rLegCurve_MD2.input1X"};
connectAttr -force {$name + "_rHipFKC.scaleX"} {$name + "_rLegCurve_MD2.input2X"};

connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rLowerLegBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rLowerLegBtmClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rLowerLegTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rLowerLegTopClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rUpperLegBtmGuideClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rUpperLegBtmClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rUpperLegTopGuideClstrG.scaleX"};
connectAttr -f {$name + "_rLegCurve_MD2.outputX"} {$name + "_rUpperLegTopClstrG.scaleX"};

//ADD ATTRIBUTE TO MAIN CONTROL FOR RIGHT LEG CURVE
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_rLowerLegCurveC.v"};
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_rKneeCurveC.v"};
connectAttr -f {$name + "_MainC.legCurveMacro"} {$name + "_rUpperLegCurveC.v"};

connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rLowerLegCurve1C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rLowerLegCurve2C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rLowerLegCurve3C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rUpperLegCurve1C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rUpperLegCurve2C.v"};
connectAttr -f {$name + "_MainC.legCurveMicro"} {$name + "_rUpperLegCurve3C.v"};

//CONNECT RIGHT SCALE
shadingNode -asUtility blendColors -n {$name + "_rUpperLegCurve1_Blend"};
setAttr {$name + "_rUpperLegCurve1_Blend.blender"} 0.9;
connectAttr -force {$name + "_rHipJ.scale"} {$name + "_rUpperLegCurve1_Blend.color1"};
connectAttr -force {$name + "_rKneeJ.scale"} {$name + "_rUpperLegCurve1_Blend.color2"};
connectAttr -force {$name + "_rUpperLegCurve1_Blend.output"} {$name + "_rUpperLegCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_rUpperLegCurve2_Blend"} {$name + "_rUpperLegCurve1_Blend"};
setAttr {$name + "_rUpperLegCurve2_Blend.blender"} 0.75;
connectAttr -force {$name + "_rUpperLegCurve2_Blend.output"} {$name + "_rUpperLegCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_rUpperLegCurve3_Blend"} {$name + "_rUpperLegCurve1_Blend"};
setAttr {$name + "_rUpperLegCurve3_Blend.blender"} 0.6;
connectAttr -force {$name + "_rUpperLegCurve3_Blend.output"} {$name + "_rUpperLegCurveJ3.scale"};

duplicate -rr -ic -n {$name + "_rKneeCurve_Blend"} {$name + "_rUpperLegCurve1_Blend"};
setAttr {$name + "_rKneeCurve_Blend.blender"} 0.5;
connectAttr -force {$name + "_rKneeCurve_Blend.output"} {$name + "_rKneeCurveJ.scale"};

duplicate -rr -ic -n {$name + "_rLowerLegCurve1_Blend"} {$name + "_rUpperLegCurve1_Blend"};
setAttr {$name + "_rLowerLegCurve1_Blend.blender"} 0.4;
connectAttr -force {$name + "_rLowerLegCurve1_Blend.output"} {$name + "_rLowerLegCurveJ1.scale"};

duplicate -rr -ic -n {$name + "_rLowerLegCurve2_Blend"} {$name + "_rLowerLegCurve1_Blend"};
setAttr {$name + "_rLowerLegCurve2_Blend.blender"} 0.25;
connectAttr -force {$name + "_rLowerLegCurve2_Blend.output"} {$name + "_rLowerLegCurveJ2.scale"};

duplicate -rr -ic -n {$name + "_rLowerLegCurve3_Blend"} {$name + "_rLowerLegCurve1_Blend"};
setAttr {$name + "_rLowerLegCurve3_Blend.blender"} 0.1;
connectAttr -force {$name + "_rLowerLegCurve3_Blend.output"} {$name + "_rLowerLegCurveJ3.scale"};

//RIGHT CLEAN UP
parent {$name + "_rKneeCurveLctr"} {$name + "_rLowerLegTopClstrG"} {$name + "_rLowerLegBtmClstrG"}
{$name + "_rLowerLegTopGuideClstrG"} {$name + "_rLowerLegBtmGuideClstrG"} {$name + "_rHipCurveLctr"}
{$name + "_rKneeTopCurveLctr"} {$name + "_rUpperLegTopClstrG"} {$name + "_rUpperLegBtmClstrG"} {$name + "_rUpperLegTopGuideClstrG"}
{$name + "_rUpperLegBtmGuideClstrG"} {$name + "_rKneeCurveCG"} {$name + "_rLowerLegCurveJ1"} {$name + "_rLowerLegCurveJ2"}
{$name + "_rLowerLegCurveJ3"} {$name + "_rKneeCurveJ"} {$name + "_rUpperLegCurveJ1"} {$name + "_rUpperLegCurveJ2"} {$name + "_rUpperLegCurveJ3"}
{$name + "_rHipCurveJ"} {$name + "_curveNodesG"};

parent {$name + "_rLowerLegCurve"} {$name + "_rUpperLegCurve"} {$name + "_rLowerLegCurveGuide"} {$name + "_rUpperLegCurveGuide"}
{$name + "_rLowerLegMidClstr"} {$name + "_rUpperLegMidClstr"} {$name + "_rLowerLegCurveCG"} {$name + "_rUpperLegCurveCG"}
{$name + "_rLowerLegCurve1CG"} {$name + "_rLowerLegCurve2CG"} {$name + "_rLowerLegCurve3CG"} {$name + "_rUpperLegCurve1CG"}
{$name + "_rUpperLegCurve2CG"} {$name + "_rUpperLegCurve3CG"} {$name + "_extraCurveNodesG"};

connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerLegCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerLegCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerLegCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rLowerLegCurve3CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperLegCurveCG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperLegCurve1CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperLegCurve2CG.scale"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_rUpperLegCurve3CG.scale"};

setAttr {$name + "_rAnkleIKLctr.v"} 0;
setAttr {$name + "_rAnkleFKLctr.v"} 0;
setAttr {$name + "_rKneeTopCurveLctr.v"} 0;
setAttr {$name + "_rKneeCurveLctr.v"} 0;
setAttr {$name + "_rHipCurveLctr.v"} 0;
setAttr {$name + "_rKneeTwist25Lctr.v"} 0;
setAttr {$name + "_rKneeTwistLctr.v"} 0;
setAttr {$name + "_rAnkleAimLctr.v"} 0;
setAttr {$name + "_rKneeTwist75Lctr.v"} 0;
setAttr {$name + "_rKneeTwist50Lctr.v"} 0;

setAttr {$name + "_rUpperLegBtmGuideClstr.v"} 0;
setAttr {$name + "_rLowerLegMidClstr.v"} 0;
setAttr {$name + "_rUpperLegMidClstr.v"} 0;
setAttr {$name + "_rLowerLegTopClstr.v"} 0;
setAttr {$name + "_rLowerLegBtmClstr.v"} 0;
setAttr {$name + "_rLowerLegTopGuideClstr.v"} 0;
setAttr {$name + "_rLowerLegBtmGuideClstr.v"} 0;
setAttr {$name + "_rUpperLegTopClstr.v"} 0;
setAttr {$name + "_rUpperLegBtmClstr.v"} 0;
setAttr {$name + "_rUpperLegTopGuideClstr.v"} 0;
setAttr {$name + "_rLegUpLctr.v"} 0;

setAttr {$name + "_rHipJ.overrideEnabled"} 1;
setAttr {$name + "_rHipJ.overrideLevelOfDetail"} 1;
setAttr {$name + "_rAnkleJ.overrideEnabled"} 1;


setAttr {$name + "_rUpperLegCurveGuide.v"} 0;
setAttr {$name + "_rLowerLegCurveGuide.v"} 0;
setAttr {$name + "_rUpperLegCurve.template"} 1;
setAttr {$name + "_rLowerLegCurve.template"} 1;

editDisplayLayerMembers -noRecurse {$name + "_JointsLayer"} {$name + "_rAnkleJFK"} {$name + "_rLowerLegCurveJ1"}
{$name + "_rLowerLegCurveJ2"} {$name + "_rLowerLegCurveJ3"} {$name + "_rKneeCurveJ"} {$name + "_rUpperLegCurveJ1"} {$name + "_rUpperLegCurveJ2"}
{$name + "_rUpperLegCurveJ3"} {$name + "_rHipCurveJ"};

editDisplayLayerMembers -noRecurse {$name + "_ControlsLayer"} {$name + "_rUpperLegCurve3C"}
{$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurveC"} {$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurve1C"} {$name + "_rKneeCurveC"}
{$name + "_rLowerLegCurveC"} {$name + "_rLowerLegCurve3C"} {$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurve1C"} {$name + "_rLowerLegCurve"}
{$name + "_rUpperLegCurve"} {$name + "_rLowerLegCurveGuide"} {$name + "_rUpperLegCurveGuide"} ;

//LOCK AND HIDE
select {$name + "_lKneeCurveC"} {$name + "_lLowerLegCurveC"} {$name + "_lUpperLegCurveC"} {$name + "_lLowerLegCurve1C"} {$name + "_lLowerLegCurve2C"}
{$name + "_lLowerLegCurve3C"} {$name + "_lUpperLegCurve1C"} {$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurve3C"} {$name + "_rKneeCurveC"}
{$name + "_rLowerLegCurveC"} {$name + "_rUpperLegCurveC"} {$name + "_rLowerLegCurve1C"} {$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurve3C"}
{$name + "_rUpperLegCurve1C"} {$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurve3C"} ;
string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l false -k true {$currentCurveControl + ".sx"};
setAttr -l false -k true {$currentCurveControl + ".sy"};
setAttr -l false -k true {$currentCurveControl + ".sz"};
setAttr -l false -k true {$currentCurveControl + ".v"};
}

select {$name + "_lUpperLegCurveC"} {$name + "_rUpperLegCurveC"} {$name + "_rLowerLegCurveC"} {$name + "_lLowerLegCurveC"} ;
string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l false -k true {$currentCurveControl + ".rx"};
setAttr -l false -k true {$currentCurveControl + ".ry"};
setAttr -l false -k true {$currentCurveControl + ".rz"};
}

delete {$name + "_CurveLeg1"};

//LOCK CHANNELS
select {$name + "_lLowerLegCurveC"} {$name + "_lUpperLegCurveC"} {$name + "_lLowerLegCurve1C"}
{$name + "_lLowerLegCurve2C"} {$name + "_lLowerLegCurve3C"} {$name + "_lUpperLegCurve1C"}
{$name + "_lUpperLegCurve2C"} {$name + "_lUpperLegCurve3C"} {$name + "_lKneeCurveC"}
{$name + "_rLowerLegCurveC"} {$name + "_rUpperLegCurveC"} {$name + "_rLowerLegCurve1C"}
{$name + "_rLowerLegCurve2C"} {$name + "_rLowerLegCurve3C"} {$name + "_rUpperLegCurve1C"}
{$name + "_rUpperLegCurve2C"} {$name + "_rUpperLegCurve3C"} {$name + "_rKneeCurveC"} ;

string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l 1 -k 0 {$currentCurveControl + ".sx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sy"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".v"};
}

select {$name + "_lLowerLegCurveCG"} {$name + "_lUpperLegCurveCG"} {$name + "_lLowerLegCurve1CG"}
{$name + "_lLowerLegCurve2CG"} {$name + "_lLowerLegCurve3CG"} {$name + "_lUpperLegCurve1CG"}
{$name + "_lUpperLegCurve2CG"} {$name + "_lUpperLegCurve3CG"} {$name + "_rLowerLegCurveCG"}
{$name + "_rUpperLegCurveCG"} {$name + "_rLowerLegCurve1CG"} {$name + "_rLowerLegCurve2CG"}
{$name + "_rLowerLegCurve3CG"} {$name + "_rUpperLegCurve1CG"} {$name + "_rUpperLegCurve2CG"}
{$name + "_rUpperLegCurve3CG"} ;

string $curveControls[] = `ls -sl`;
string $currentCurveControl;
for ($currentCurveControl in $curveControls)
{
setAttr -l 1 -k 0 {$currentCurveControl + ".tx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".ty"};
setAttr -l 1 -k 0 {$currentCurveControl + ".tz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".rx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".ry"};
setAttr -l 1 -k 0 {$currentCurveControl + ".rz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sx"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sy"};
setAttr -l 1 -k 0 {$currentCurveControl + ".sz"};
setAttr -l 1 -k 0 {$currentCurveControl + ".v"};
}

changeLinearUnit $currentUnit;
}

//////////////////////////////////////////////////////////////////////////////
///////////////////////////////    GEOMETRY    ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////
global proc rapidMesh()
{
	global string $charName;
string $name = `textField -q -text $charName`;

global string $charName;
string $name = `textField -q -text $charName`;

string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}

print "BUILDING ";
print $name;
print " GEOMETRY...\n";
//CREATE GEOMETRY GROUP
group -em -n {$name + "_scaleGeoG"};
group -n {$name + "_geoSkinG"} {$name + "_scaleGeoG"};
connectAttr -f {$name + "_MainC.scale"} {$name + "_scaleGeoG.scale"};

polyCylinder -n baseCylinder -r 1.5 -h 1 -sx 16 -sy 7 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
move -r 0 -.5 0 baseCylinder.scalePivot baseCylinder.rotatePivot ;
move -r -os -wd 0 0.5 0 baseCylinder;
group -n baseCylinderG baseCylinder; xform -os -piv 0 0 0;
rotate 0 0 -90 baseCylinderG;
makeIdentity -apply true -t 1 -r 1 -s 1;

scale -r 1 0.9 0.9 baseCylinder.vtx[112:127] baseCylinder.vtx[129] ;
scale -r 1 0.92 0.92 baseCylinder.vtx[96:127] baseCylinder.vtx[129] ;
scale -r 1 0.95 0.95 baseCylinder.vtx[80:127] baseCylinder.vtx[129] ;
scale -r 1 0.99 0.99 baseCylinder.vtx[64:127] baseCylinder.vtx[129] ;
scale -r 1 0.95 0.95 baseCylinder.vtx[0:15] baseCylinder.vtx[128] ;
scale -r 1 0.98 0.98 baseCylinder.vtx[0:31] baseCylinder.vtx[128] ;

polySphere -n baseSphere -r 1.5 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
makeIdentity -apply true -t 1 -r 1 -s 1;
group -n baseSphereG baseSphere; xform -os -piv 0 0 0;

/////LEFT LEG/////
$lKneeLength = `xform -q -t {$name + "_lKneeJ"}`;
$lAnkleLength = `xform -q -t {$name + "_lAnkleJ"}`;
$lLegLength[0] = (($lKneeLength[0] + $lAnkleLength[0]) /2);
//LEFT UPPER LEG
$lUprLegLength = `getAttr {$name + "_lKneeJ.tx"}`;
$lLwrLegLength = `getAttr {$name + "_lAnkleJ.tx"}`;

$rKneeLength = `xform -q -t {$name + "_rKneeJ"}`;
$rAnkleLength = `xform -q -t {$name + "_rAnkleJ"}`;
$rLegLength[0] = (($rKneeLength[0] + $rAnkleLength[0]) /2);
//LEFT UPPER LEG
$rUprLegLength = `getAttr {$name + "_rKneeJ.tx"}`;
$rLwrLegLength = `getAttr {$name + "_rAnkleJ.tx"}`;

duplicate -rr -un -n {$name + "_lUprLegGeoG"} baseCylinderG ;
rename {$name + "_lUprLegGeoG|baseCylinder"} {$name + "_lUprLegGeo"};
parent {$name + "_lUprLegGeoG"} {$name + "_scaleGeoG"};

parentConstraint {$name + "_lHipJ"} {$name + "_lUprLegGeoG"};
delete {$name + "_lUprLegGeoG_parentConstraint1"};
setAttr {$name + "_lUprLegGeoG.sx"} $lUprLegLength;
setAttr {$name + "_lUprLegGeoG.sy"} ($lLegLength[0] /20);
setAttr {$name + "_lUprLegGeoG.sz"} ($lLegLength[0] /20);
makeIdentity -apply true -t 1 -s 1 {$name + "_lUprLegGeoG"};
parentConstraint {$name + "_lHipJ"} {$name + "_lUprLegGeoG"};
connectAttr -f {$name + "_lHipJ.scale"} {$name + "_lUprLegGeoG.scale"};


//LEFT LOWER LEG
duplicate -rr -un -n {$name + "_lLwrLegGeoG"} baseCylinderG ;
rename {$name + "_lLwrLegGeoG|baseCylinder"} {$name + "_lLwrLegGeo"};
parent {$name + "_lLwrLegGeoG"} {$name + "_scaleGeoG"};

parentConstraint {$name + "_lKneeJ"} {$name + "_lLwrLegGeoG"};
delete {$name + "_lLwrLegGeoG_parentConstraint1"};
setAttr {$name + "_lLwrLegGeoG.sx"} $lLwrLegLength;
setAttr {$name + "_lLwrLegGeoG.sy"} ($lLegLength[0] /20);
setAttr {$name + "_lLwrLegGeo.sz"} ($lLegLength[0] /20);
makeIdentity -apply true -t 1 -s 1 {$name + "_lLwrLegGeoG"};
parentConstraint {$name + "_lKneeJ"} {$name + "_lLwrLegGeoG"};
connectAttr -f {$name + "_lKneeJ.scale"} {$name + "_lLwrLegGeoG.scale"};

duplicate -rr -un -n {$name + "_lKneeGeoG"} baseSphereG;
rename {$name + "_lKneeGeoG|baseSphere"} {$name + "_lKneeGeo"};
parentConstraint {$name + "_lKneeJ"} {$name + "_lKneeGeoG"};
setAttr {$name + "_lKneeGeoG.sx"} ($lLegLength[0] /20);
setAttr {$name + "_lKneeGeoG.sy"} ($lLegLength[0] /20);
setAttr {$name + "_lKneeGeoG.sz"} ($lLegLength[0] /20);
parent {$name + "_lKneeGeoG"} {$name + "_scaleGeoG"};
duplicate -rr -un -n {$name + "_rKneeGeoG"} baseSphereG;
rename {$name + "_rKneeGeoG|baseSphere"} {$name + "_rKneeGeo"};
parentConstraint {$name + "_rKneeJ"} {$name + "_rKneeGeoG"};
setAttr {$name + "_rKneeGeoG.sx"} ($rLegLength[0] /20);
setAttr {$name + "_rKneeGeoG.sy"} ($rLegLength[0] /20);
setAttr {$name + "_rKneeGeoG.sz"} ($rLegLength[0] /20);
parent {$name + "_rKneeGeoG"} {$name + "_scaleGeoG"};

duplicate -rr -un -n {$name + "_lHipGeoG"} baseSphereG;
rename {$name + "_lHipGeoG|baseSphere"} {$name + "_lHipGeo"};
parentConstraint {$name + "_lHipJ"} {$name + "_lHipGeoG"};
setAttr {$name + "_lHipGeo.sx"} ($lLegLength[0] /20);            
setAttr {$name + "_lHipGeo.sy"} ($lLegLength[0] /20);
setAttr {$name + "_lHipGeo.sz"} ($lLegLength[0] /20);
parent {$name + "_lHipGeoG"} {$name + "_scaleGeoG"};
duplicate -rr -un -n {$name + "_rHipGeoG"} baseSphereG;
rename {$name + "_rHipGeoG|baseSphere"} {$name + "_rHipGeo"};
parentConstraint {$name + "_rHipJ"} {$name + "_rHipGeoG"};
setAttr {$name + "_rHipGeo.sx"} ($rLegLength[0] /20);            
setAttr {$name + "_rHipGeo.sy"} ($rLegLength[0] /20);
setAttr {$name + "_rHipGeo.sz"} ($rLegLength[0] /20);
parent {$name + "_rHipGeoG"} {$name + "_scaleGeoG"};

//LEFT HEEL
duplicate -rr -un -n {$name + "_lAnkleGeoG"} baseSphereG;
rename {$name + "_lAnkleGeoG|baseSphere"} {$name + "_lAnkleGeo"};
parentConstraint {$name + "_lAnkleJ"} {$name + "_lAnkleGeoG"};
setAttr {$name + "_lAnkleGeoG.sx"} ($lLegLength[0] /20);            
setAttr {$name + "_lAnkleGeoG.sy"} ($lLegLength[0] /20);
setAttr {$name + "_lAnkleGeoG.sz"} ($lLegLength[0] /20);
parent {$name + "_lAnkleGeoG"} {$name + "_scaleGeoG"};
duplicate -rr -un -n {$name + "_rAnkleGeoG"} baseSphereG;
rename {$name + "_rAnkleGeoG|baseSphere"} {$name + "_rAnkleGeo"};
parentConstraint {$name + "_rAnkleJ"} {$name + "_rAnkleGeoG"};
setAttr {$name + "_rAnkleGeoG.sx"} ($rLegLength[0] /20);            
setAttr {$name + "_rAnkleGeoG.sy"} ($rLegLength[0] /20);
setAttr {$name + "_rAnkleGeoG.sz"} ($rLegLength[0] /20);
parent {$name + "_rAnkleGeoG"} {$name + "_scaleGeoG"};

polyCube -n {$name + "_lHeelGeo"} -sy 2;
group -n {$name + "_lHeelGeoG"} {$name + "_lHeelGeo"};
move -r -os -wd 0 .5 0  {$name + "_lHeelGeo.vtx[0:11]"} ;
parentConstraint {$name + "_lFootOutTilt"} {$name + "_lFootInTilt"} {$name + "_lFootHeelPivot"} {$name + "_lHeelGeoG"} ;
parent {$name + "_lHeelGeoG"} {$name + "_scaleGeoG"};

$lAnkleLoc = `xform -q -ws -t {$name + "_lAnkleJ"}`;
setAttr {$name + "_lHeelGeoG.sy"} $lAnkleLoc[1];

select {$name + "_lHeelGeoShape.vtx[0:3]"} ;
newCluster " -envelope 1";
rename {$name + "_lHeelFrClstr"};
pointConstraint -skip y {$name + "_lBallJ"} {$name + "_lHeelFrClstr"};

select {$name + "_lHeelGeoShape.vtx[8:11]"} ;
newCluster " -envelope 1";
rename {$name + "_lHeelBckClstr"};
pointConstraint -skip y {$name + "_lFootHeelPivot"} {$name + "_lHeelBckClstr"};

select {$name + "_lHeelGeoShape.vtx[1]"} {$name + "_lHeelGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lHeelOutClstr"};
pointConstraint -skip y {$name + "_lFootOutTilt"} {$name + "_lHeelOutClstr"};

select {$name + "_lHeelGeoShape.vtx[0]"} {$name + "_lHeelGeoShape.vtx[2]"};
newCluster " -envelope 1";
rename {$name + "_lHeelInClstr"};
pointConstraint -skip y {$name + "_lFootInTilt"} {$name + "_lHeelInClstr"};

spaceLocator -n {$name + "_lFootWidthAim"};
spaceLocator -n {$name + "_lFootWidthTarget"};
parent {$name + "_lFootWidthTarget"} {$name + "_lFootWidthAim"};
pointConstraint {$name + "_lFootInTilt"} {$name + "_lFootWidthAim"};
aimConstraint {$name + "_lFootOutTilt"} {$name + "_lFootWidthAim"};
pointConstraint {$name + "_lFootOutTilt"} {$name + "_lFootWidthTarget"};

$lFootWidth = `getAttr {$name + "_lFootWidthTarget"}.tx`;

$HeelPosition = `xform -q -ws -t {$name + "_lFootHeelPivot"}`;

scale -r ($lFootWidth /2) 1 ($lFootWidth /2) {$name + "_lHeelBckClstr"} ;

select {$name + "_lHeelGeoShape.vtx[4:7]"} ;
newCluster " -envelope 1";
rename {$name + "_lHeelTopClstr"};
pointConstraint {$name + "_lAnkleJ"} {$name + "_lHeelTopClstr"};
scale -r ($lFootWidth /5) 1 ($lFootWidth /5) {$name + "_lHeelTopClstr"} ;

delete {$name + "_lHeelGeoG_parentConstraint1"};
move $lAnkleLoc[0] $lAnkleLoc[1] $lAnkleLoc[2] {$name + "_lHeelGeoG.scalePivot"} {$name + "_lHeelGeoG.rotatePivot"} ;
move $lAnkleLoc[0] $lAnkleLoc[1] $lAnkleLoc[2] {$name + "_lHeelGeo.scalePivot"} {$name + "_lHeelGeo.rotatePivot"} ;
pointConstraint -mo {$name + "_lAnkleJ"} {$name + "_lHeelGeoG"};
orientConstraint -mo {$name + "_lAnkleJ"} {$name + "_lHeelGeoG"};

delete -ch {$name + "_lHeelGeo"};
delete {$name + "_lHeelFrClstr"} {$name + "_lHeelBckClstr"} {$name + "_lHeelOutClstr"} {$name + "_lHeelInClstr"} {$name + "_lHeelTopClstr"} ;

//LEFT TOES
polyCube -n {$name + "_lBallGeo"};
group -n {$name + "_lBallGeoG"} {$name + "_lBallGeo"};
move -r 0 -0.5 -0.5 {$name + "_lBallGeoG.scalePivot"} {$name + "_lBallGeoG.rotatePivot"} ;
move -r 0 -0.5 -0.5 {$name + "_lBallGeo.scalePivot"} {$name + "_lBallGeo.rotatePivot"} ;
rotate 0 90 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
$lBallInputs = `listHistory {$name + "_lBallGeo"}`;

parentConstraint {$name + "_lBallJ"} {$name + "_lBallGeoG"};
parent {$name + "_lBallGeoG"} {$name + "_scaleGeoG"};

$lToeLength = `getAttr {$name + "_lToeJ.tx"}`;
setAttr {$name + "_lBallGeoG.sx"} $lToeLength;
setAttr {$name + "_lBallGeoG.sy"} ($lAnkleLoc[1]/2);
setAttr {$name + "_lBallGeoG.sz"} ($lFootWidth * .8);

lattice -n {$name + "_lBallGeoLattice"} -divisions 2 2 2 -objectCentered true  -ldv 2 2 2 {$name + "_lBallGeo"};

select {$name + "_lBallGeoLatticeLattice.pt[0][0:1][0]"} ;
newCluster " -envelope 1";
rename {$name + "_lBallOutClstr"};
pointConstraint -skip z -skip y {$name + "_lFootOutTilt"} {$name + "_lBallOutClstr"};

select {$name + "_lBallGeoLatticeLattice.pt[0][0:1][1]"} ;
newCluster " -envelope 1";
rename {$name + "_lBallInClstr"};
pointConstraint -skip y {$name + "_lFootInTilt"} {$name + "_lBallInClstr"};

select  {$name + "_lBallGeoLatticeLattice.pt[1][1][0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_lBallTopClstr"};
spaceLocator -n {$name + "_lBallTopClstrLctr"};
pointConstraint -skip y {$name + "_lBallTopClstr"} {$name + "_lBallTopClstrLctr"};
delete {$name + "_lBallTopClstrLctr_pointConstraint1"};
parent {$name + "_lBallTopClstr"} {$name + "_lBallTopClstrLctr"};
scale 1 0.8 1 {$name + "_lBallTopClstrLctr"};

//////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////LEFT TOE GEOMETRY/////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

if (`objExists ($name + "_lToe10J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 10;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[10]"} {$name + "_lBallGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe10Clstr"};

$lToe08Loc = `xform -q -ws -t {$name + "_lToe08J1C"}`;
$lToe10Loc = `xform -q -ws -t {$name + "_lToe10J1C"}`;
$lToe10Offset[0] = ($lToe08Loc[0] - $lToe10Loc[0]) /-2;
$lToe10Offset[1] = ($lToe08Loc[1] - $lToe10Loc[1]) /-2;
$lToe10Offset[2] = ($lToe08Loc[2] - $lToe10Loc[2]) /-2;

pointConstraint -skip y  -offset $lToe10Offset[0] $lToe10Offset[1] $lToe10Offset[2] {$name + "_lToe10J1C"} {$name + "_lToe10Clstr"};
orientConstraint {$name + "_lToe10J1C"} {$name + "_lToe10Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05_6Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe05J1C"} {$name + "_lToe06J1C"} {$name + "_lToe05_6Clstr"} ;

select {$name + "_lBallGeoShape.vtx[6]"} {$name + "_lBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06_7Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe06J1C"} {$name + "_lToe07J1C"} {$name + "_lToe06_7Clstr"} ;

select {$name + "_lBallGeoShape.vtx[7]"} {$name + "_lBallGeoShape.vtx[18]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07_8Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe07J1C"} {$name + "_lToe08J1C"} {$name + "_lToe07_8Clstr"} ;

select {$name + "_lBallGeoShape.vtx[8]"} {$name + "_lBallGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08_9Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe08J1C"} {$name + "_lToe09J1C"} {$name + "_lToe08_9Clstr"} ;

select {$name + "_lBallGeoShape.vtx[9]"} {$name + "_lBallGeoShape.vtx[20]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe09_10Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe09J1C"} {$name + "_lToe10J1C"} {$name + "_lToe09_10Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05_6Clstr"} {$name + "_lToe06_7Clstr"} {$name + "_lToe07_8Clstr"} {$name + "_lToe08_9Clstr"} {$name + "_lToe09_10Clstr"} {$name + "_lToe10Clstr"};
}

else if (`objExists ($name + "_lToe09J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 9;


select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[9]"} {$name + "_lBallGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe09Clstr"};

$lToe08Loc = `xform -q -ws -t {$name + "_lToe08J1C"}`;
$lToe09Loc = `xform -q -ws -t {$name + "_lToe09J1C"}`;
$lToe09Offset[0] = ($lToe08Loc[0] - $lToe09Loc[0]) /-2;
$lToe09Offset[1] = ($lToe08Loc[1] - $lToe09Loc[1]) /-2;
$lToe09Offset[2] = ($lToe08Loc[2] - $lToe09Loc[2]) /-2;

pointConstraint -skip y -offset $lToe09Offset[0] $lToe09Offset[1] $lToe09Offset[2] {$name + "_lToe09J1C"} {$name + "_lToe09Clstr"};
orientConstraint {$name + "_lToe09J1C"} {$name + "_lToe09Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05_6Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe05J1C"} {$name + "_lToe06J1C"} {$name + "_lToe05_6Clstr"} ;

select {$name + "_lBallGeoShape.vtx[6]"} {$name + "_lBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06_7Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe06J1C"} {$name + "_lToe07J1C"} {$name + "_lToe06_7Clstr"} ;

select {$name + "_lBallGeoShape.vtx[7]"} {$name + "_lBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07_8Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe07J1C"} {$name + "_lToe08J1C"} {$name + "_lToe07_8Clstr"} ;

select {$name + "_lBallGeoShape.vtx[8]"} {$name + "_lBallGeoShape.vtx[18]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08_9Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe08J1C"} {$name + "_lToe09J1C"} {$name + "_lToe08_9Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05_6Clstr"} {$name + "_lToe06_7Clstr"} {$name + "_lToe07_8Clstr"} {$name + "_lToe08_9Clstr"} {$name + "_lToe09Clstr"};
}

else if (`objExists ($name + "_lToe08J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 8;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[8]"} {$name + "_lBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08Clstr"};

$lToe07Loc = `xform -q -ws -t {$name + "_lToe07J1C"}`;
$lToe08Loc = `xform -q -ws -t {$name + "_lToe08J1C"}`;
$lToe08Offset[0] = ($lToe07Loc[0] - $lToe08Loc[0]) /-2;
$lToe08Offset[1] = ($lToe07Loc[1] - $lToe08Loc[1]) /-2;
$lToe08Offset[2] = ($lToe07Loc[2] - $lToe08Loc[2]) /-2;

pointConstraint -skip y -offset $lToe08Offset[0] $lToe08Offset[1] $lToe08Offset[2] {$name + "_lToe08J1C"} {$name + "_lToe08Clstr"};
orientConstraint {$name + "_lToe08J1C"} {$name + "_lToe08Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05_6Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe05J1C"} {$name + "_lToe06J1C"} {$name + "_lToe05_6Clstr"} ;

select {$name + "_lBallGeoShape.vtx[6]"} {$name + "_lBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06_7Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe06J1C"} {$name + "_lToe07J1C"} {$name + "_lToe06_7Clstr"} ;

select {$name + "_lBallGeoShape.vtx[7]"} {$name + "_lBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07_8Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe07J1C"} {$name + "_lToe08J1C"} {$name + "_lToe07_8Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05_6Clstr"} {$name + "_lToe06_7Clstr"} {$name + "_lToe07_8Clstr"} {$name + "_lToe08Clstr"};
}

else if (`objExists ($name + "_lToe07J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 7;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[7]"} {$name + "_lBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07Clstr"};

$lToe06Loc = `xform -q -ws -t {$name + "_lToe06J1C"}`;
$lToe07Loc = `xform -q -ws -t {$name + "_lToe07J1C"}`;
$lToe07Offset[0] = ($lToe06Loc[0] - $lToe07Loc[0]) /-2;
$lToe07Offset[1] = ($lToe06Loc[1] - $lToe07Loc[1]) /-2;
$lToe07Offset[2] = ($lToe06Loc[2] - $lToe07Loc[2]) /-2;

pointConstraint -skip y -offset $lToe07Offset[0] $lToe07Offset[1] $lToe07Offset[2] {$name + "_lToe07J1C"} {$name + "_lToe07Clstr"};
orientConstraint {$name + "_lToe07J1C"} {$name + "_lToe07Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05_6Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe05J1C"} {$name + "_lToe06J1C"} {$name + "_lToe05_6Clstr"} ;

select {$name + "_lBallGeoShape.vtx[6]"} {$name + "_lBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06_7Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe06J1C"} {$name + "_lToe07J1C"} {$name + "_lToe06_7Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05_6Clstr"} {$name + "_lToe06_7Clstr"} {$name + "_lToe07Clstr"};
}

else if (`objExists ($name + "_lToe06J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 6;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[6]"} {$name + "_lBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06Clstr"};

$lToe05Loc = `xform -q -ws -t {$name + "_lToe05J1C"}`;
$lToe06Loc = `xform -q -ws -t {$name + "_lToe06J1C"}`;
$lToe06Offset[0] = ($lToe05Loc[0] - $lToe06Loc[0]) /-2;
$lToe06Offset[1] = ($lToe05Loc[1] - $lToe06Loc[1]) /-2;
$lToe06Offset[2] = ($lToe05Loc[2] - $lToe06Loc[2]) /-2;

pointConstraint -skip y -offset $lToe06Offset[0] $lToe06Offset[1] $lToe06Offset[2] {$name + "_lToe06J1C"} {$name + "_lToe06Clstr"};
orientConstraint {$name + "_lToe06J1C"} {$name + "_lToe06Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05_6Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe05J1C"} {$name + "_lToe06J1C"} {$name + "_lToe05_6Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05_6Clstr"} {$name + "_lToe06Clstr"};
}

else if (`objExists ($name + "_lToe05J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 5;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[5]"} {$name + "_lBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05Clstr"};

$lToe04Loc = `xform -q -ws -t {$name + "_lToe04J1C"}`;
$lToe05Loc = `xform -q -ws -t {$name + "_lToe05J1C"}`;
$lToe05Offset[0] = ($lToe04Loc[0] - $lToe05Loc[0]) /-2;
$lToe05Offset[1] = ($lToe04Loc[1] - $lToe05Loc[1]) /-2;
$lToe05Offset[2] = ($lToe04Loc[2] - $lToe05Loc[2]) /-2;

pointConstraint -skip y -offset $lToe05Offset[0] $lToe05Offset[1] $lToe05Offset[2] {$name + "_lToe05J1C"} {$name + "_lToe05Clstr"};
orientConstraint {$name + "_lToe05J1C"} {$name + "_lToe05Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04_5Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe04J1C"} {$name + "_lToe05J1C"} {$name + "_lToe04_5Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04_5Clstr"}
{$name + "_lToe05Clstr"};
}

else if (`objExists ($name + "_lToe04J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 4;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[4]"} {$name + "_lBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04Clstr"};

$lToe03Loc = `xform -q -ws -t {$name + "_lToe03J1C"}`;
$lToe04Loc = `xform -q -ws -t {$name + "_lToe04J1C"}`;
$lToe04Offset[0] = ($lToe03Loc[0] - $lToe04Loc[0]) /-2;
$lToe04Offset[1] = ($lToe03Loc[1] - $lToe04Loc[1]) /-2;
$lToe04Offset[2] = ($lToe03Loc[2] - $lToe04Loc[2]) /-2;

pointConstraint -skip y -offset $lToe04Offset[0] $lToe04Offset[1] $lToe04Offset[2] {$name + "_lToe04J1C"} {$name + "_lToe04Clstr"};
orientConstraint {$name + "_lToe04J1C"} {$name + "_lToe04Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03_4Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe03J1C"} {$name + "_lToe04J1C"} {$name + "_lToe03_4Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03_4Clstr"} {$name + "_lToe04Clstr"};
}

else if (`objExists ($name + "_lToe03J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 3;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[4]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[3]"} {$name + "_lBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03Clstr"};

$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe03Loc = `xform -q -ws -t {$name + "_lToe03J1C"}`;
$lToe03Offset[0] = ($lToe02Loc[0] - $lToe03Loc[0]) /-2;
$lToe03Offset[1] = ($lToe02Loc[1] - $lToe03Loc[1]) /-2;
$lToe03Offset[2] = ($lToe02Loc[2] - $lToe03Loc[2]) /-2;

pointConstraint -skip y -offset $lToe03Offset[0] $lToe03Offset[1] $lToe03Offset[2] {$name + "_lToe03J1C"} {$name + "_lToe03Clstr"};
orientConstraint {$name + "_lToe03J1C"} {$name + "_lToe03Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02_3Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe02J1C"} {$name + "_lToe03J1C"} {$name + "_lToe02_3Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02_3Clstr"} {$name + "_lToe03Clstr"} ;
}

else if (`objExists ($name + "_lToe02J1")`)
{
setAttr {$lBallInputs[2] + ".subdivisionsWidth"} 2;

select {$name + "_lBallGeoShape.vtx[0]"} {$name + "_lBallGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01Clstr"};

$lToe01Loc = `xform -q -ws -t {$name + "_lToe01J1C"}`;
$lToe02Loc = `xform -q -ws -t {$name + "_lToe02J1C"}`;
$lToe01Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /2;
$lToe01Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /2;
$lToe01Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /2;

pointConstraint -skip y -offset $lToe01Offset[0] $lToe01Offset[1] $lToe01Offset[2] {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};
orientConstraint {$name + "_lToe01J1C"} {$name + "_lToe01Clstr"};

select {$name + "_lBallGeoShape.vtx[2]"} {$name + "_lBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02Clstr"};

$lToe02Offset[0] = ($lToe01Loc[0] - $lToe02Loc[0]) /-2;
$lToe02Offset[1] = ($lToe01Loc[1] - $lToe02Loc[1]) /-2;
$lToe02Offset[2] = ($lToe01Loc[2] - $lToe02Loc[2]) /-2;

pointConstraint -skip y -offset $lToe02Offset[0] $lToe02Offset[1] $lToe02Offset[2] {$name + "_lToe02J1C"} {$name + "_lToe02Clstr"};
orientConstraint {$name + "_lToe02J1C"} {$name + "_lToe02Clstr"};

select {$name + "_lBallGeoShape.vtx[1]"} {$name + "_lBallGeoShape.vtx[4]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01_2Clstr"};
parentConstraint -skipTranslate y {$name + "_lToe01J1C"} {$name + "_lToe02J1C"} {$name + "_lToe01_2Clstr"} ;

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lToe01Clstr"} {$name + "_lToe01_2Clstr"} {$name + "_lToe02Clstr"} ;
}

delete -ch {$name + "_lBallGeo"};
delete {$name + "_lFootWidthAim"} {$name + "_lBallOutClstr"} {$name + "_lBallInClstr"} {$name + "_lBallTopClstrLctr"} ;

/////////////////INDIVIDUAL LEFT TOES/////////////////////
if (`objExists ($name + "_lToe01J1")`)
{
polyCube -n {$name + "_lToe01J1Geo"};
group -n {$name + "_lToe01J1GeoG"} {$name + "_lToe01J1Geo"};
move -r -0.5 0 0 {$name + "_lToe01J1GeoG.scalePivot"} {$name + "_lToe01J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe01J1Geo.scalePivot"} {$name + "_lToe01J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe01J1C"} {$name + "_lToe01J1GeoG"};
$lToe01_Loc = `getAttr {$name + "_lToe01J1.tz"}`;
$lToe02_Loc = `getAttr {$name + "_lToe02J1.tz"}`;
setAttr {$name + "_lToe01J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe01J1GeoG.sz"} (($lToe01_Loc - $lToe02_Loc)*.9);
select {$name + "_lToe01J1GeoShape.vtx[1]"} {$name + "_lToe01J1GeoShape.vtx[3]"} {$name + "_lToe01J1GeoShape.vtx[5]"} {$name + "_lToe01J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01J1_Clstr"};
pointConstraint {$name + "_lToe01J2"} {$name + "_lToe01J1_Clstr"};

polyCube -n {$name + "_lToe01J2Geo"};
group -n {$name + "_lToe01J2GeoG"} {$name + "_lToe01J2Geo"};
move -r -0.5 0 0 {$name + "_lToe01J2GeoG.scalePivot"} {$name + "_lToe01J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe01J2Geo.scalePivot"} {$name + "_lToe01J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe01J2C"} {$name + "_lToe01J2GeoG"};
setAttr {$name + "_lToe01J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe01J2GeoG.sz"} (($lToe01_Loc - $lToe02_Loc)*.9);
select {$name + "_lToe01J2GeoShape.vtx[1]"} {$name + "_lToe01J2GeoShape.vtx[3]"} {$name + "_lToe01J2GeoShape.vtx[5]"} {$name + "_lToe01J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe01J2_Clstr"};
pointConstraint {$name + "_lToe01JTip"} {$name + "_lToe01J2_Clstr"};

delete -ch {$name + "_lToe01J1Geo"} {$name + "_lToe01J2Geo"};
parent {$name + "_lToe01J1GeoG"} {$name + "_lToe01J2GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe01J1_Clstr"} {$name + "_lToe01J2_Clstr"};
}


if (`objExists ($name + "_lToe02J1")`)
{
polyCube -n {$name + "_lToe02J1Geo"};
group -n {$name + "_lToe02J1GeoG"} {$name + "_lToe02J1Geo"};
move -r -0.5 0 0 {$name + "_lToe02J1GeoG.scalePivot"} {$name + "_lToe02J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe02J1Geo.scalePivot"} {$name + "_lToe02J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe02J1C"} {$name + "_lToe02J1GeoG"};
$lToe01_Loc = `getAttr {$name + "_lToe01J1.tz"}`;
$lToe02_Loc = `getAttr {$name + "_lToe02J1.tz"}`;
setAttr {$name + "_lToe02J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe02J1GeoG.sz"} (($lToe01_Loc - $lToe02_Loc)*.9);
select {$name + "_lToe02J1GeoShape.vtx[1]"} {$name + "_lToe02J1GeoShape.vtx[3]"} {$name + "_lToe02J1GeoShape.vtx[5]"} {$name + "_lToe02J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02J1_Clstr"};
pointConstraint {$name + "_lToe02J2"} {$name + "_lToe02J1_Clstr"};

polyCube -n {$name + "_lToe02J2Geo"};
group -n {$name + "_lToe02J2GeoG"} {$name + "_lToe02J2Geo"};
move -r -0.5 0 0 {$name + "_lToe02J2GeoG.scalePivot"} {$name + "_lToe02J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe02J2Geo.scalePivot"} {$name + "_lToe02J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe02J2C"} {$name + "_lToe02J2GeoG"};
setAttr {$name + "_lToe02J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe02J2GeoG.sz"} (($lToe01_Loc - $lToe02_Loc)*.9);
select {$name + "_lToe02J2GeoShape.vtx[1]"} {$name + "_lToe02J2GeoShape.vtx[3]"} {$name + "_lToe02J2GeoShape.vtx[5]"} {$name + "_lToe02J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02J2_Clstr"};
pointConstraint {$name + "_lToe02J3"} {$name + "_lToe02J2_Clstr"};

polyCube -n {$name + "_lToe02J3Geo"};
group -n {$name + "_lToe02J3GeoG"} {$name + "_lToe02J3Geo"};
move -r -0.5 0 0 {$name + "_lToe02J3GeoG.scalePivot"} {$name + "_lToe02J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe02J3Geo.scalePivot"} {$name + "_lToe02J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe02J3C"} {$name + "_lToe02J3GeoG"};
setAttr {$name + "_lToe02J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe02J3GeoG.sz"} (($lToe01_Loc - $lToe02_Loc)*.9);
select {$name + "_lToe02J3GeoShape.vtx[1]"} {$name + "_lToe02J3GeoShape.vtx[3]"} {$name + "_lToe02J3GeoShape.vtx[5]"} {$name + "_lToe02J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe02J3_Clstr"};
pointConstraint {$name + "_lToe02JTip"} {$name + "_lToe02J3_Clstr"};

delete -ch {$name + "_lToe02J1Geo"} {$name + "_lToe02J2Geo"} {$name + "_lToe02J3Geo"};
parent {$name + "_lToe02J1GeoG"} {$name + "_lToe02J2GeoG"} {$name + "_lToe02J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe02J1_Clstr"} {$name + "_lToe02J2_Clstr"} {$name + "_lToe02J3_Clstr"};
}

if (`objExists ($name + "_lToe03J1")`)
{
polyCube -n {$name + "_lToe03J1Geo"};
group -n {$name + "_lToe03J1GeoG"} {$name + "_lToe03J1Geo"};
move -r -0.5 0 0 {$name + "_lToe03J1GeoG.scalePivot"} {$name + "_lToe03J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe03J1Geo.scalePivot"} {$name + "_lToe03J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe03J1C"} {$name + "_lToe03J1GeoG"};
$lToe01_Loc = `getAttr {$name + "_lToe01J1.tz"}`;
$lToe02_Loc = `getAttr {$name + "_lToe02J1.tz"}`;
$lToe03_Loc = `getAttr {$name + "_lToe03J1.tz"}`;
setAttr {$name + "_lToe03J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe03J1GeoG.sz"} (($lToe02_Loc - $lToe03_Loc)*.9);
setAttr {$name + "_lToe02J1GeoG.sz"} (($lToe01_Loc - $lToe03_Loc)*.45);
setAttr {$name + "_lToe02J2GeoG.sz"} (($lToe01_Loc - $lToe03_Loc)*.45);
setAttr {$name + "_lToe02J3GeoG.sz"} (($lToe01_Loc - $lToe03_Loc)*.45);


select {$name + "_lToe03J1GeoShape.vtx[1]"} {$name + "_lToe03J1GeoShape.vtx[3]"} {$name + "_lToe03J1GeoShape.vtx[5]"} {$name + "_lToe03J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03J1_Clstr"};
pointConstraint {$name + "_lToe03J2"} {$name + "_lToe03J1_Clstr"};

polyCube -n {$name + "_lToe03J2Geo"};
group -n {$name + "_lToe03J2GeoG"} {$name + "_lToe03J2Geo"};
move -r -0.5 0 0 {$name + "_lToe03J2GeoG.scalePivot"} {$name + "_lToe03J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe03J2Geo.scalePivot"} {$name + "_lToe03J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe03J2C"} {$name + "_lToe03J2GeoG"};
setAttr {$name + "_lToe03J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe03J2GeoG.sz"} (($lToe02_Loc - $lToe03_Loc)*.9);
select {$name + "_lToe03J2GeoShape.vtx[1]"} {$name + "_lToe03J2GeoShape.vtx[3]"} {$name + "_lToe03J2GeoShape.vtx[5]"} {$name + "_lToe03J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03J2_Clstr"};
pointConstraint {$name + "_lToe03J3"} {$name + "_lToe03J2_Clstr"};

polyCube -n {$name + "_lToe03J3Geo"};
group -n {$name + "_lToe03J3GeoG"} {$name + "_lToe03J3Geo"};
move -r -0.5 0 0 {$name + "_lToe03J3GeoG.scalePivot"} {$name + "_lToe03J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe03J3Geo.scalePivot"} {$name + "_lToe03J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe03J3C"} {$name + "_lToe03J3GeoG"};
setAttr {$name + "_lToe03J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe03J3GeoG.sz"} (($lToe02_Loc - $lToe03_Loc)*.9);
select {$name + "_lToe03J3GeoShape.vtx[1]"} {$name + "_lToe03J3GeoShape.vtx[3]"} {$name + "_lToe03J3GeoShape.vtx[5]"} {$name + "_lToe03J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe03J3_Clstr"};
pointConstraint {$name + "_lToe03JTip"} {$name + "_lToe03J3_Clstr"};

delete -ch {$name + "_lToe03J1Geo"} {$name + "_lToe03J2Geo"} {$name + "_lToe03J3Geo"};
parent {$name + "_lToe03J1GeoG"} {$name + "_lToe03J2GeoG"} {$name + "_lToe03J3GeoG"} {$name + "_scaleGeoG"};

delete {$name + "_lToe03J1_Clstr"} {$name + "_lToe03J2_Clstr"} {$name + "_lToe03J3_Clstr"};}

if (`objExists ($name + "_lToe04J1")`)
{
polyCube -n {$name + "_lToe04J1Geo"};
group -n {$name + "_lToe04J1GeoG"} {$name + "_lToe04J1Geo"};
move -r -0.5 0 0 {$name + "_lToe04J1GeoG.scalePivot"} {$name + "_lToe04J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe04J1Geo.scalePivot"} {$name + "_lToe04J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe04J1C"} {$name + "_lToe04J1GeoG"};
$lToe02_Loc = `getAttr {$name + "_lToe02J1.tz"}`;
$lToe03_Loc = `getAttr {$name + "_lToe03J1.tz"}`;
$lToe04_Loc = `getAttr {$name + "_lToe04J1.tz"}`;
setAttr {$name + "_lToe04J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe04J1GeoG.sz"} (($lToe03_Loc - $lToe04_Loc)*.9);
setAttr {$name + "_lToe03J1GeoG.sz"} (($lToe02_Loc - $lToe04_Loc)*.45);
setAttr {$name + "_lToe03J2GeoG.sz"} (($lToe02_Loc - $lToe04_Loc)*.45);
setAttr {$name + "_lToe03J3GeoG.sz"} (($lToe02_Loc - $lToe04_Loc)*.45);

select {$name + "_lToe04J1GeoShape.vtx[1]"} {$name + "_lToe04J1GeoShape.vtx[3]"} {$name + "_lToe04J1GeoShape.vtx[5]"} {$name + "_lToe04J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04J1_Clstr"};
pointConstraint {$name + "_lToe04J2"} {$name + "_lToe04J1_Clstr"};

polyCube -n {$name + "_lToe04J2Geo"};
group -n {$name + "_lToe04J2GeoG"} {$name + "_lToe04J2Geo"};
move -r -0.5 0 0 {$name + "_lToe04J2GeoG.scalePivot"} {$name + "_lToe04J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe04J2Geo.scalePivot"} {$name + "_lToe04J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe04J2C"} {$name + "_lToe04J2GeoG"};
setAttr {$name + "_lToe04J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe04J2GeoG.sz"} (($lToe03_Loc - $lToe04_Loc)*.9);
select {$name + "_lToe04J2GeoShape.vtx[1]"} {$name + "_lToe04J2GeoShape.vtx[3]"} {$name + "_lToe04J2GeoShape.vtx[5]"} {$name + "_lToe04J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04J2_Clstr"};
pointConstraint {$name + "_lToe04J3"} {$name + "_lToe04J2_Clstr"};

polyCube -n {$name + "_lToe04J3Geo"};
group -n {$name + "_lToe04J3GeoG"} {$name + "_lToe04J3Geo"};
move -r -0.5 0 0 {$name + "_lToe04J3GeoG.scalePivot"} {$name + "_lToe04J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe04J3Geo.scalePivot"} {$name + "_lToe04J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe04J3C"} {$name + "_lToe04J3GeoG"};
setAttr {$name + "_lToe04J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe04J3GeoG.sz"} (($lToe03_Loc - $lToe04_Loc)*.9);
select {$name + "_lToe04J3GeoShape.vtx[1]"} {$name + "_lToe04J3GeoShape.vtx[3]"} {$name + "_lToe04J3GeoShape.vtx[5]"} {$name + "_lToe04J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe04J3_Clstr"};
pointConstraint {$name + "_lToe04JTip"} {$name + "_lToe04J3_Clstr"};

delete -ch {$name + "_lToe04J1Geo"} {$name + "_lToe04J2Geo"} {$name + "_lToe04J3Geo"};
parent {$name + "_lToe04J1GeoG"} {$name + "_lToe04J2GeoG"} {$name + "_lToe04J3GeoG"} {$name + "_scaleGeoG"};

delete {$name + "_lToe04J1_Clstr"} {$name + "_lToe04J2_Clstr"} {$name + "_lToe04J3_Clstr"};
}

if (`objExists ($name + "_lToe05J1")`)
{
polyCube -n {$name + "_lToe05J1Geo"};
group -n {$name + "_lToe05J1GeoG"} {$name + "_lToe05J1Geo"};
move -r -0.5 0 0 {$name + "_lToe05J1GeoG.scalePivot"} {$name + "_lToe05J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe05J1Geo.scalePivot"} {$name + "_lToe05J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe05J1C"} {$name + "_lToe05J1GeoG"};
$lToe03_Loc = `getAttr {$name + "_lToe03J1.tz"}`;
$lToe04_Loc = `getAttr {$name + "_lToe04J1.tz"}`;
$lToe05_Loc = `getAttr {$name + "_lToe05J1.tz"}`;
setAttr {$name + "_lToe05J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe05J1GeoG.sz"} (($lToe04_Loc - $lToe05_Loc)*.9);
setAttr {$name + "_lToe04J1GeoG.sz"} (($lToe03_Loc - $lToe05_Loc)*.45);
setAttr {$name + "_lToe04J2GeoG.sz"} (($lToe03_Loc - $lToe05_Loc)*.45);
setAttr {$name + "_lToe04J3GeoG.sz"} (($lToe03_Loc - $lToe05_Loc)*.45);

select {$name + "_lToe05J1GeoShape.vtx[1]"} {$name + "_lToe05J1GeoShape.vtx[3]"} {$name + "_lToe05J1GeoShape.vtx[5]"} {$name + "_lToe05J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05J1_Clstr"};
pointConstraint {$name + "_lToe05J2"} {$name + "_lToe05J1_Clstr"};

polyCube -n {$name + "_lToe05J2Geo"};
group -n {$name + "_lToe05J2GeoG"} {$name + "_lToe05J2Geo"};
move -r -0.5 0 0 {$name + "_lToe05J2GeoG.scalePivot"} {$name + "_lToe05J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe05J2Geo.scalePivot"} {$name + "_lToe05J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe05J2C"} {$name + "_lToe05J2GeoG"};
setAttr {$name + "_lToe05J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe05J2GeoG.sz"} (($lToe04_Loc - $lToe05_Loc)*.9);
select {$name + "_lToe05J2GeoShape.vtx[1]"} {$name + "_lToe05J2GeoShape.vtx[3]"} {$name + "_lToe05J2GeoShape.vtx[5]"} {$name + "_lToe05J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05J2_Clstr"};
pointConstraint {$name + "_lToe05J3"} {$name + "_lToe05J2_Clstr"};

polyCube -n {$name + "_lToe05J3Geo"};
group -n {$name + "_lToe05J3GeoG"} {$name + "_lToe05J3Geo"};
move -r -0.5 0 0 {$name + "_lToe05J3GeoG.scalePivot"} {$name + "_lToe05J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe05J3Geo.scalePivot"} {$name + "_lToe05J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe05J3C"} {$name + "_lToe05J3GeoG"};
setAttr {$name + "_lToe05J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe05J3GeoG.sz"} (($lToe04_Loc - $lToe05_Loc)*.9);
select {$name + "_lToe05J3GeoShape.vtx[1]"} {$name + "_lToe05J3GeoShape.vtx[3]"} {$name + "_lToe05J3GeoShape.vtx[5]"} {$name + "_lToe05J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe05J3_Clstr"};
pointConstraint {$name + "_lToe05JTip"} {$name + "_lToe05J3_Clstr"};

delete -ch {$name + "_lToe05J1Geo"} {$name + "_lToe05J2Geo"} {$name + "_lToe05J3Geo"};
parent {$name + "_lToe05J1GeoG"} {$name + "_lToe05J2GeoG"} {$name + "_lToe05J3GeoG"} {$name + "_scaleGeoG"};

delete {$name + "_lToe05J1_Clstr"} {$name + "_lToe05J2_Clstr"} {$name + "_lToe05J3_Clstr"};
}

if (`objExists ($name + "_lToe06J1")`)
{
polyCube -n {$name + "_lToe06J1Geo"};
group -n {$name + "_lToe06J1GeoG"} {$name + "_lToe06J1Geo"};
move -r -0.5 0 0 {$name + "_lToe06J1GeoG.scalePivot"} {$name + "_lToe06J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe06J1Geo.scalePivot"} {$name + "_lToe06J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe06J1C"} {$name + "_lToe06J1GeoG"};
$lToe04_Loc = `getAttr {$name + "_lToe04J1.tz"}`;
$lToe05_Loc = `getAttr {$name + "_lToe05J1.tz"}`;
$lToe06_Loc = `getAttr {$name + "_lToe06J1.tz"}`;
setAttr {$name + "_lToe06J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe06J1GeoG.sz"} (($lToe05_Loc - $lToe06_Loc)*.9);
setAttr {$name + "_lToe05J1GeoG.sz"} (($lToe04_Loc - $lToe06_Loc)*.45);
setAttr {$name + "_lToe05J2GeoG.sz"} (($lToe04_Loc - $lToe06_Loc)*.45);
setAttr {$name + "_lToe05J3GeoG.sz"} (($lToe04_Loc - $lToe06_Loc)*.45);


select {$name + "_lToe06J1GeoShape.vtx[1]"} {$name + "_lToe06J1GeoShape.vtx[3]"} {$name + "_lToe06J1GeoShape.vtx[5]"} {$name + "_lToe06J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06J1_Clstr"};
pointConstraint {$name + "_lToe06J2"} {$name + "_lToe06J1_Clstr"};

polyCube -n {$name + "_lToe06J2Geo"};
group -n {$name + "_lToe06J2GeoG"} {$name + "_lToe06J2Geo"};
move -r -0.5 0 0 {$name + "_lToe06J2GeoG.scalePivot"} {$name + "_lToe06J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe06J2Geo.scalePivot"} {$name + "_lToe06J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe06J2C"} {$name + "_lToe06J2GeoG"};
setAttr {$name + "_lToe06J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe06J2GeoG.sz"} (($lToe05_Loc - $lToe06_Loc)*.9);
select {$name + "_lToe06J2GeoShape.vtx[1]"} {$name + "_lToe06J2GeoShape.vtx[3]"} {$name + "_lToe06J2GeoShape.vtx[5]"} {$name + "_lToe06J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06J2_Clstr"};
pointConstraint {$name + "_lToe06J3"} {$name + "_lToe06J2_Clstr"};

polyCube -n {$name + "_lToe06J3Geo"};
group -n {$name + "_lToe06J3GeoG"} {$name + "_lToe06J3Geo"};
move -r -0.5 0 0 {$name + "_lToe06J3GeoG.scalePivot"} {$name + "_lToe06J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe06J3Geo.scalePivot"} {$name + "_lToe06J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe06J3C"} {$name + "_lToe06J3GeoG"};
setAttr {$name + "_lToe06J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe06J3GeoG.sz"} (($lToe05_Loc - $lToe06_Loc)*.9);
select {$name + "_lToe06J3GeoShape.vtx[1]"} {$name + "_lToe06J3GeoShape.vtx[3]"} {$name + "_lToe06J3GeoShape.vtx[5]"} {$name + "_lToe06J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe06J3_Clstr"};
pointConstraint {$name + "_lToe06JTip"} {$name + "_lToe06J3_Clstr"};

delete -ch {$name + "_lToe06J1Geo"} {$name + "_lToe06J2Geo"} {$name + "_lToe06J3Geo"};
parent {$name + "_lToe06J1GeoG"} {$name + "_lToe06J2GeoG"} {$name + "_lToe06J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe06J1_Clstr"} {$name + "_lToe06J2_Clstr"} {$name + "_lToe06J3_Clstr"};
}

if (`objExists ($name + "_lToe07J1")`)
{
polyCube -n {$name + "_lToe07J1Geo"};
group -n {$name + "_lToe07J1GeoG"} {$name + "_lToe07J1Geo"};
move -r -0.5 0 0 {$name + "_lToe07J1GeoG.scalePivot"} {$name + "_lToe07J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe07J1Geo.scalePivot"} {$name + "_lToe07J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe07J1C"} {$name + "_lToe07J1GeoG"};
$lToe04_Loc = `getAttr {$name + "_lToe04J1.tz"}`;
$lToe05_Loc = `getAttr {$name + "_lToe05J1.tz"}`;
$lToe06_Loc = `getAttr {$name + "_lToe06J1.tz"}`;
$lToe07_Loc = `getAttr {$name + "_lToe07J1.tz"}`;
setAttr {$name + "_lToe07J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe07J1GeoG.sz"} (($lToe06_Loc - $lToe07_Loc)*.9);
setAttr {$name + "_lToe06J1GeoG.sz"} (($lToe05_Loc - $lToe07_Loc)*.45);
setAttr {$name + "_lToe06J2GeoG.sz"} (($lToe05_Loc - $lToe07_Loc)*.45);
setAttr {$name + "_lToe06J3GeoG.sz"} (($lToe05_Loc - $lToe07_Loc)*.45);

select {$name + "_lToe07J1GeoShape.vtx[1]"} {$name + "_lToe07J1GeoShape.vtx[3]"} {$name + "_lToe07J1GeoShape.vtx[5]"} {$name + "_lToe07J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07J1_Clstr"};
pointConstraint {$name + "_lToe07J2"} {$name + "_lToe07J1_Clstr"};

polyCube -n {$name + "_lToe07J2Geo"};
group -n {$name + "_lToe07J2GeoG"} {$name + "_lToe07J2Geo"};
move -r -0.5 0 0 {$name + "_lToe07J2GeoG.scalePivot"} {$name + "_lToe07J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe07J2Geo.scalePivot"} {$name + "_lToe07J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe07J2C"} {$name + "_lToe07J2GeoG"};
setAttr {$name + "_lToe07J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe07J2GeoG.sz"} (($lToe06_Loc - $lToe07_Loc)*.9);
select {$name + "_lToe07J2GeoShape.vtx[1]"} {$name + "_lToe07J2GeoShape.vtx[3]"} {$name + "_lToe07J2GeoShape.vtx[5]"} {$name + "_lToe07J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07J2_Clstr"};
pointConstraint {$name + "_lToe07J3"} {$name + "_lToe07J2_Clstr"};

polyCube -n {$name + "_lToe07J3Geo"};
group -n {$name + "_lToe07J3GeoG"} {$name + "_lToe07J3Geo"};
move -r -0.5 0 0 {$name + "_lToe07J3GeoG.scalePivot"} {$name + "_lToe07J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe07J3Geo.scalePivot"} {$name + "_lToe07J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe07J3C"} {$name + "_lToe07J3GeoG"};
setAttr {$name + "_lToe07J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe07J3GeoG.sz"} (($lToe06_Loc - $lToe07_Loc)*.9);
select {$name + "_lToe07J3GeoShape.vtx[1]"} {$name + "_lToe07J3GeoShape.vtx[3]"} {$name + "_lToe07J3GeoShape.vtx[5]"} {$name + "_lToe07J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe07J3_Clstr"};
pointConstraint {$name + "_lToe07JTip"} {$name + "_lToe07J3_Clstr"};

delete -ch {$name + "_lToe07J1Geo"} {$name + "_lToe07J2Geo"} {$name + "_lToe07J3Geo"};
parent {$name + "_lToe07J1GeoG"} {$name + "_lToe07J2GeoG"} {$name + "_lToe07J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe07J1_Clstr"} {$name + "_lToe07J2_Clstr"} {$name + "_lToe07J3_Clstr"};
}

if (`objExists ($name + "_lToe08J1")`)
{
polyCube -n {$name + "_lToe08J1Geo"};
group -n {$name + "_lToe08J1GeoG"} {$name + "_lToe08J1Geo"};
move -r -0.5 0 0 {$name + "_lToe08J1GeoG.scalePivot"} {$name + "_lToe08J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe08J1Geo.scalePivot"} {$name + "_lToe08J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe08J1C"} {$name + "_lToe08J1GeoG"};
$lToe05_Loc = `getAttr {$name + "_lToe05J1.tz"}`;
$lToe06_Loc = `getAttr {$name + "_lToe06J1.tz"}`;
$lToe07_Loc = `getAttr {$name + "_lToe07J1.tz"}`;
$lToe08_Loc = `getAttr {$name + "_lToe08J1.tz"}`;
setAttr {$name + "_lToe08J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe08J1GeoG.sz"} (($lToe07_Loc - $lToe08_Loc)*.9);
setAttr {$name + "_lToe07J1GeoG.sz"} (($lToe06_Loc - $lToe08_Loc)*.45);
setAttr {$name + "_lToe07J2GeoG.sz"} (($lToe06_Loc - $lToe08_Loc)*.45);
setAttr {$name + "_lToe07J3GeoG.sz"} (($lToe06_Loc - $lToe08_Loc)*.45);

select {$name + "_lToe08J1GeoShape.vtx[1]"} {$name + "_lToe08J1GeoShape.vtx[3]"} {$name + "_lToe08J1GeoShape.vtx[5]"} {$name + "_lToe08J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08J1_Clstr"};
pointConstraint {$name + "_lToe08J2"} {$name + "_lToe08J1_Clstr"};

polyCube -n {$name + "_lToe08J2Geo"};
group -n {$name + "_lToe08J2GeoG"} {$name + "_lToe08J2Geo"};
move -r -0.5 0 0 {$name + "_lToe08J2GeoG.scalePivot"} {$name + "_lToe08J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe08J2Geo.scalePivot"} {$name + "_lToe08J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe08J2C"} {$name + "_lToe08J2GeoG"};
setAttr {$name + "_lToe08J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe08J2GeoG.sz"} (($lToe07_Loc - $lToe08_Loc)*.9);
select {$name + "_lToe08J2GeoShape.vtx[1]"} {$name + "_lToe08J2GeoShape.vtx[3]"} {$name + "_lToe08J2GeoShape.vtx[5]"} {$name + "_lToe08J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08J2_Clstr"};
pointConstraint {$name + "_lToe08J3"} {$name + "_lToe08J2_Clstr"};

polyCube -n {$name + "_lToe08J3Geo"};
group -n {$name + "_lToe08J3GeoG"} {$name + "_lToe08J3Geo"};
move -r -0.5 0 0 {$name + "_lToe08J3GeoG.scalePivot"} {$name + "_lToe08J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe08J3Geo.scalePivot"} {$name + "_lToe08J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe08J3C"} {$name + "_lToe08J3GeoG"};
setAttr {$name + "_lToe08J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe08J3GeoG.sz"} (($lToe07_Loc - $lToe08_Loc)*.9);
select {$name + "_lToe08J3GeoShape.vtx[1]"} {$name + "_lToe08J3GeoShape.vtx[3]"} {$name + "_lToe08J3GeoShape.vtx[5]"} {$name + "_lToe08J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe08J3_Clstr"};
pointConstraint {$name + "_lToe08JTip"} {$name + "_lToe08J3_Clstr"};

delete -ch {$name + "_lToe08J1Geo"} {$name + "_lToe08J2Geo"} {$name + "_lToe08J3Geo"};
parent {$name + "_lToe08J1GeoG"} {$name + "_lToe08J2GeoG"} {$name + "_lToe08J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe08J1_Clstr"} {$name + "_lToe08J2_Clstr"} {$name + "_lToe08J3_Clstr"};
}

if (`objExists ($name + "_lToe09J1")`)
{
polyCube -n {$name + "_lToe09J1Geo"};
group -n {$name + "_lToe09J1GeoG"} {$name + "_lToe09J1Geo"};
move -r -0.5 0 0 {$name + "_lToe09J1GeoG.scalePivot"} {$name + "_lToe09J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe09J1Geo.scalePivot"} {$name + "_lToe09J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe09J1C"} {$name + "_lToe09J1GeoG"};
$lToe06_Loc = `getAttr {$name + "_lToe06J1.tz"}`;
$lToe07_Loc = `getAttr {$name + "_lToe07J1.tz"}`;
$lToe08_Loc = `getAttr {$name + "_lToe08J1.tz"}`;
$lToe09_Loc = `getAttr {$name + "_lToe09J1.tz"}`;
setAttr {$name + "_lToe09J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe09J1GeoG.sz"} (($lToe08_Loc - $lToe09_Loc)*.9);
setAttr {$name + "_lToe08J1GeoG.sz"} (($lToe07_Loc - $lToe09_Loc)*.45);
setAttr {$name + "_lToe08J2GeoG.sz"} (($lToe07_Loc - $lToe09_Loc)*.45);
setAttr {$name + "_lToe08J3GeoG.sz"} (($lToe07_Loc - $lToe09_Loc)*.45);

select {$name + "_lToe09J1GeoShape.vtx[1]"} {$name + "_lToe09J1GeoShape.vtx[3]"} {$name + "_lToe09J1GeoShape.vtx[5]"} {$name + "_lToe09J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe09J1_Clstr"};
pointConstraint {$name + "_lToe09J2"} {$name + "_lToe09J1_Clstr"};

polyCube -n {$name + "_lToe09J2Geo"};
group -n {$name + "_lToe09J2GeoG"} {$name + "_lToe09J2Geo"};
move -r -0.5 0 0 {$name + "_lToe09J2GeoG.scalePivot"} {$name + "_lToe09J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe09J2Geo.scalePivot"} {$name + "_lToe09J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe09J2C"} {$name + "_lToe09J2GeoG"};
setAttr {$name + "_lToe09J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe09J2GeoG.sz"} (($lToe08_Loc - $lToe09_Loc)*.9);
select {$name + "_lToe09J2GeoShape.vtx[1]"} {$name + "_lToe09J2GeoShape.vtx[3]"} {$name + "_lToe09J2GeoShape.vtx[5]"} {$name + "_lToe09J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe09J2_Clstr"};
pointConstraint {$name + "_lToe09J3"} {$name + "_lToe09J2_Clstr"};

polyCube -n {$name + "_lToe09J3Geo"};
group -n {$name + "_lToe09J3GeoG"} {$name + "_lToe09J3Geo"};
move -r -0.5 0 0 {$name + "_lToe09J3GeoG.scalePivot"} {$name + "_lToe09J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe09J3Geo.scalePivot"} {$name + "_lToe09J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe09J3C"} {$name + "_lToe09J3GeoG"};
setAttr {$name + "_lToe09J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe09J3GeoG.sz"} (($lToe08_Loc - $lToe09_Loc)*.9);
select {$name + "_lToe09J3GeoShape.vtx[1]"} {$name + "_lToe09J3GeoShape.vtx[3]"} {$name + "_lToe09J3GeoShape.vtx[5]"} {$name + "_lToe09J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe09J3_Clstr"};
pointConstraint {$name + "_lToe09JTip"} {$name + "_lToe09J3_Clstr"};

delete -ch {$name + "_lToe09J1Geo"} {$name + "_lToe09J2Geo"} {$name + "_lToe09J3Geo"};
parent {$name + "_lToe09J1GeoG"} {$name + "_lToe09J2GeoG"} {$name + "_lToe09J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe09J1_Clstr"} {$name + "_lToe09J2_Clstr"} {$name + "_lToe09J3_Clstr"};
}

if (`objExists ($name + "_lToe10J1")`)
{
polyCube -n {$name + "_lToe10J1Geo"};
group -n {$name + "_lToe10J1GeoG"} {$name + "_lToe10J1Geo"};
move -r -0.5 0 0 {$name + "_lToe10J1GeoG.scalePivot"} {$name + "_lToe10J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe10J1Geo.scalePivot"} {$name + "_lToe10J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe10J1C"} {$name + "_lToe10J1GeoG"};
$lToe07_Loc = `getAttr {$name + "_lToe07J1.tz"}`;
$lToe08_Loc = `getAttr {$name + "_lToe08J1.tz"}`;
$lToe09_Loc = `getAttr {$name + "_lToe09J1.tz"}`;
$lToe10_Loc = `getAttr {$name + "_lToe10J1.tz"}`;
setAttr {$name + "_lToe10J1GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe10J1GeoG.sz"} (($lToe09_Loc - $lToe10_Loc)*.9);
setAttr {$name + "_lToe09J1GeoG.sz"} (($lToe08_Loc - $lToe10_Loc)*.45);
setAttr {$name + "_lToe09J2GeoG.sz"} (($lToe08_Loc - $lToe10_Loc)*.45);
setAttr {$name + "_lToe09J3GeoG.sz"} (($lToe08_Loc - $lToe10_Loc)*.45);

select {$name + "_lToe10J1GeoShape.vtx[1]"} {$name + "_lToe10J1GeoShape.vtx[3]"} {$name + "_lToe10J1GeoShape.vtx[5]"} {$name + "_lToe10J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe10J1_Clstr"};
pointConstraint {$name + "_lToe10J2"} {$name + "_lToe10J1_Clstr"};

polyCube -n {$name + "_lToe10J2Geo"};
group -n {$name + "_lToe10J2GeoG"} {$name + "_lToe10J2Geo"};
move -r -0.5 0 0 {$name + "_lToe10J2GeoG.scalePivot"} {$name + "_lToe10J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe10J2Geo.scalePivot"} {$name + "_lToe10J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe10J2C"} {$name + "_lToe10J2GeoG"};
setAttr {$name + "_lToe10J2GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe10J2GeoG.sz"} (($lToe09_Loc - $lToe10_Loc)*.9);
select {$name + "_lToe10J2GeoShape.vtx[1]"} {$name + "_lToe10J2GeoShape.vtx[3]"} {$name + "_lToe10J2GeoShape.vtx[5]"} {$name + "_lToe10J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe10J2_Clstr"};
pointConstraint {$name + "_lToe10J3"} {$name + "_lToe10J2_Clstr"};

polyCube -n {$name + "_lToe10J3Geo"};
group -n {$name + "_lToe10J3GeoG"} {$name + "_lToe10J3Geo"};
move -r -0.5 0 0 {$name + "_lToe10J3GeoG.scalePivot"} {$name + "_lToe10J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lToe10J3Geo.scalePivot"} {$name + "_lToe10J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lToe10J3C"} {$name + "_lToe10J3GeoG"};
setAttr {$name + "_lToe10J3GeoG.sy"} ($lLegLength[0] /12);
setAttr {$name + "_lToe10J3GeoG.sz"} (($lToe09_Loc - $lToe10_Loc)*.9);
select {$name + "_lToe10J3GeoShape.vtx[1]"} {$name + "_lToe10J3GeoShape.vtx[3]"} {$name + "_lToe10J3GeoShape.vtx[5]"} {$name + "_lToe10J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lToe10J3_Clstr"};
pointConstraint {$name + "_lToe10JTip"} {$name + "_lToe10J3_Clstr"};

delete -ch {$name + "_lToe10J1Geo"} {$name + "_lToe10J2Geo"} {$name + "_lToe10J3Geo"};
parent {$name + "_lToe10J1GeoG"} {$name + "_lToe10J2GeoG"} {$name + "_lToe10J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_lToe10J1_Clstr"} {$name + "_lToe10J2_Clstr"} {$name + "_lToe10J3_Clstr"};
}

//////MOVE BOTTOM TOE POINTS TO GRID/////////
if (`objExists ($name + "_lToe01J1")`)
{
move -y 0 0 0 {$name + "_lToe01J1GeoShape.vtx[0:1]"} {$name + "_lToe01J1GeoShape.vtx[6:7]"} {$name + "_lToe01J2GeoShape.vtx[0:1]"} {$name + "_lToe01J2GeoShape.vtx[6:7]"} ;
}
if (`objExists ($name + "_lToe02J1")`)
{
move -y 0 0 0 {$name + "_lToe02J1GeoShape.vtx[0:1]"} {$name + "_lToe02J1GeoShape.vtx[6:7]"} {$name + "_lToe02J2GeoShape.vtx[0:1]"} {$name + "_lToe02J2GeoShape.vtx[6:7]"} {$name + "_lToe02J3GeoShape.vtx[0:1]"} {$name + "_lToe02J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe03J1")`)
{
move -y 0 0 0 {$name + "_lToe03J1GeoShape.vtx[0:1]"} {$name + "_lToe03J1GeoShape.vtx[6:7]"} {$name + "_lToe03J2GeoShape.vtx[0:1]"} {$name + "_lToe03J2GeoShape.vtx[6:7]"} {$name + "_lToe03J3GeoShape.vtx[0:1]"} {$name + "_lToe03J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe04J1")`)
{
move -y 0 0 0 {$name + "_lToe04J1GeoShape.vtx[0:1]"} {$name + "_lToe04J1GeoShape.vtx[6:7]"} {$name + "_lToe04J2GeoShape.vtx[0:1]"} {$name + "_lToe04J2GeoShape.vtx[6:7]"} {$name + "_lToe04J3GeoShape.vtx[0:1]"} {$name + "_lToe04J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe05J1")`)
{
move -y 0 0 0 {$name + "_lToe05J1GeoShape.vtx[0:1]"} {$name + "_lToe05J1GeoShape.vtx[6:7]"} {$name + "_lToe05J2GeoShape.vtx[0:1]"} {$name + "_lToe05J2GeoShape.vtx[6:7]"} {$name + "_lToe05J3GeoShape.vtx[0:1]"} {$name + "_lToe05J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe06J1")`)
{
move -y 0 0 0 {$name + "_lToe06J1GeoShape.vtx[0:1]"} {$name + "_lToe06J1GeoShape.vtx[6:7]"} {$name + "_lToe06J2GeoShape.vtx[0:1]"} {$name + "_lToe06J2GeoShape.vtx[6:7]"} {$name + "_lToe06J3GeoShape.vtx[0:1]"} {$name + "_lToe06J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe07J1")`)
{
move -y 0 0 0 {$name + "_lToe07J1GeoShape.vtx[0:1]"} {$name + "_lToe07J1GeoShape.vtx[6:7]"} {$name + "_lToe07J2GeoShape.vtx[0:1]"} {$name + "_lToe07J2GeoShape.vtx[6:7]"} {$name + "_lToe07J3GeoShape.vtx[0:1]"} {$name + "_lToe07J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe08J1")`)
{
move -y 0 0 0 {$name + "_lToe08J1GeoShape.vtx[0:1]"} {$name + "_lToe08J1GeoShape.vtx[6:7]"} {$name + "_lToe08J2GeoShape.vtx[0:1]"} {$name + "_lToe08J2GeoShape.vtx[6:7]"} {$name + "_lToe08J3GeoShape.vtx[0:1]"} {$name + "_lToe08J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe09J1")`)
{
move -y 0 0 0 {$name + "_lToe09J1GeoShape.vtx[0:1]"} {$name + "_lToe09J1GeoShape.vtx[6:7]"} {$name + "_lToe09J2GeoShape.vtx[0:1]"} {$name + "_lToe09J2GeoShape.vtx[6:7]"} {$name + "_lToe09J3GeoShape.vtx[0:1]"} {$name + "_lToe09J3GeoShape.vtx[6:7]"};
}
if (`objExists ($name + "_lToe10J1")`)
{
move -y 0 0 0 {$name + "_lToe10J1GeoShape.vtx[0:1]"} {$name + "_lToe10J1GeoShape.vtx[6:7]"} {$name + "_lToe10J2GeoShape.vtx[0:1]"} {$name + "_lToe10J2GeoShape.vtx[6:7]"} {$name + "_lToe10J3GeoShape.vtx[0:1]"} {$name + "_lToe10J3GeoShape.vtx[6:7]"};
}

//////////////////////////////////////////////////////////////////////////////
////////////////////////////////LEFT ARM//////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//LEFT UPPER ARM
$lElbowLength = `xform -q -t {$name + "_lElbowJ"}`;
$lWristLength = `xform -q -t {$name + "_lWristJDummy"}`;
$lArmLength[0] = (($lElbowLength[0] + $lWristLength[0]) /2);
$lUprArmLength = `getAttr {$name + "_lElbowJ.tx"}`;
$lLwrArmLength = `getAttr {$name + "_lWristJDummy.tx"}`;

$rElbowLength = `xform -q -t {$name + "_rElbowJ"}`;
$rWristLength = `xform -q -t {$name + "_rWristJDummy"}`;
$rArmLength[0] = (($rElbowLength[0] + $rWristLength[0]) /2);
$rUprArmLength = `getAttr {$name + "_rElbowJ.tx"}`;
$rLwrArmLength = `getAttr {$name + "_rWristJDummy.tx"}`;

duplicate -rr -un -n {$name + "_lUprArmGeoG"} baseCylinderG ;
rename {$name + "_lUprArmGeoG|baseCylinder"} {$name + "_lUprArmGeo"};
parent {$name + "_lUprArmGeoG"} {$name + "_scaleGeoG"};
duplicate -rr -un -n {$name + "_rUprArmGeoG"} baseCylinderG ;
rename {$name + "_rUprArmGeoG|baseCylinder"} {$name + "_rUprArmGeo"};
parent {$name + "_rUprArmGeoG"} {$name + "_scaleGeoG"};

parentConstraint {$name + "_lShoulderJ"} {$name + "_lUprArmGeoG"};
delete {$name + "_lUprArmGeoG_parentConstraint1"};
setAttr ({$name + "_lUprArmGeoG.scale"}, $lUprArmLength, ($lArmLength[0] /12), ($lArmLength[0] /12));
makeIdentity -apply true -t 1 -s 1 {$name + "_lUprArmGeoG"};
parentConstraint {$name + "_lShoulderJ"} {$name + "_lUprArmGeoG"};
connectAttr -f {$name + "_lShoulderJ.scale"} {$name + "_lUprArmGeoG.scale"};

//LEFT LOWER ARM
duplicate -rr -un -n {$name + "_lLwrArmGeoG"} baseCylinderG ;
rename {$name + "_lLwrArmGeoG|baseCylinder"} {$name + "_lLwrArmGeo"};
parent {$name + "_lLwrArmGeoG"} {$name + "_scaleGeoG"};

duplicate -rr -un -n {$name + "_rLwrArmGeoG"} baseCylinderG ;
rename {$name + "_rLwrArmGeoG|baseCylinder"} {$name + "_rLwrArmGeo"};
parent {$name + "_rLwrArmGeoG"} {$name + "_scaleGeoG"};

parentConstraint {$name + "_lElbowJ"} {$name + "_lLwrArmGeoG"};
delete {$name + "_lLwrArmGeoG_parentConstraint1"};
setAttr ({$name + "_lLwrArmGeoG.scale"}, $lLwrArmLength, ($lArmLength[0] /12), ($lArmLength[0] /12));
makeIdentity -apply true -t 1 -s 1 {$name + "_lLwrArmGeoG"};
parentConstraint {$name + "_lElbowJ"} {$name + "_lLwrArmGeoG"};
connectAttr -f {$name + "_lElbowJ.scale"} {$name + "_lLwrArmGeoG.scale"};

duplicate -rr -un -n {$name + "_lElbowGeoG"} baseSphereG;
rename {$name + "_lElbowGeoG|baseSphere"} {$name + "_lElbowGeo"};
parentConstraint {$name + "_lElbowJ"} {$name + "_lElbowGeoG"};
setAttr ({$name + "_lElbowGeoG.scale"}, ($lArmLength[0] /12), ($lArmLength[0] /12), ($lArmLength[0] /12));
parent {$name + "_lElbowGeoG"} {$name + "_scaleGeoG"};

duplicate -rr -un -n {$name + "_rElbowGeoG"} baseSphereG;
rename {$name + "_rElbowGeoG|baseSphere"} {$name + "_rElbowGeo"};
parentConstraint {$name + "_rElbowJ"} {$name + "_rElbowGeoG"};
setAttr ({$name + "_rElbowGeoG.scale"}, ($rArmLength[0] /12), ($rArmLength[0] /12), ($rArmLength[0] /12));
parent {$name + "_rElbowGeoG"} {$name + "_scaleGeoG"};

duplicate -rr -un -n {$name + "_lShoulderGeoG"} baseSphereG;
rename {$name + "_lShoulderGeoG|baseSphere"} {$name + "_lShoulderGeo"};
parentConstraint {$name + "_lShoulderJ"} {$name + "_lShoulderGeoG"};
setAttr ({$name + "_lShoulderGeoG.scale"}, ($lArmLength[0] /7), ($lArmLength[0] /7), ($lArmLength[0] /7));
parent {$name + "_lShoulderGeoG"} {$name + "_scaleGeoG"};

duplicate -rr -un -n {$name + "_rShoulderGeoG"} baseSphereG;
rename {$name + "_rShoulderGeoG|baseSphere"} {$name + "_rShoulderGeo"};
parentConstraint {$name + "_rShoulderJ"} {$name + "_rShoulderGeoG"};
setAttr ({$name + "_rShoulderGeoG.scale"}, ($rArmLength[0] /7), ($rArmLength[0] /7), ($rArmLength[0] /7));
parent {$name + "_rShoulderGeoG"} {$name + "_scaleGeoG"};

/////////////////////////////////////////////////////////////////////////////////
//////////////////////////////LEFT HAND GEOMETRY/////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

polyCube -n {$name + "_lHandGeo"};
group -n {$name + "_lHandGeoG"} {$name + "_lHandGeo"};
move -r -0.5 0 0 {$name + "_lHandGeoG.scalePivot"} {$name + "_lHandGeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lHandGeo.scalePivot"} {$name + "_lHandGeo.rotatePivot"} ;
setAttr {$name + "_lHandGeoG.sy"} ($lArmLength[0] /8);
setAttr {$name + "_lHandGeoG.sz"} ($lArmLength[0] /3.5);
makeIdentity -apply true -s 1 {$name + "_lHandGeoG"};
parentConstraint {$name + "_lWristJ"} {$name + "_lHandGeoG"};
parent {$name + "_lHandGeoG"} {$name + "_scaleGeoG"};
connectAttr -f {$name + "_lWristJG1.scale"} {$name + "_lHandGeoG.scale"};

$lHandInputs = `listHistory {$name + "_lHandGeo"}`;

if (`objExists ($name + "_lFinger9J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 9;

select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[21]"} {$name + "_lHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing9Clstr"};

$lFinger8Loc = `xform -q -ws -t {$name + "_lFinger8J1C"}`;
$lFinger9Loc = `xform -q -ws -t {$name + "_lFinger9J1C"}`;
$lFinger9Offset[0] = ($lFinger8Loc[0] - $lFinger9Loc[0]) /-2;
$lFinger9Offset[1] = ($lFinger8Loc[1] - $lFinger9Loc[1]) /-2;
$lFinger9Offset[2] = ($lFinger8Loc[2] - $lFinger9Loc[2]) /-2;

pointConstraint -offset $lFinger9Offset[0] $lFinger9Offset[1] $lFinger9Offset[2] {$name + "_lFinger9J1C"} {$name + "_lFing9Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[39]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[37]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[35]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[33]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4_5Clstr"};
pointConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger5J1C"} {$name + "_lFing4_5Clstr"} ;

select {$name + "_lHandGeoShape.vtx[13]"} {$name + "_lHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing5_6Clstr"};
pointConstraint {$name + "_lFinger5J1C"} {$name + "_lFinger6J1C"} {$name + "_lFing5_6Clstr"} ;

select {$name + "_lHandGeoShape.vtx[15]"} {$name + "_lHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing6_7Clstr"};
pointConstraint {$name + "_lFinger6J1C"} {$name + "_lFinger7J1C"} {$name + "_lFing6_7Clstr"} ;

select {$name + "_lHandGeoShape.vtx[17]"} {$name + "_lHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing7_8Clstr"};
pointConstraint {$name + "_lFinger7J1C"} {$name + "_lFinger8J1C"} {$name + "_lFing7_8Clstr"} ;

select {$name + "_lHandGeoShape.vtx[19]"} {$name + "_lHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing8_9Clstr"};
pointConstraint {$name + "_lFinger8J1C"} {$name + "_lFinger9J1C"} {$name + "_lFing8_9Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4_5Clstr"} {$name + "_lFing5_6Clstr"}
{$name + "_lFing6_7Clstr"} {$name + "_lFing7_8Clstr"} {$name + "_lFing8_9Clstr"} {$name + "_lFing9Clstr"};
}

else if (`objExists ($name + "_lFinger8J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 8;

select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[19]"} {$name + "_lHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing8Clstr"};

$lFinger7Loc = `xform -q -ws -t {$name + "_lFinger7J1C"}`;
$lFinger8Loc = `xform -q -ws -t {$name + "_lFinger8J1C"}`;
$lFinger8Offset[0] = ($lFinger7Loc[0] - $lFinger8Loc[0]) /-2;
$lFinger8Offset[1] = ($lFinger7Loc[1] - $lFinger8Loc[1]) /-2;
$lFinger8Offset[2] = ($lFinger7Loc[2] - $lFinger8Loc[2]) /-2;

pointConstraint -offset $lFinger8Offset[0] $lFinger8Offset[1] $lFinger8Offset[2] {$name + "_lFinger8J1C"} {$name + "_lFing8Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[35]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[33]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4_5Clstr"};
pointConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger5J1C"} {$name + "_lFing4_5Clstr"} ;

select {$name + "_lHandGeoShape.vtx[13]"} {$name + "_lHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing5_6Clstr"};
pointConstraint {$name + "_lFinger5J1C"} {$name + "_lFinger6J1C"} {$name + "_lFing5_6Clstr"} ;

select {$name + "_lHandGeoShape.vtx[15]"} {$name + "_lHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing6_7Clstr"};
pointConstraint {$name + "_lFinger6J1C"} {$name + "_lFinger7J1C"} {$name + "_lFing6_7Clstr"} ;

select {$name + "_lHandGeoShape.vtx[17]"} {$name + "_lHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing7_8Clstr"};
pointConstraint {$name + "_lFinger7J1C"} {$name + "_lFinger8J1C"} {$name + "_lFing7_8Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4_5Clstr"} {$name + "_lFing5_6Clstr"}
{$name + "_lFing6_7Clstr"} {$name + "_lFing7_8Clstr"} {$name + "_lFing8Clstr"};
}

else if (`objExists ($name + "_lFinger7J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 7;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[17]"} {$name + "_lHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing7Clstr"};

$lFinger6Loc = `xform -q -ws -t {$name + "_lFinger6J1C"}`;
$lFinger7Loc = `xform -q -ws -t {$name + "_lFinger7J1C"}`;
$lFinger7Offset[0] = ($lFinger6Loc[0] - $lFinger7Loc[0]) /-2;
$lFinger7Offset[1] = ($lFinger6Loc[1] - $lFinger7Loc[1]) /-2;
$lFinger7Offset[2] = ($lFinger6Loc[2] - $lFinger7Loc[2]) /-2;

pointConstraint -offset $lFinger7Offset[0] $lFinger7Offset[1] $lFinger7Offset[2] {$name + "_lFinger7J1C"} {$name + "_lFing7Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4_5Clstr"};
pointConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger5J1C"} {$name + "_lFing4_5Clstr"} ;

select {$name + "_lHandGeoShape.vtx[13]"} {$name + "_lHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing5_6Clstr"};
pointConstraint {$name + "_lFinger5J1C"} {$name + "_lFinger6J1C"} {$name + "_lFing5_6Clstr"} ;

select {$name + "_lHandGeoShape.vtx[15]"} {$name + "_lHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing6_7Clstr"};
pointConstraint {$name + "_lFinger6J1C"} {$name + "_lFinger7J1C"} {$name + "_lFing6_7Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4_5Clstr"} {$name + "_lFing5_6Clstr"}
{$name + "_lFing6_7Clstr"} {$name + "_lFing7Clstr"} ;
}

else if (`objExists ($name + "_lFinger6J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 6;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[15]"} {$name + "_lHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing6Clstr"};

$lFinger5Loc = `xform -q -ws -t {$name + "_lFinger5J1C"}`;
$lFinger6Loc = `xform -q -ws -t {$name + "_lFinger6J1C"}`;
$lFinger6Offset[0] = ($lFinger5Loc[0] - $lFinger6Loc[0]) /-2;
$lFinger6Offset[1] = ($lFinger5Loc[1] - $lFinger6Loc[1]) /-2;
$lFinger6Offset[2] = ($lFinger5Loc[2] - $lFinger6Loc[2]) /-2;

pointConstraint -offset $lFinger6Offset[0] $lFinger6Offset[1] $lFinger6Offset[2] {$name + "_lFinger6J1C"} {$name + "_lFing6Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4_5Clstr"};
pointConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger5J1C"} {$name + "_lFing4_5Clstr"} ;

select {$name + "_lHandGeoShape.vtx[13]"} {$name + "_lHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing5_6Clstr"};
pointConstraint {$name + "_lFinger5J1C"} {$name + "_lFinger6J1C"} {$name + "_lFing5_6Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4_5Clstr"} {$name + "_lFing5_6Clstr"}
{$name + "_lFing6Clstr"};
}

else if (`objExists ($name + "_lFinger5J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 5;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[13]"} {$name + "_lHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing5Clstr"};

$lFinger4Loc = `xform -q -ws -t {$name + "_lFinger4J1C"}`;
$lFinger5Loc = `xform -q -ws -t {$name + "_lFinger5J1C"}`;
$lFinger5Offset[0] = ($lFinger4Loc[0] - $lFinger5Loc[0]) /-2;
$lFinger5Offset[1] = ($lFinger4Loc[1] - $lFinger5Loc[1]) /-2;
$lFinger5Offset[2] = ($lFinger4Loc[2] - $lFinger5Loc[2]) /-2;

pointConstraint -offset $lFinger5Offset[0] $lFinger5Offset[1] $lFinger5Offset[2] {$name + "_lFinger5J1C"} {$name + "_lFing5Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4_5Clstr"};
pointConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger5J1C"} {$name + "_lFing4_5Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4_5Clstr"} {$name + "_lFing5Clstr"};
}

else if (`objExists ($name + "_lFinger4J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 4;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[11]"} {$name + "_lHandGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing4Clstr"};

$lFinger3Loc = `xform -q -ws -t {$name + "_lFinger3J1C"}`;
$lFinger4Loc = `xform -q -ws -t {$name + "_lFinger4J1C"}`;
$lFinger4Offset[0] = ($lFinger3Loc[0] - $lFinger4Loc[0]) /-2;
$lFinger4Offset[1] = ($lFinger3Loc[1] - $lFinger4Loc[1]) /-2;
$lFinger4Offset[2] = ($lFinger3Loc[2] - $lFinger4Loc[2]) /-2;

pointConstraint -offset $lFinger4Offset[0] $lFinger4Offset[1] $lFinger4Offset[2] {$name + "_lFinger4J1C"} {$name + "_lFing4Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3_4Clstr"};
pointConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger4J1C"} {$name + "_lFing3_4Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3_4Clstr"} {$name + "_lFing4Clstr"};
}

else if (`objExists ($name + "_lFinger3J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 3;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[9]"} {$name + "_lHandGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing3Clstr"};

$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger3Loc = `xform -q -ws -t {$name + "_lFinger3J1C"}`;
$lFinger3Offset[0] = ($lFinger2Loc[0] - $lFinger3Loc[0]) /-2;
$lFinger3Offset[1] = ($lFinger2Loc[1] - $lFinger3Loc[1]) /-2;
$lFinger3Offset[2] = ($lFinger2Loc[2] - $lFinger3Loc[2]) /-2;

pointConstraint -offset $lFinger3Offset[0] $lFinger3Offset[1] $lFinger3Offset[2] {$name + "_lFinger3J1C"} {$name + "_lFing3Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2_3Clstr"};
pointConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger3J1C"} {$name + "_lFing2_3Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2_3Clstr"} {$name + "_lFing3Clstr"};
}

else if (`objExists ($name + "_lFinger2J1")`)
{
setAttr {$lHandInputs[2] + ".subdivisionsDepth"} 2;
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};

$lFinger1Loc = `xform -q -ws -t {$name + "_lFinger1J1C"}`;
$lFinger2Loc = `xform -q -ws -t {$name + "_lFinger2J1C"}`;
$lFinger1Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /2;
$lFinger1Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /2;
$lFinger1Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /2;

pointConstraint -offset $lFinger1Offset[0] $lFinger1Offset[1] $lFinger1Offset[2] {$name + "_lFinger1J1C"} {$name + "_lFing1Clstr"};

select {$name + "_lHandGeoShape.vtx[7]"} {$name + "_lHandGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing2Clstr"};

$lFinger2Offset[0] = ($lFinger1Loc[0] - $lFinger2Loc[0]) /-2;
$lFinger2Offset[1] = ($lFinger1Loc[1] - $lFinger2Loc[1]) /-2;
$lFinger2Offset[2] = ($lFinger1Loc[2] - $lFinger2Loc[2]) /-2;

pointConstraint -offset $lFinger2Offset[0] $lFinger2Offset[1] $lFinger2Offset[2] {$name + "_lFinger2J1C"} {$name + "_lFing2Clstr"};

select {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1_2Clstr"};
pointConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger2J1C"} {$name + "_lFing1_2Clstr"} ;

delete -ch {$name + "_lHandGeo"};
delete {$name + "_lFing1_2Clstr"} {$name + "_lFing2Clstr"};
}

else
{
select {$name + "_lHandGeoShape.vtx[1]"} {$name + "_lHandGeoShape.vtx[3]"} {$name + "_lHandGeoShape.vtx[5]"} {$name + "_lHandGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFing1Clstr"};
pointConstraint {$name + "_lFinger1J1"} {$name + "_lFing1Clstr"};
}

delete -ch {$name + "_lHandGeo"};

select {$name + "_lHandGeo.e[0]"} ;
PolyConvertToRingAndSplit;
select {$name + "_lHandGeo.e[0]"} ;
polySelectEdges edgeRing;
PolySelectConvert 1;
$lHandFaces = `ls -sl`;
hilite {$name + "_lHandGeo"} ;
polyChipOff  -kft 1 -dup 0 -off 0 $lHandFaces;
polySeparate -rs 1 -ch 1 {$name + "_lHandGeoShape"};
delete -ch {$name + "_lHandGeo"};
select {$name + "_lHandGeo"};
pickWalk -d down;
rename {$name + "_lHand1GeoBase"};
pickWalk -d right;
rename {$name + "_lHand2GeoTemp"};
polySeparate;
pickWalk -d up;
pickWalk -d down;
rename {$name + "_lHand2Geo"};
pickWalk -d right;
rename {$name + "_lHand1GeoEnd"};
polyUnite -ch 1 {$name + "_lHand1GeoBase"} {$name + "_lHand1GeoEnd"};
rename {$name + "_lHand1Geo"};
polyMergeVertex  -d 0.01 -am 1 {$name + "_lHand1Geo"};
polyCloseBorder {$name + "_lHand1Geo"};
group -n {$name + "_lHand1GeoG"} {$name + "_lHand1Geo"};
polyCloseBorder {$name + "_lHand2Geo"};
group -n {$name + "_lHand2GeoG"} {$name + "_lHand2Geo"};
parent {$name + "_lHand1GeoG"} {$name + "_lHand2GeoG"} {$name + "_scaleGeoG"};
delete -ch {$name + "_lHand1GeoG"} {$name + "_lHand2Geo"};
parent {$name + "_lHand1GeoG"} {$name + "_lHand2GeoG"} {$name + "_lHandGeoG"};

$lWristLoc = `xform -q -ws -rp {$name + "_lWristJ"}`;
$lHandLoc = `xform -q -ws -rp {$name + "_lPalmJ"}`;
move $lWristLoc[0] $lWristLoc[1] $lWristLoc[2] {$name + "_lHand1Geo.scalePivot"} {$name + "_lHand1Geo.rotatePivot"} {$name + "_lHand1GeoG.scalePivot"} {$name + "_lHand1GeoG.rotatePivot"};
move $lHandLoc[0] $lHandLoc[1] $lHandLoc[2] {$name + "_lHand2Geo.scalePivot"} {$name + "_lHand2Geo.rotatePivot"} {$name + "_lHand2GeoG.scalePivot"} {$name + "_lHand2GeoG.rotatePivot"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lHand1GeoG"} {$name + "_lHand2GeoG"};

parentConstraint -mo {$name + "_lPalmJ"} {$name + "_lHand2GeoG"};

/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////LEFT FINGER GEOMETRY/////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
polyCube -n {$name + "_lFinger1J1Geo"};
group -n {$name + "_lFinger1J1GeoG"} {$name + "_lFinger1J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger1J1GeoG.scalePivot"} {$name + "_lFinger1J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger1J1Geo.scalePivot"} {$name + "_lFinger1J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger1J1C"} {$name + "_lFinger1J1GeoG"};
setAttr {$name + "_lFinger1J1Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_lFinger1J1Geo.sz"} ($lArmLength[0] /8);
select {$name + "_lFinger1J1GeoShape.vtx[1]"} {$name + "_lFinger1J1GeoShape.vtx[3]"} {$name + "_lFinger1J1GeoShape.vtx[5]"} {$name + "_lFinger1J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger1J1_Clstr"};
pointConstraint {$name + "_lFinger1J2"} {$name + "_lFinger1J1_Clstr"};

polyCube -n {$name + "_lFinger1J2Geo"};
group -n {$name + "_lFinger1J2GeoG"} {$name + "_lFinger1J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger1J2GeoG.scalePivot"} {$name + "_lFinger1J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger1J2Geo.scalePivot"} {$name + "_lFinger1J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger1J2C"} {$name + "_lFinger1J2GeoG"};
setAttr {$name + "_lFinger1J2Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_lFinger1J2Geo.sz"} ($lArmLength[0] /8);
select {$name + "_lFinger1J2GeoShape.vtx[1]"} {$name + "_lFinger1J2GeoShape.vtx[3]"} {$name + "_lFinger1J2GeoShape.vtx[5]"} {$name + "_lFinger1J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger1J2_Clstr"};
pointConstraint {$name + "_lFinger1J3"} {$name + "_lFinger1J2_Clstr"};

polyCube -n {$name + "_lFinger1J3Geo"};
group -n {$name + "_lFinger1J3GeoG"} {$name + "_lFinger1J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger1J3GeoG.scalePivot"} {$name + "_lFinger1J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger1J3Geo.scalePivot"} {$name + "_lFinger1J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger1J3C"} {$name + "_lFinger1J3GeoG"};
setAttr {$name + "_lFinger1J3Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_lFinger1J3Geo.sz"} ($lArmLength[0] /8);
select {$name + "_lFinger1J3GeoShape.vtx[1]"} {$name + "_lFinger1J3GeoShape.vtx[3]"} {$name + "_lFinger1J3GeoShape.vtx[5]"} {$name + "_lFinger1J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger1J3_Clstr"};
pointConstraint {$name + "_lFinger1JTip"} {$name + "_lFinger1J3_Clstr"};

if (`objExists ($name + "_lFinger2J1")`)
{
$lFinger1J1Loc = `getAttr {$name + "_lFinger1J1.tz"}`;
$lFinger2J1Loc = `getAttr {$name + "_lFinger2J1.tz"}`;
setAttr {$name + "_lFinger1J1Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger1J1Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger1J2Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger1J2Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger1J3Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger1J3Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
}

delete -ch {$name + "_lFinger1J1Geo"} {$name + "_lFinger1J2Geo"} {$name + "_lFinger1J3Geo"};
delete {$name + "_lFing1Clstr"} {$name + "_lFinger1J1_Clstr"} {$name + "_lFinger1J2_Clstr"} {$name + "_lFinger1J3_Clstr"} ;
group -em -n {$name + "_lFingersGeoG"};
parent {$name + "_lFingersGeoG"} {$name + "_scaleGeoG"};
parentConstraint {$name + "_lWristJ"} {$name + "_lFingersGeoG"};
connectAttr -f {$name + "_lWristJG1.scale"} {$name + "_lFingersGeoG.scale"};
parent {$name + "_lFinger1J1GeoG"} {$name + "_lFinger1J2GeoG"} {$name + "_lFinger1J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger1J1Geo"} {$name + "_lFinger1J2Geo"} {$name + "_lFinger1J3Geo"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J1GeoG.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J2GeoG.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J3GeoG.scale"};

if (`objExists ($name + "_lFinger2J1")`)
{
polyCube -n {$name + "_lFinger2J1Geo"};
group -n {$name + "_lFinger2J1GeoG"} {$name + "_lFinger2J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger2J1GeoG.scalePivot"} {$name + "_lFinger2J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger2J1Geo.scalePivot"} {$name + "_lFinger2J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger2J1C"} {$name + "_lFinger2J1GeoG"};
$lFinger1J1Loc = `getAttr {$name + "_lFinger1J1.tz"}`;
$lFinger2J1Loc = `getAttr {$name + "_lFinger2J1.tz"}`;
setAttr {$name + "_lFinger2J1Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger2J1Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
select {$name + "_lFinger2J1GeoShape.vtx[1]"} {$name + "_lFinger2J1GeoShape.vtx[3]"} {$name + "_lFinger2J1GeoShape.vtx[5]"} {$name + "_lFinger2J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger2J1_Clstr"};
pointConstraint {$name + "_lFinger2J2"} {$name + "_lFinger2J1_Clstr"};

polyCube -n {$name + "_lFinger2J2Geo"};
group -n {$name + "_lFinger2J2GeoG"} {$name + "_lFinger2J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger2J2GeoG.scalePivot"} {$name + "_lFinger2J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger2J2Geo.scalePivot"} {$name + "_lFinger2J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger2J2C"} {$name + "_lFinger2J2GeoG"};
setAttr {$name + "_lFinger2J2Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger2J2Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
select {$name + "_lFinger2J2GeoShape.vtx[1]"} {$name + "_lFinger2J2GeoShape.vtx[3]"} {$name + "_lFinger2J2GeoShape.vtx[5]"} {$name + "_lFinger2J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger2J2_Clstr"};
pointConstraint {$name + "_lFinger2J3"} {$name + "_lFinger2J2_Clstr"};

polyCube -n {$name + "_lFinger2J3Geo"};
group -n {$name + "_lFinger2J3GeoG"} {$name + "_lFinger2J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger2J3GeoG.scalePivot"} {$name + "_lFinger2J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger2J3Geo.scalePivot"} {$name + "_lFinger2J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger2J3C"} {$name + "_lFinger2J3GeoG"};
setAttr {$name + "_lFinger2J3Geo.sy"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
setAttr {$name + "_lFinger2J3Geo.sz"} (($lFinger1J1Loc - $lFinger2J1Loc)*.9);
select {$name + "_lFinger2J3GeoShape.vtx[1]"} {$name + "_lFinger2J3GeoShape.vtx[3]"} {$name + "_lFinger2J3GeoShape.vtx[5]"} {$name + "_lFinger2J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger2J3_Clstr"};
pointConstraint {$name + "_lFinger2JTip"} {$name + "_lFinger2J3_Clstr"};

delete -ch {$name + "_lFinger2J1Geo"} {$name + "_lFinger2J2Geo"} {$name + "_lFinger2J3Geo"};
delete {$name + "_lFinger2J1_Clstr"} {$name + "_lFinger2J2_Clstr"} {$name + "_lFinger2J3_Clstr"} ;
parent {$name + "_lFinger2J1GeoG"} {$name + "_lFinger2J2GeoG"} {$name + "_lFinger2J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger2J1Geo"} {$name + "_lFinger2J2Geo"} {$name + "_lFinger2J3Geo"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J1GeoG.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J2GeoG.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger3J1")`)
{
polyCube -n {$name + "_lFinger3J1Geo"};
group -n {$name + "_lFinger3J1GeoG"} {$name + "_lFinger3J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger3J1GeoG.scalePivot"} {$name + "_lFinger3J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger3J1Geo.scalePivot"} {$name + "_lFinger3J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger3J1C"} {$name + "_lFinger3J1GeoG"};
$lFinger2J1Loc = `getAttr {$name + "_lFinger2J1.tz"}`;
$lFinger3J1Loc = `getAttr {$name + "_lFinger3J1.tz"}`;
setAttr {$name + "_lFinger3J1Geo.sy"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
setAttr {$name + "_lFinger3J1Geo.sz"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
select {$name + "_lFinger3J1GeoShape.vtx[1]"} {$name + "_lFinger3J1GeoShape.vtx[3]"} {$name + "_lFinger3J1GeoShape.vtx[5]"} {$name + "_lFinger3J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger3J1_Clstr"};
pointConstraint {$name + "_lFinger3J2"} {$name + "_lFinger3J1_Clstr"};

polyCube -n {$name + "_lFinger3J2Geo"};
group -n {$name + "_lFinger3J2GeoG"} {$name + "_lFinger3J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger3J2GeoG.scalePivot"} {$name + "_lFinger3J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger3J2Geo.scalePivot"} {$name + "_lFinger3J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger3J2C"} {$name + "_lFinger3J2GeoG"};
setAttr {$name + "_lFinger3J2Geo.sy"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
setAttr {$name + "_lFinger3J2Geo.sz"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
select {$name + "_lFinger3J2GeoShape.vtx[1]"} {$name + "_lFinger3J2GeoShape.vtx[3]"} {$name + "_lFinger3J2GeoShape.vtx[5]"} {$name + "_lFinger3J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger3J2_Clstr"};
pointConstraint {$name + "_lFinger3J3"} {$name + "_lFinger3J2_Clstr"};

polyCube -n {$name + "_lFinger3J3Geo"};
group -n {$name + "_lFinger3J3GeoG"} {$name + "_lFinger3J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger3J3GeoG.scalePivot"} {$name + "_lFinger3J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger3J3Geo.scalePivot"} {$name + "_lFinger3J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger3J3C"} {$name + "_lFinger3J3GeoG"};
setAttr {$name + "_lFinger3J3Geo.sy"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
setAttr {$name + "_lFinger3J3Geo.sz"} (($lFinger2J1Loc - $lFinger3J1Loc)*.9);
select {$name + "_lFinger3J3GeoShape.vtx[1]"} {$name + "_lFinger3J3GeoShape.vtx[3]"} {$name + "_lFinger3J3GeoShape.vtx[5]"} {$name + "_lFinger3J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger3J3_Clstr"};
pointConstraint {$name + "_lFinger3JTip"} {$name + "_lFinger3J3_Clstr"};

delete -ch {$name + "_lFinger3J1Geo"} {$name + "_lFinger3J2Geo"} {$name + "_lFinger3J3Geo"};
delete {$name + "_lFinger3J1_Clstr"} {$name + "_lFinger3J2_Clstr"} {$name + "_lFinger3J3_Clstr"} ;
parent {$name + "_lFinger3J1GeoG"} {$name + "_lFinger3J2GeoG"} {$name + "_lFinger3J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger3J1Geo"} {$name + "_lFinger3J2Geo"} {$name + "_lFinger3J3Geo"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J1GeoG.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J2GeoG.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger4J1")`)
{
polyCube -n {$name + "_lFinger4J1Geo"};
group -n {$name + "_lFinger4J1GeoG"} {$name + "_lFinger4J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger4J1GeoG.scalePivot"} {$name + "_lFinger4J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger4J1Geo.scalePivot"} {$name + "_lFinger4J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger4J1C"} {$name + "_lFinger4J1GeoG"};
$lFinger3J1Loc = `getAttr {$name + "_lFinger3J1.tz"}`;
$lFinger4J1Loc = `getAttr {$name + "_lFinger4J1.tz"}`;
setAttr {$name + "_lFinger4J1Geo.sy"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
setAttr {$name + "_lFinger4J1Geo.sz"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
select {$name + "_lFinger4J1GeoShape.vtx[1]"} {$name + "_lFinger4J1GeoShape.vtx[3]"} {$name + "_lFinger4J1GeoShape.vtx[5]"} {$name + "_lFinger4J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger4J1_Clstr"};
pointConstraint {$name + "_lFinger4J2"} {$name + "_lFinger4J1_Clstr"};

polyCube -n {$name + "_lFinger4J2Geo"};
group -n {$name + "_lFinger4J2GeoG"} {$name + "_lFinger4J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger4J2GeoG.scalePivot"} {$name + "_lFinger4J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger4J2Geo.scalePivot"} {$name + "_lFinger4J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger4J2C"} {$name + "_lFinger4J2GeoG"};
setAttr {$name + "_lFinger4J2Geo.sy"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
setAttr {$name + "_lFinger4J2Geo.sz"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
select {$name + "_lFinger4J2GeoShape.vtx[1]"} {$name + "_lFinger4J2GeoShape.vtx[3]"} {$name + "_lFinger4J2GeoShape.vtx[5]"} {$name + "_lFinger4J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger4J2_Clstr"};
pointConstraint {$name + "_lFinger4J3"} {$name + "_lFinger4J2_Clstr"};

polyCube -n {$name + "_lFinger4J3Geo"};
group -n {$name + "_lFinger4J3GeoG"} {$name + "_lFinger4J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger4J3GeoG.scalePivot"} {$name + "_lFinger4J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger4J3Geo.scalePivot"} {$name + "_lFinger4J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger4J3C"} {$name + "_lFinger4J3GeoG"};
setAttr {$name + "_lFinger4J3Geo.sy"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
setAttr {$name + "_lFinger4J3Geo.sz"} (($lFinger3J1Loc - $lFinger4J1Loc)*.9);
select {$name + "_lFinger4J3GeoShape.vtx[1]"} {$name + "_lFinger4J3GeoShape.vtx[3]"} {$name + "_lFinger4J3GeoShape.vtx[5]"} {$name + "_lFinger4J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger4J3_Clstr"};
pointConstraint {$name + "_lFinger4JTip"} {$name + "_lFinger4J3_Clstr"};

delete -ch {$name + "_lFinger4J1Geo"} {$name + "_lFinger4J2Geo"} {$name + "_lFinger4J3Geo"};
delete {$name + "_lFinger4J1_Clstr"} {$name + "_lFinger4J2_Clstr"} {$name + "_lFinger4J3_Clstr"} ;
parent {$name + "_lFinger4J1GeoG"} {$name + "_lFinger4J2GeoG"} {$name + "_lFinger4J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger4J1Geo"} {$name + "_lFinger4J2Geo"} {$name + "_lFinger4J3Geo"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J1GeoG.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J2GeoG.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger5J1")`)
{
polyCube -n {$name + "_lFinger5J1Geo"};
group -n {$name + "_lFinger5J1GeoG"} {$name + "_lFinger5J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger5J1GeoG.scalePivot"} {$name + "_lFinger5J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger5J1Geo.scalePivot"} {$name + "_lFinger5J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger5J1C"} {$name + "_lFinger5J1GeoG"};
$lFinger4J1Loc = `getAttr {$name + "_lFinger4J1.tz"}`;
$lFinger5J1Loc = `getAttr {$name + "_lFinger5J1.tz"}`;
setAttr {$name + "_lFinger5J1Geo.sy"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
setAttr {$name + "_lFinger5J1Geo.sz"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
select {$name + "_lFinger5J1GeoShape.vtx[1]"} {$name + "_lFinger5J1GeoShape.vtx[3]"} {$name + "_lFinger5J1GeoShape.vtx[5]"} {$name + "_lFinger5J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger5J1_Clstr"};
pointConstraint {$name + "_lFinger5J2"} {$name + "_lFinger5J1_Clstr"};

polyCube -n {$name + "_lFinger5J2Geo"};
group -n {$name + "_lFinger5J2GeoG"} {$name + "_lFinger5J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger5J2GeoG.scalePivot"} {$name + "_lFinger5J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger5J2Geo.scalePivot"} {$name + "_lFinger5J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger5J2C"} {$name + "_lFinger5J2GeoG"};
setAttr {$name + "_lFinger5J2Geo.sy"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
setAttr {$name + "_lFinger5J2Geo.sz"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
select {$name + "_lFinger5J2GeoShape.vtx[1]"} {$name + "_lFinger5J2GeoShape.vtx[3]"} {$name + "_lFinger5J2GeoShape.vtx[5]"} {$name + "_lFinger5J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger5J2_Clstr"};
pointConstraint {$name + "_lFinger5J3"} {$name + "_lFinger5J2_Clstr"};

polyCube -n {$name + "_lFinger5J3Geo"};
group -n {$name + "_lFinger5J3GeoG"} {$name + "_lFinger5J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger5J3GeoG.scalePivot"} {$name + "_lFinger5J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger5J3Geo.scalePivot"} {$name + "_lFinger5J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger5J3C"} {$name + "_lFinger5J3GeoG"};
setAttr {$name + "_lFinger5J3Geo.sy"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
setAttr {$name + "_lFinger5J3Geo.sz"} (($lFinger4J1Loc - $lFinger5J1Loc)*.9);
select {$name + "_lFinger5J3GeoShape.vtx[1]"} {$name + "_lFinger5J3GeoShape.vtx[3]"} {$name + "_lFinger5J3GeoShape.vtx[5]"} {$name + "_lFinger5J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger5J3_Clstr"};
pointConstraint {$name + "_lFinger5JTip"} {$name + "_lFinger5J3_Clstr"};

delete -ch {$name + "_lFinger5J1Geo"} {$name + "_lFinger5J2Geo"} {$name + "_lFinger5J3Geo"};
delete {$name + "_lFinger5J1_Clstr"} {$name + "_lFinger5J2_Clstr"} {$name + "_lFinger5J3_Clstr"} ;
parent {$name + "_lFinger5J1GeoG"} {$name + "_lFinger5J2GeoG"} {$name + "_lFinger5J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger5J1Geo"} {$name + "_lFinger5J2Geo"} {$name + "_lFinger5J3Geo"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J1GeoG.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J2GeoG.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger6J1")`)
{
polyCube -n {$name + "_lFinger6J1Geo"};
group -n {$name + "_lFinger6J1GeoG"} {$name + "_lFinger6J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger6J1GeoG.scalePivot"} {$name + "_lFinger6J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger6J1Geo.scalePivot"} {$name + "_lFinger6J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger6J1C"} {$name + "_lFinger6J1GeoG"};
$lFinger5J1Loc = `getAttr {$name + "_lFinger5J1.tz"}`;
$lFinger6J1Loc = `getAttr {$name + "_lFinger6J1.tz"}`;
setAttr {$name + "_lFinger6J1Geo.sy"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
setAttr {$name + "_lFinger6J1Geo.sz"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
select {$name + "_lFinger6J1GeoShape.vtx[1]"} {$name + "_lFinger6J1GeoShape.vtx[3]"} {$name + "_lFinger6J1GeoShape.vtx[5]"} {$name + "_lFinger6J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger6J1_Clstr"};
pointConstraint {$name + "_lFinger6J2"} {$name + "_lFinger6J1_Clstr"};

polyCube -n {$name + "_lFinger6J2Geo"};
group -n {$name + "_lFinger6J2GeoG"} {$name + "_lFinger6J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger6J2GeoG.scalePivot"} {$name + "_lFinger6J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger6J2Geo.scalePivot"} {$name + "_lFinger6J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger6J2C"} {$name + "_lFinger6J2GeoG"};
$lFinger7J1Loc = `getAttr {$name + "_lFinger7J1.tz"}`;
setAttr {$name + "_lFinger6J2Geo.sy"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
setAttr {$name + "_lFinger6J2Geo.sz"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
select {$name + "_lFinger6J2GeoShape.vtx[1]"} {$name + "_lFinger6J2GeoShape.vtx[3]"} {$name + "_lFinger6J2GeoShape.vtx[5]"} {$name + "_lFinger6J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger6J2_Clstr"};
pointConstraint {$name + "_lFinger6J3"} {$name + "_lFinger6J2_Clstr"};

polyCube -n {$name + "_lFinger6J3Geo"};
group -n {$name + "_lFinger6J3GeoG"} {$name + "_lFinger6J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger6J3GeoG.scalePivot"} {$name + "_lFinger6J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger6J3Geo.scalePivot"} {$name + "_lFinger6J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger6J3C"} {$name + "_lFinger6J3GeoG"};
setAttr {$name + "_lFinger6J3Geo.sy"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
setAttr {$name + "_lFinger6J3Geo.sz"} (($lFinger5J1Loc - $lFinger6J1Loc)*.9);
select {$name + "_lFinger6J3GeoShape.vtx[1]"} {$name + "_lFinger6J3GeoShape.vtx[3]"} {$name + "_lFinger6J3GeoShape.vtx[5]"} {$name + "_lFinger6J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger6J3_Clstr"};
pointConstraint {$name + "_lFinger6JTip"} {$name + "_lFinger6J3_Clstr"};

delete -ch {$name + "_lFinger6J1Geo"} {$name + "_lFinger6J2Geo"} {$name + "_lFinger6J3Geo"};
delete {$name + "_lFinger6J1_Clstr"} {$name + "_lFinger6J2_Clstr"} {$name + "_lFinger6J3_Clstr"} ;
parent {$name + "_lFinger6J1GeoG"} {$name + "_lFinger6J2GeoG"} {$name + "_lFinger6J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger6J1Geo"} {$name + "_lFinger6J2Geo"} {$name + "_lFinger6J3Geo"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J1GeoG.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J2GeoG.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger7J1")`)
{
polyCube -n {$name + "_lFinger7J1Geo"};
group -n {$name + "_lFinger7J1GeoG"} {$name + "_lFinger7J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger7J1GeoG.scalePivot"} {$name + "_lFinger7J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger7J1Geo.scalePivot"} {$name + "_lFinger7J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger7J1C"} {$name + "_lFinger7J1GeoG"};
$lFinger6J1Loc = `getAttr {$name + "_lFinger6J1.tz"}`;
$lFinger7J1Loc = `getAttr {$name + "_lFinger7J1.tz"}`;
setAttr {$name + "_lFinger7J1Geo.sy"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
setAttr {$name + "_lFinger7J1Geo.sz"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
select {$name + "_lFinger7J1GeoShape.vtx[1]"} {$name + "_lFinger7J1GeoShape.vtx[3]"} {$name + "_lFinger7J1GeoShape.vtx[5]"} {$name + "_lFinger7J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger7J1_Clstr"};
pointConstraint {$name + "_lFinger7J2"} {$name + "_lFinger7J1_Clstr"};

polyCube -n {$name + "_lFinger7J2Geo"};
group -n {$name + "_lFinger7J2GeoG"} {$name + "_lFinger7J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger7J2GeoG.scalePivot"} {$name + "_lFinger7J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger7J2Geo.scalePivot"} {$name + "_lFinger7J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger7J2C"} {$name + "_lFinger7J2GeoG"};
setAttr {$name + "_lFinger7J2Geo.sy"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
setAttr {$name + "_lFinger7J2Geo.sz"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
select {$name + "_lFinger7J2GeoShape.vtx[1]"} {$name + "_lFinger7J2GeoShape.vtx[3]"} {$name + "_lFinger7J2GeoShape.vtx[5]"} {$name + "_lFinger7J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger7J2_Clstr"};
pointConstraint {$name + "_lFinger7J3"} {$name + "_lFinger7J2_Clstr"};

polyCube -n {$name + "_lFinger7J3Geo"};
group -n {$name + "_lFinger7J3GeoG"} {$name + "_lFinger7J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger7J3GeoG.scalePivot"} {$name + "_lFinger7J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger7J3Geo.scalePivot"} {$name + "_lFinger7J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger7J3C"} {$name + "_lFinger7J3GeoG"};
setAttr {$name + "_lFinger7J3Geo.sy"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
setAttr {$name + "_lFinger7J3Geo.sz"} (($lFinger6J1Loc - $lFinger7J1Loc)*.9);
select {$name + "_lFinger7J3GeoShape.vtx[1]"} {$name + "_lFinger7J3GeoShape.vtx[3]"} {$name + "_lFinger7J3GeoShape.vtx[5]"} {$name + "_lFinger7J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger7J3_Clstr"};
pointConstraint {$name + "_lFinger7JTip"} {$name + "_lFinger7J3_Clstr"};

delete -ch {$name + "_lFinger7J1Geo"} {$name + "_lFinger7J2Geo"} {$name + "_lFinger7J3Geo"};
delete {$name + "_lFinger7J1_Clstr"} {$name + "_lFinger7J2_Clstr"} {$name + "_lFinger7J3_Clstr"} ;
parent {$name + "_lFinger7J1GeoG"} {$name + "_lFinger7J2GeoG"} {$name + "_lFinger7J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger7J1Geo"} {$name + "_lFinger7J2Geo"} {$name + "_lFinger7J3Geo"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J1GeoG.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J2GeoG.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger8J1")`)
{
polyCube -n {$name + "_lFinger8J1Geo"};
group -n {$name + "_lFinger8J1GeoG"} {$name + "_lFinger8J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger8J1GeoG.scalePivot"} {$name + "_lFinger8J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger8J1Geo.scalePivot"} {$name + "_lFinger8J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger8J1C"} {$name + "_lFinger8J1GeoG"};
$lFinger7J1Loc = `getAttr {$name + "_lFinger7J1.tz"}`;
$lFinger8J1Loc = `getAttr {$name + "_lFinger8J1.tz"}`;
setAttr {$name + "_lFinger8J1Geo.sy"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
setAttr {$name + "_lFinger8J1Geo.sz"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
select {$name + "_lFinger8J1GeoShape.vtx[1]"} {$name + "_lFinger8J1GeoShape.vtx[3]"} {$name + "_lFinger8J1GeoShape.vtx[5]"} {$name + "_lFinger8J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger8J1_Clstr"};
pointConstraint {$name + "_lFinger8J2"} {$name + "_lFinger8J1_Clstr"};

polyCube -n {$name + "_lFinger8J2Geo"};
group -n {$name + "_lFinger8J2GeoG"} {$name + "_lFinger8J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger8J2GeoG.scalePivot"} {$name + "_lFinger8J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger8J2Geo.scalePivot"} {$name + "_lFinger8J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger8J2C"} {$name + "_lFinger8J2GeoG"};
setAttr {$name + "_lFinger8J2Geo.sy"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
setAttr {$name + "_lFinger8J2Geo.sz"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
select {$name + "_lFinger8J2GeoShape.vtx[1]"} {$name + "_lFinger8J2GeoShape.vtx[3]"} {$name + "_lFinger8J2GeoShape.vtx[5]"} {$name + "_lFinger8J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger8J2_Clstr"};
pointConstraint {$name + "_lFinger8J3"} {$name + "_lFinger8J2_Clstr"};

polyCube -n {$name + "_lFinger8J3Geo"};
group -n {$name + "_lFinger8J3GeoG"} {$name + "_lFinger8J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger8J3GeoG.scalePivot"} {$name + "_lFinger8J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger8J3Geo.scalePivot"} {$name + "_lFinger8J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger8J3C"} {$name + "_lFinger8J3GeoG"};
setAttr {$name + "_lFinger8J3Geo.sy"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
setAttr {$name + "_lFinger8J3Geo.sz"} (($lFinger7J1Loc - $lFinger8J1Loc)*.9);
select {$name + "_lFinger8J3GeoShape.vtx[1]"} {$name + "_lFinger8J3GeoShape.vtx[3]"} {$name + "_lFinger8J3GeoShape.vtx[5]"} {$name + "_lFinger8J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger8J3_Clstr"};
pointConstraint {$name + "_lFinger8JTip"} {$name + "_lFinger8J3_Clstr"};

delete -ch {$name + "_lFinger8J1Geo"} {$name + "_lFinger8J2Geo"} {$name + "_lFinger8J3Geo"};
delete {$name + "_lFinger8J1_Clstr"} {$name + "_lFinger8J2_Clstr"} {$name + "_lFinger8J3_Clstr"} ;
parent {$name + "_lFinger8J1GeoG"} {$name + "_lFinger8J2GeoG"} {$name + "_lFinger8J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger8J1Geo"} {$name + "_lFinger8J2Geo"} {$name + "_lFinger8J3Geo"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J1GeoG.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J2GeoG.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J3GeoG.scale"};
}

if (`objExists ($name + "_lFinger9J1")`)
{
polyCube -n {$name + "_lFinger9J1Geo"};
group -n {$name + "_lFinger9J1GeoG"} {$name + "_lFinger9J1Geo"};
move -r -0.5 0 0 {$name + "_lFinger9J1GeoG.scalePivot"} {$name + "_lFinger9J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger9J1Geo.scalePivot"} {$name + "_lFinger9J1Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger9J1C"} {$name + "_lFinger9J1GeoG"};
$lFinger8J1Loc = `getAttr {$name + "_lFinger8J1.tz"}`;
$lFinger9J1Loc = `getAttr {$name + "_lFinger9J1.tz"}`;
setAttr {$name + "_lFinger9J1Geo.sy"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
setAttr {$name + "_lFinger9J1Geo.sz"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
select {$name + "_lFinger9J1GeoShape.vtx[1]"} {$name + "_lFinger9J1GeoShape.vtx[3]"} {$name + "_lFinger9J1GeoShape.vtx[5]"} {$name + "_lFinger9J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger9J1_Clstr"};
pointConstraint {$name + "_lFinger9J2"} {$name + "_lFinger9J1_Clstr"};

polyCube -n {$name + "_lFinger9J2Geo"};
group -n {$name + "_lFinger9J2GeoG"} {$name + "_lFinger9J2Geo"};
move -r -0.5 0 0 {$name + "_lFinger9J2GeoG.scalePivot"} {$name + "_lFinger9J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger9J2Geo.scalePivot"} {$name + "_lFinger9J2Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger9J2C"} {$name + "_lFinger9J2GeoG"};
setAttr {$name + "_lFinger9J2Geo.sy"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
setAttr {$name + "_lFinger9J2Geo.sz"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
select {$name + "_lFinger9J2GeoShape.vtx[1]"} {$name + "_lFinger9J2GeoShape.vtx[3]"} {$name + "_lFinger9J2GeoShape.vtx[5]"} {$name + "_lFinger9J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger9J2_Clstr"};
pointConstraint {$name + "_lFinger9J3"} {$name + "_lFinger9J2_Clstr"};

polyCube -n {$name + "_lFinger9J3Geo"};
group -n {$name + "_lFinger9J3GeoG"} {$name + "_lFinger9J3Geo"};
move -r -0.5 0 0 {$name + "_lFinger9J3GeoG.scalePivot"} {$name + "_lFinger9J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lFinger9J3Geo.scalePivot"} {$name + "_lFinger9J3Geo.rotatePivot"} ;
parentConstraint {$name + "_lFinger9J3C"} {$name + "_lFinger9J3GeoG"};
setAttr {$name + "_lFinger9J3Geo.sy"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
setAttr {$name + "_lFinger9J3Geo.sz"} (($lFinger8J1Loc - $lFinger9J1Loc)*.9);
select {$name + "_lFinger9J3GeoShape.vtx[1]"} {$name + "_lFinger9J3GeoShape.vtx[3]"} {$name + "_lFinger9J3GeoShape.vtx[5]"} {$name + "_lFinger9J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lFinger9J3_Clstr"};
pointConstraint {$name + "_lFinger9JTip"} {$name + "_lFinger9J3_Clstr"};

delete -ch {$name + "_lFinger9J1Geo"} {$name + "_lFinger9J2Geo"} {$name + "_lFinger9J3Geo"};
delete {$name + "_lFinger9J1_Clstr"} {$name + "_lFinger9J2_Clstr"} {$name + "_lFinger9J3_Clstr"} ;
parent {$name + "_lFinger9J1GeoG"} {$name + "_lFinger9J2GeoG"} {$name + "_lFinger9J3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lFinger9J1Geo"} {$name + "_lFinger9J2Geo"} {$name + "_lFinger9J3Geo"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J1GeoG.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J2GeoG.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J3GeoG.scale"};
}

if (`objExists ($name + "_lThumbJ1")`)
{
duplicate -n {$name + "_lThumbJ1Geo1"} {$name + "_lHand1Geo"};
select {$name + "_lThumbJ1Geo1"};
PolySelectConvert 1;
select -d {$name + "_lThumbJ1Geo1.f[0]"} ;
doDelete;

$lPalmLoc = `getAttr {$name + "_lPalmJ.tx"}`;
polyPlane -n {$name + "_lThumbJ1Geo2"} -w ($lPalmLoc *.75) -h ($lPalmLoc *.75) -sx 1 -sy 1 -ax 0 1 0 -cuv 2 -ch 1;
pointConstraint {$name + "_lThumbJ2C"} {$name + "_lThumbJ1Geo2"};
aimConstraint -aimVector 0 1 0 -upVector 0 0 1 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_lThumbJ1C"} {$name + "_lThumbJ1C"} {$name + "_lThumbJ1Geo2"}; 
delete {$name + "_lThumbJ1Geo2_pointConstraint1"};
delete {$name + "_lThumbJ1Geo2_aimConstraint1"};

polyUnite -n {$name + "_lThumbJ1Geo"} -ch 0 {$name + "_lThumbJ1Geo2"} {$name + "_lThumbJ1Geo1"};
polyAppend -ch on -s 1 -tx 1 -ed 5 -ed 0 {$name + "_lThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 6 -ed 2 -ed 8 {$name + "_lThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 4 -ed 3 -ed 10 {$name + "_lThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 1 -ed 11 -ed 7 -ed 9 {$name + "_lThumbJ1GeoShape"} ;

group -n {$name + "_lThumbJ1GeoG"} {$name + "_lThumbJ1Geo"};
$lThumbJ1Loc = `xform -q -ws -rp {$name + "_lThumbJ1"}`;
move $lThumbJ1Loc[0] $lThumbJ1Loc[1] $lThumbJ1Loc[2] {$name + "_lThumbJ1GeoG.scalePivot"} {$name + "_lThumbJ1GeoG.rotatePivot"} ;
move $lThumbJ1Loc[0] $lThumbJ1Loc[1] $lThumbJ1Loc[2] {$name + "_lThumbJ1Geo.scalePivot"} {$name + "_lThumbJ1Geo.rotatePivot"} ;
rotate -r 0 -90 0 {$name + "_lThumbJ1GeoG"};
parentConstraint -mo {$name + "_lThumbJ1"} {$name + "_lThumbJ1GeoG"};
rotate -r 0 90 0 {$name + "_lThumbJ1Geo"};
makeIdentity -apply true -r 1 {$name + "_lThumbJ1Geo"};

polyCube -n {$name + "_lThumbJ2Geo"};
group -n {$name + "_lThumbJ2GeoG"} {$name + "_lThumbJ2Geo"};
move -r -0.5 0 0 {$name + "_lThumbJ2GeoG.scalePivot"} {$name + "_lThumbJ2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lThumbJ2Geo.scalePivot"} {$name + "_lThumbJ2Geo.rotatePivot"} ;
parentConstraint {$name + "_lThumbJ2C"} {$name + "_lThumbJ2GeoG"};
setAttr {$name + "_lThumbJ2Geo.sy"} ($lPalmLoc *.75);
setAttr {$name + "_lThumbJ2Geo.sz"} ($lPalmLoc *.75);
select {$name + "_lThumbJ2GeoShape.vtx[1]"} {$name + "_lThumbJ2GeoShape.vtx[3]"} {$name + "_lThumbJ2GeoShape.vtx[5]"} {$name + "_lThumbJ2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lThumbJ2_Clstr"};
pointConstraint {$name + "_lThumbJ3"} {$name + "_lThumbJ2_Clstr"};

polyCube -n {$name + "_lThumbJ3Geo"};
group -n {$name + "_lThumbJ3GeoG"} {$name + "_lThumbJ3Geo"};
move -r -0.5 0 0 {$name + "_lThumbJ3GeoG.scalePivot"} {$name + "_lThumbJ3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_lThumbJ3Geo.scalePivot"} {$name + "_lThumbJ3Geo.rotatePivot"} ;
parentConstraint {$name + "_lThumbJ3C"} {$name + "_lThumbJ3GeoG"};
setAttr {$name + "_lThumbJ3Geo.sy"} ($lPalmLoc *.75);
setAttr {$name + "_lThumbJ3Geo.sz"} ($lPalmLoc *.75);
select {$name + "_lThumbJ3GeoShape.vtx[1]"} {$name + "_lThumbJ3GeoShape.vtx[3]"} {$name + "_lThumbJ3GeoShape.vtx[5]"} {$name + "_lThumbJ3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_lThumbJ3_Clstr"};
pointConstraint {$name + "_lThumbJTip"} {$name + "_lThumbJ3_Clstr"};

delete -ch {$name + "_lThumbJ1Geo"} {$name + "_lThumbJ2Geo"} {$name + "_lThumbJ3Geo"};
delete {$name + "_lThumbJ2_Clstr"} {$name + "_lThumbJ3_Clstr"} ;
parent {$name + "_lThumbJ1GeoG"} {$name + "_lThumbJ2GeoG"} {$name + "_lThumbJ3GeoG"} {$name + "_lFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_lThumbJ1Geo"} {$name + "_lThumbJ2Geo"} {$name + "_lThumbJ3Geo"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ1GeoG.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ2GeoG.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ3GeoG.scale"};
}

/////RIGHT LEG/////
$rKneeLength = `xform -q -t {$name + "_rKneeJ"}`;
$rAnkleLength = `xform -q -t {$name + "_rAnkleJ"}`;
$rLegLength[0] = (($rKneeLength[0] + $rAnkleLength[0]) /2);
//RIGHT UPPER LEG
$rUprLegLength = `getAttr {$name + "_rKneeJ.tx"}`;
$rLwrLegLength = `getAttr {$name + "_rAnkleJ.tx"}`;

//RIGHT UPPER LEG
duplicate -rr -un -n {$name + "_rUprLegGeoG"} baseCylinderG ;
rename {$name + "_rUprLegGeoG|baseCylinder"} {$name + "_rUprLegGeo"};
parent {$name + "_rUprLegGeoG"} {$name + "_scaleGeoG"};

rotate -r -os 180 0 180 {$name + "_rUprLegGeoG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rUprLegGeoG"};
parentConstraint {$name + "_rHipJ"} {$name + "_rUprLegGeoG"};
delete {$name + "_rUprLegGeoG_parentConstraint1"};
setAttr ({$name + "_rUprLegGeoG.scale"}, ($rUprLegLength * -1), ($rLegLength[0] /-20), ($rLegLength[0] /-20));
makeIdentity -apply true -t 1 -s 1 {$name + "_rUprLegGeoG"};
parentConstraint {$name + "_rHipJ"} {$name + "_rUprLegGeoG"};
connectAttr -f {$name + "_rHipJ.scale"} {$name + "_rUprLegGeoG.scale"};


//RIGHT LOWER LEG
duplicate -rr -un -n {$name + "_rLwrLegGeoG"} baseCylinderG ;
rename {$name + "_rLwrLegGeoG|baseCylinder"} {$name + "_rLwrLegGeo"};
parent {$name + "_rLwrLegGeoG"} {$name + "_scaleGeoG"};


//RIGHT LOWER LEG
rotate -r -os 0 0 180 {$name + "_rLwrLegGeoG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLwrLegGeoG"};
parentConstraint {$name + "_rKneeJ"} {$name + "_rLwrLegGeoG"};
delete {$name + "_rLwrLegGeoG_parentConstraint1"};
setAttr ({$name + "_rLwrLegGeoG.scale"}, ($rLwrLegLength * -1), ($rLegLength[0] /-20), ($rLegLength[0] /-20));
makeIdentity -apply true -t 1 -s 1 {$name + "_rLwrLegGeoG"};
parentConstraint {$name + "_rKneeJ"} {$name + "_rLwrLegGeoG"};
connectAttr -f {$name + "_rKneeJ.scale"} {$name + "_rLwrLegGeoG.scale"};

parentConstraint {$name + "_rKneeJ"} {$name + "_rKneeGeoG"};
parentConstraint {$name + "_rHipJ"} {$name + "_rHipGeoG"};


//RIGHT HEEL
parentConstraint {$name + "_rAnkleJ"} {$name + "_rAnkleGeoG"};

polyCube -n {$name + "_rHeelGeo"} -sy 2;
group -n {$name + "_rHeelGeoG"} {$name + "_rHeelGeo"};
move -r -os -wd 0 .5 0  {$name + "_rHeelGeo.vtx[0:11]"} ;
parentConstraint {$name + "_rFootOutTilt"} {$name + "_rFootInTilt"} {$name + "_rFootHeelPivot"} {$name + "_rHeelGeoG"} ;

$rAnkleLoc = `xform -q -ws -t {$name + "_rAnkleJ"}`;
setAttr {$name + "_rHeelGeo.sy"} $rAnkleLoc[1];

select {$name + "_rHeelGeoShape.vtx[0:3]"} ;
newCluster " -envelope 1";
rename {$name + "_rHeelFrClstr"};
pointConstraint -skip y {$name + "_rBallJ"} {$name + "_rHeelFrClstr"};

select {$name + "_rHeelGeoShape.vtx[8:11]"} ;
newCluster " -envelope 1";
rename {$name + "_rHeelBckClstr"};
pointConstraint -skip y {$name + "_rFootHeelPivot"} {$name + "_rHeelBckClstr"};

select {$name + "_rHeelGeoShape.vtx[0]"} {$name + "_rHeelGeoShape.vtx[2]"} ;
newCluster " -envelope 1";
rename {$name + "_rHeelOutClstr"};
pointConstraint -skip y {$name + "_rFootOutTilt"} {$name + "_rHeelOutClstr"};

select {$name + "_rHeelGeoShape.vtx[1]"} {$name + "_rHeelGeoShape.vtx[3]"};
newCluster " -envelope 1";
rename {$name + "_rHeelInClstr"};
pointConstraint -skip y {$name + "_rFootInTilt"} {$name + "_rHeelInClstr"};

spaceLocator -n {$name + "_rFootWidthAim"};
spaceLocator -n {$name + "_rFootWidthTarget"};
parent {$name + "_rFootWidthTarget"} {$name + "_rFootWidthAim"};
pointConstraint {$name + "_rFootInTilt"} {$name + "_rFootWidthAim"};
aimConstraint {$name + "_rFootOutTilt"} {$name + "_rFootWidthAim"};
pointConstraint {$name + "_rFootOutTilt"} {$name + "_rFootWidthTarget"};

$rFootWidth = `getAttr {$name + "_rFootWidthTarget"}.tx`;

$HeelPosition = `xform -q -ws -t {$name + "_rFootHeelPivot"}`;

scale -r ($rFootWidth /2) 1 ($rFootWidth /2) {$name + "_rHeelBckClstr"} ;

select {$name + "_rHeelGeoShape.vtx[4:7]"} ;
newCluster " -envelope 1";
rename {$name + "_rHeelTopClstr"};
pointConstraint {$name + "_rAnkleJ"} {$name + "_rHeelTopClstr"};
scale -r ($rFootWidth /5) 1 ($rFootWidth /5) {$name + "_rHeelTopClstr"} ;

delete {$name + "_rHeelGeoG_parentConstraint1"};
move $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] {$name + "_rHeelGeoG.scalePivot"} {$name + "_rHeelGeoG.rotatePivot"} ;
move $rAnkleLoc[0] $rAnkleLoc[1] $rAnkleLoc[2] {$name + "_rHeelGeo.scalePivot"} {$name + "_rHeelGeo.rotatePivot"} ;
pointConstraint -mo {$name + "_rAnkleJ"} {$name + "_rHeelGeoG"};
orientConstraint -mo {$name + "_rAnkleJ"} {$name + "_rHeelGeoG"};

delete -ch {$name + "_rHeelGeo"};
delete {$name + "_rHeelFrClstr"} {$name + "_rHeelBckClstr"} {$name + "_rHeelOutClstr"} {$name + "_rHeelInClstr"} {$name + "_rHeelTopClstr"} ;
parent {$name + "_rHeelGeoG"} {$name + "_scaleGeoG"};

//RIGHT TOES
polyCube -n {$name + "_rBallGeo"};
move -r 0 -0.5 -0.5 {$name + "_rBallGeo.scalePivot"} {$name + "_rBallGeo.rotatePivot"} ;
rotate 0 90 0;
makeIdentity -apply true -t 1 -r 1 -s 1;
$rBallInputs = `listHistory {$name + "_rBallGeo"}`;

pointConstraint {$name + "_rBallJ"} {$name + "_rBallGeo"};
delete {$name + "_rBallGeo_pointConstraint1"};
orientConstraint -offset -180 0 0 {$name + "_rBallJ"} {$name + "_rBallGeo"};
delete {$name + "_rBallGeo_orientConstraint1"};

$rToeLength = `getAttr {$name + "_rToeJ.tx"}`;
setAttr ({$name + "_rBallGeo.scale"}, $rToeLength, ($rAnkleLoc[1]/2), ($rFootWidth * .8));

lattice -n {$name + "_rBallGeoLattice"} -divisions 2 2 2 -objectCentered true  -ldv 2 2 2 {$name + "_rBallGeo"};

select {$name + "_rBallGeoLatticeLattice.pt[0][0:1][0]"} ;
newCluster " -envelope 1";
rename {$name + "_rBallOutClstr"};
pointConstraint -skip y {$name + "_rFootOutTilt"} {$name + "_rBallOutClstr"};

select {$name + "_rBallGeoLatticeLattice.pt[0][0:1][1]"} ;
newCluster " -envelope 1";
rename {$name + "_rBallInClstr"};
pointConstraint -skip y {$name + "_rFootInTilt"} {$name + "_rBallInClstr"};

select {$name + "_rBallGeoLatticeLattice.pt[1][1][0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_rBallTopClstr"};
spaceLocator -n {$name + "_rBallTopClstrLctr"};
pointConstraint -skip y {$name + "_rBallTopClstr"} {$name + "_rBallTopClstrLctr"};
delete {$name + "_rBallTopClstrLctr_pointConstraint1"};
parent {$name + "_rBallTopClstr"} {$name + "_rBallTopClstrLctr"};
scale 1 0.8 1 {$name + "_rBallTopClstrLctr"};

group -n {$name + "_rBallGeoG"} {$name + "_rBallGeo"};
$rBallJLoc = `xform -q -ws -rp {$name + "_rBallJ"}`;

move -r $rBallJLoc[0] $rBallJLoc[1] $rBallJLoc[2] {$name + "_rBallGeoG.scalePivot"} {$name + "_rBallGeoG.rotatePivot"} ;

//////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////RIGHT TOE GEOMETRY/////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

if (`objExists ($name + "_rToe10J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 10;
delete -ch {$name + "_rBallGeo"};


select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[10]"} {$name + "_rBallGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe10Clstr"};

$rToe08Loc = `xform -q -ws -t {$name + "_rToe08J1C"}`;
$rToe10Loc = `xform -q -ws -t {$name + "_rToe10J1C"}`;
$rToe10Offset[0] = ($rToe08Loc[0] - $rToe10Loc[0]) /-2;
$rToe10Offset[1] = ($rToe08Loc[1] - $rToe10Loc[1]) /-2;
$rToe10Offset[2] = ($rToe08Loc[2] - $rToe10Loc[2]) /-2;

pointConstraint -skip y  -offset $rToe10Offset[0] $rToe10Offset[1] $rToe10Offset[2] {$name + "_rToe10J1C"} {$name + "_rToe10Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe10J1C"} {$name + "_rToe10Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05_6Clstr"};
pointConstraint -skip y {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;

select {$name + "_rBallGeoShape.vtx[6]"} {$name + "_rBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06_7Clstr"};
pointConstraint -skip y {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;

select {$name + "_rBallGeoShape.vtx[7]"} {$name + "_rBallGeoShape.vtx[18]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07_8Clstr"};
pointConstraint -skip y {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ;

select {$name + "_rBallGeoShape.vtx[8]"} {$name + "_rBallGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08_9Clstr"};
pointConstraint -skip y {$name + "_rToe08J1C"} {$name + "_rToe09J1C"} {$name + "_rToe08_9Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe08J1C"} {$name + "_rToe09J1C"} {$name + "_rToe08_9Clstr"} ;

select {$name + "_rBallGeoShape.vtx[9]"} {$name + "_rBallGeoShape.vtx[20]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe09_10Clstr"};
pointConstraint -skip y {$name + "_rToe09J1C"} {$name + "_rToe10J1C"} {$name + "_rToe09_10Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe09J1C"} {$name + "_rToe10J1C"} {$name + "_rToe09_10Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05_6Clstr"} {$name + "_rToe06_7Clstr"} {$name + "_rToe07_8Clstr"} {$name + "_rToe08_9Clstr"} {$name + "_rToe09_10Clstr"} {$name + "_rToe10Clstr"};
}

else if (`objExists ($name + "_rToe09J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 9;
delete -ch {$name + "_rBallGeo"};


select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[9]"} {$name + "_rBallGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe09Clstr"};

$rToe08Loc = `xform -q -ws -t {$name + "_rToe08J1C"}`;
$rToe09Loc = `xform -q -ws -t {$name + "_rToe09J1C"}`;
$rToe09Offset[0] = ($rToe08Loc[0] - $rToe09Loc[0]) /-2;
$rToe09Offset[1] = ($rToe08Loc[1] - $rToe09Loc[1]) /-2;
$rToe09Offset[2] = ($rToe08Loc[2] - $rToe09Loc[2]) /-2;

pointConstraint -skip y -offset $rToe09Offset[0] $rToe09Offset[1] $rToe09Offset[2] {$name + "_rToe09J1C"} {$name + "_rToe09Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe09J1C"} {$name + "_rToe09Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05_6Clstr"};
pointConstraint -skip y {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[6]"} {$name + "_rBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06_7Clstr"};
pointConstraint -skip y {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[7]"} {$name + "_rBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07_8Clstr"};
pointConstraint -skip y {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[8]"} {$name + "_rBallGeoShape.vtx[18]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08_9Clstr"};
pointConstraint -skip y {$name + "_rToe08J1C"} {$name + "_rToe09J1C"} {$name + "_rToe08_9Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe08J1C"} {$name + "_rToe09J1C"} {$name + "_rToe08_9Clstr"} ; 

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05_6Clstr"} {$name + "_rToe06_7Clstr"} {$name + "_rToe07_8Clstr"} {$name + "_rToe08_9Clstr"} {$name + "_rToe09Clstr"};
}

else if (`objExists ($name + "_rToe08J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 8;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[8]"} {$name + "_rBallGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08Clstr"};

$rToe07Loc = `xform -q -ws -t {$name + "_rToe07J1C"}`;
$rToe08Loc = `xform -q -ws -t {$name + "_rToe08J1C"}`;
$rToe08Offset[0] = ($rToe07Loc[0] - $rToe08Loc[0]) /-2;
$rToe08Offset[1] = ($rToe07Loc[1] - $rToe08Loc[1]) /-2;
$rToe08Offset[2] = ($rToe07Loc[2] - $rToe08Loc[2]) /-2;

pointConstraint -skip y -offset $rToe08Offset[0] $rToe08Offset[1] $rToe08Offset[2] {$name + "_rToe08J1C"} {$name + "_rToe08Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe08J1C"} {$name + "_rToe08Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05_6Clstr"};
pointConstraint -skip y {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ; 
select {$name + "_rBallGeoShape.vtx[6]"} {$name + "_rBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06_7Clstr"};
pointConstraint -skip y {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[7]"} {$name + "_rBallGeoShape.vtx[16]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07_8Clstr"};
pointConstraint -skip y {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe07J1C"} {$name + "_rToe08J1C"} {$name + "_rToe07_8Clstr"} ; 

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05_6Clstr"} {$name + "_rToe06_7Clstr"} {$name + "_rToe07_8Clstr"} {$name + "_rToe08Clstr"};
}

else if (`objExists ($name + "_rToe07J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 7;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[7]"} {$name + "_rBallGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07Clstr"};

$rToe06Loc = `xform -q -ws -t {$name + "_rToe06J1C"}`;
$rToe07Loc = `xform -q -ws -t {$name + "_rToe07J1C"}`;
$rToe07Offset[0] = ($rToe06Loc[0] - $rToe07Loc[0]) /-2;
$rToe07Offset[1] = ($rToe06Loc[1] - $rToe07Loc[1]) /-2;
$rToe07Offset[2] = ($rToe06Loc[2] - $rToe07Loc[2]) /-2;

pointConstraint -skip y -offset $rToe07Offset[0] $rToe07Offset[1] $rToe07Offset[2] {$name + "_rToe07J1C"} {$name + "_rToe07Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe07J1C"} {$name + "_rToe07Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05_6Clstr"};
pointConstraint -skip y {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;

select {$name + "_rBallGeoShape.vtx[6]"} {$name + "_rBallGeoShape.vtx[14]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06_7Clstr"};
pointConstraint -skip y {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe06J1C"} {$name + "_rToe07J1C"} {$name + "_rToe06_7Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05_6Clstr"} {$name + "_rToe06_7Clstr"} {$name + "_rToe07Clstr"};
}


else if (`objExists ($name + "_rToe06J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 6;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[6]"} {$name + "_rBallGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06Clstr"};

$rToe05Loc = `xform -q -ws -t {$name + "_rToe05J1C"}`;
$rToe06Loc = `xform -q -ws -t {$name + "_rToe06J1C"}`;
$rToe06Offset[0] = ($rToe05Loc[0] - $rToe06Loc[0]) /-2;
$rToe06Offset[1] = ($rToe05Loc[1] - $rToe06Loc[1]) /-2;
$rToe06Offset[2] = ($rToe05Loc[2] - $rToe06Loc[2]) /-2;

pointConstraint -skip y -offset $rToe06Offset[0] $rToe06Offset[1] $rToe06Offset[2] {$name + "_rToe06J1C"} {$name + "_rToe06Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe06J1C"} {$name + "_rToe06Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ; 

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[12]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05_6Clstr"};
pointConstraint -skip y {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe06J1C"} {$name + "_rToe05_6Clstr"} ; 

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05_6Clstr"} {$name + "_rToe06Clstr"};
}

else if (`objExists ($name + "_rToe05J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 5;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[5]"} {$name + "_rBallGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05Clstr"};

$rToe04Loc = `xform -q -ws -t {$name + "_rToe04J1C"}`;
$rToe05Loc = `xform -q -ws -t {$name + "_rToe05J1C"}`;
$rToe05Offset[0] = ($rToe04Loc[0] - $rToe05Loc[0]) /-2;
$rToe05Offset[1] = ($rToe04Loc[1] - $rToe05Loc[1]) /-2;
$rToe05Offset[2] = ($rToe04Loc[2] - $rToe05Loc[2]) /-2;

pointConstraint -skip y -offset $rToe05Offset[0] $rToe05Offset[1] $rToe05Offset[2] {$name + "_rToe05J1C"} {$name + "_rToe05Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe05J1C"} {$name + "_rToe05Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[10]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04_5Clstr"};
pointConstraint -skip y {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe05J1C"} {$name + "_rToe04_5Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04_5Clstr"}
{$name + "_rToe05Clstr"};
}

else if (`objExists ($name + "_rToe04J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 4;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[4]"} {$name + "_rBallGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04Clstr"};

$rToe03Loc = `xform -q -ws -t {$name + "_rToe03J1C"}`;
$rToe04Loc = `xform -q -ws -t {$name + "_rToe04J1C"}`;
$rToe04Offset[0] = ($rToe03Loc[0] - $rToe04Loc[0]) /-2;
$rToe04Offset[1] = ($rToe03Loc[1] - $rToe04Loc[1]) /-2;
$rToe04Offset[2] = ($rToe03Loc[2] - $rToe04Loc[2]) /-2;

pointConstraint -skip y -offset $rToe04Offset[0] $rToe04Offset[1] $rToe04Offset[2] {$name + "_rToe04J1C"} {$name + "_rToe04Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe04J1C"} {$name + "_rToe04Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[8]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03_4Clstr"};
pointConstraint -skip y {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe04J1C"} {$name + "_rToe03_4Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03_4Clstr"} {$name + "_rToe04Clstr"};
}

else if (`objExists ($name + "_rToe03J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 3;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[4]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[3]"} {$name + "_rBallGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03Clstr"};

$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe03Loc = `xform -q -ws -t {$name + "_rToe03J1C"}`;
$rToe03Offset[0] = ($rToe02Loc[0] - $rToe03Loc[0]) /-2;
$rToe03Offset[1] = ($rToe02Loc[1] - $rToe03Loc[1]) /-2;
$rToe03Offset[2] = ($rToe02Loc[2] - $rToe03Loc[2]) /-2;

pointConstraint -skip y -offset $rToe03Offset[0] $rToe03Offset[1] $rToe03Offset[2] {$name + "_rToe03J1C"} {$name + "_rToe03Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe03J1C"} {$name + "_rToe03Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[6]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02_3Clstr"};
pointConstraint -skip y {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe03J1C"} {$name + "_rToe02_3Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02_3Clstr"} {$name + "_rToe03Clstr"};
}

else if (`objExists ($name + "_rToe02J1")`)
{
setAttr {$rBallInputs[2] + ".subdivisionsWidth"} 2;
delete -ch {$name + "_rBallGeo"};

select {$name + "_rBallGeoShape.vtx[0]"} {$name + "_rBallGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01Clstr"};

$rToe01Loc = `xform -q -ws -t {$name + "_rToe01J1C"}`;
$rToe02Loc = `xform -q -ws -t {$name + "_rToe02J1C"}`;
$rToe01Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /2;
$rToe01Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /2;
$rToe01Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /2;

pointConstraint -skip y -offset $rToe01Offset[0] $rToe01Offset[1] $rToe01Offset[2] {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe01Clstr"};

select {$name + "_rBallGeoShape.vtx[2]"} {$name + "_rBallGeoShape.vtx[5]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02Clstr"};

$rToe02Offset[0] = ($rToe01Loc[0] - $rToe02Loc[0]) /-2;
$rToe02Offset[1] = ($rToe01Loc[1] - $rToe02Loc[1]) /-2;
$rToe02Offset[2] = ($rToe01Loc[2] - $rToe02Loc[2]) /-2;

pointConstraint -skip y -offset $rToe02Offset[0] $rToe02Offset[1] $rToe02Offset[2] {$name + "_rToe02J1C"} {$name + "_rToe02Clstr"};
orientConstraint -offset -180 0 0 {$name + "_rToe02J1C"} {$name + "_rToe02Clstr"};

select {$name + "_rBallGeoShape.vtx[1]"} {$name + "_rBallGeoShape.vtx[4]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01_2Clstr"};
pointConstraint -skip y {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;
orientConstraint -offset -180 0 0 {$name + "_rToe01J1C"} {$name + "_rToe02J1C"} {$name + "_rToe01_2Clstr"} ;

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rToe01Clstr"} {$name + "_rToe01_2Clstr"} {$name + "_rToe02Clstr"};
}

delete -ch {$name + "_rBallGeo"};
delete {$name + "_rFootWidthAim"} {$name + "_rBallOutClstr"} {$name + "_rBallInClstr"} {$name + "_rBallTopClstrLctr"} ;
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rBallGeoG"};
parent {$name + "_rBallGeoG"} {$name + "_scaleGeoG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rBallGeo"};

/////////////////INDIVIDUAL RIGHT TOES/////////////////////
if (`objExists ($name + "_rToe01J1")`)
{
polyCube -n {$name + "_rToe01J1Geo"};
group -n {$name + "_rToe01J1GeoG"} {$name + "_rToe01J1Geo"};
move -r -0.5 0 0 {$name + "_rToe01J1GeoG.scalePivot"} {$name + "_rToe01J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe01J1Geo.scalePivot"} {$name + "_rToe01J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe01J1C"} {$name + "_rToe01J1GeoG"};
$rToe01_Loc = `getAttr {$name + "_rToe01J1.tz"}`;
$rToe02_Loc = `getAttr {$name + "_rToe02J1.tz"}`;
setAttr {$name + "_rToe01J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe01J1GeoG.sz"} (($rToe01_Loc - $rToe02_Loc)*-.9);
select {$name + "_rToe01J1GeoShape.vtx[1]"} {$name + "_rToe01J1GeoShape.vtx[3]"} {$name + "_rToe01J1GeoShape.vtx[5]"} {$name + "_rToe01J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01J1_Clstr"};
pointConstraint {$name + "_rToe01J2"} {$name + "_rToe01J1_Clstr"};

polyCube -n {$name + "_rToe01J2Geo"};
group -n {$name + "_rToe01J2GeoG"} {$name + "_rToe01J2Geo"};
move -r -0.5 0 0 {$name + "_rToe01J2GeoG.scalePivot"} {$name + "_rToe01J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe01J2Geo.scalePivot"} {$name + "_rToe01J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe01J2C"} {$name + "_rToe01J2GeoG"};
setAttr {$name + "_rToe01J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe01J2GeoG.sz"} (($rToe01_Loc - $rToe02_Loc)*-.9);
select {$name + "_rToe01J2GeoShape.vtx[1]"} {$name + "_rToe01J2GeoShape.vtx[3]"} {$name + "_rToe01J2GeoShape.vtx[5]"} {$name + "_rToe01J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe01J2_Clstr"};
pointConstraint {$name + "_rToe01JTip"} {$name + "_rToe01J2_Clstr"};

delete -ch {$name + "_rToe01J1Geo"} {$name + "_rToe01J2Geo"};
parent {$name + "_rToe01J1GeoG"} {$name + "_rToe01J2GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe01J1_Clstr"} {$name + "_rToe01J2_Clstr"};
}


if (`objExists ($name + "_rToe02J1")`)
{
polyCube -n {$name + "_rToe02J1Geo"};
group -n {$name + "_rToe02J1GeoG"} {$name + "_rToe02J1Geo"};
move -r -0.5 0 0 {$name + "_rToe02J1GeoG.scalePivot"} {$name + "_rToe02J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe02J1Geo.scalePivot"} {$name + "_rToe02J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe02J1C"} {$name + "_rToe02J1GeoG"};
$rToe01_Loc = `getAttr {$name + "_rToe01J1.tz"}`;
$rToe02_Loc = `getAttr {$name + "_rToe02J1.tz"}`;
setAttr {$name + "_rToe02J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe02J1GeoG.sz"} (($rToe01_Loc - $rToe02_Loc)*-.9);
select {$name + "_rToe02J1GeoShape.vtx[1]"} {$name + "_rToe02J1GeoShape.vtx[3]"} {$name + "_rToe02J1GeoShape.vtx[5]"} {$name + "_rToe02J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02J1_Clstr"};
pointConstraint {$name + "_rToe02J2"} {$name + "_rToe02J1_Clstr"};

polyCube -n {$name + "_rToe02J2Geo"};
group -n {$name + "_rToe02J2GeoG"} {$name + "_rToe02J2Geo"};
move -r -0.5 0 0 {$name + "_rToe02J2GeoG.scalePivot"} {$name + "_rToe02J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe02J2Geo.scalePivot"} {$name + "_rToe02J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe02J2C"} {$name + "_rToe02J2GeoG"};
setAttr {$name + "_rToe02J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe02J2GeoG.sz"} (($rToe01_Loc - $rToe02_Loc)*-.9);
select {$name + "_rToe02J2GeoShape.vtx[1]"} {$name + "_rToe02J2GeoShape.vtx[3]"} {$name + "_rToe02J2GeoShape.vtx[5]"} {$name + "_rToe02J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02J2_Clstr"};
pointConstraint {$name + "_rToe02J3"} {$name + "_rToe02J2_Clstr"};

polyCube -n {$name + "_rToe02J3Geo"};
group -n {$name + "_rToe02J3GeoG"} {$name + "_rToe02J3Geo"};
move -r -0.5 0 0 {$name + "_rToe02J3GeoG.scalePivot"} {$name + "_rToe02J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe02J3Geo.scalePivot"} {$name + "_rToe02J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe02J3C"} {$name + "_rToe02J3GeoG"};
setAttr {$name + "_rToe02J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe02J3GeoG.sz"} (($rToe01_Loc - $rToe02_Loc)*-.9);
select {$name + "_rToe02J3GeoShape.vtx[1]"} {$name + "_rToe02J3GeoShape.vtx[3]"} {$name + "_rToe02J3GeoShape.vtx[5]"} {$name + "_rToe02J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe02J3_Clstr"};
pointConstraint {$name + "_rToe02JTip"} {$name + "_rToe02J3_Clstr"};

delete -ch {$name + "_rToe02J1Geo"} {$name + "_rToe02J2Geo"} {$name + "_rToe02J3Geo"};
parent {$name + "_rToe02J1GeoG"} {$name + "_rToe02J2GeoG"} {$name + "_rToe02J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe02J1_Clstr"} {$name + "_rToe02J2_Clstr"} {$name + "_rToe02J3_Clstr"};
}

if (`objExists ($name + "_rToe03J1")`)
{
polyCube -n {$name + "_rToe03J1Geo"};
group -n {$name + "_rToe03J1GeoG"} {$name + "_rToe03J1Geo"};
move -r -0.5 0 0 {$name + "_rToe03J1GeoG.scalePivot"} {$name + "_rToe03J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe03J1Geo.scalePivot"} {$name + "_rToe03J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe03J1C"} {$name + "_rToe03J1GeoG"};
$rToe01_Loc = `getAttr {$name + "_rToe01J1.tz"}`;
$rToe02_Loc = `getAttr {$name + "_rToe02J1.tz"}`;
$rToe03_Loc = `getAttr {$name + "_rToe03J1.tz"}`;
setAttr {$name + "_rToe03J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe03J1GeoG.sz"} (($rToe02_Loc - $rToe03_Loc)*-.9);
setAttr {$name + "_rToe02J1GeoG.sz"} (($rToe01_Loc - $rToe03_Loc)*.45);
setAttr {$name + "_rToe02J2GeoG.sz"} (($rToe01_Loc - $rToe03_Loc)*.45);
setAttr {$name + "_rToe02J3GeoG.sz"} (($rToe01_Loc - $rToe03_Loc)*.45);


select {$name + "_rToe03J1GeoShape.vtx[1]"} {$name + "_rToe03J1GeoShape.vtx[3]"} {$name + "_rToe03J1GeoShape.vtx[5]"} {$name + "_rToe03J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03J1_Clstr"};
pointConstraint {$name + "_rToe03J2"} {$name + "_rToe03J1_Clstr"};

polyCube -n {$name + "_rToe03J2Geo"};
group -n {$name + "_rToe03J2GeoG"} {$name + "_rToe03J2Geo"};
move -r -0.5 0 0 {$name + "_rToe03J2GeoG.scalePivot"} {$name + "_rToe03J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe03J2Geo.scalePivot"} {$name + "_rToe03J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe03J2C"} {$name + "_rToe03J2GeoG"};
setAttr {$name + "_rToe03J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe03J2GeoG.sz"} (($rToe02_Loc - $rToe03_Loc)*-.9);
select {$name + "_rToe03J2GeoShape.vtx[1]"} {$name + "_rToe03J2GeoShape.vtx[3]"} {$name + "_rToe03J2GeoShape.vtx[5]"} {$name + "_rToe03J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03J2_Clstr"};
pointConstraint {$name + "_rToe03J3"} {$name + "_rToe03J2_Clstr"};

polyCube -n {$name + "_rToe03J3Geo"};
group -n {$name + "_rToe03J3GeoG"} {$name + "_rToe03J3Geo"};
move -r -0.5 0 0 {$name + "_rToe03J3GeoG.scalePivot"} {$name + "_rToe03J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe03J3Geo.scalePivot"} {$name + "_rToe03J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe03J3C"} {$name + "_rToe03J3GeoG"};
setAttr {$name + "_rToe03J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe03J3GeoG.sz"} (($rToe02_Loc - $rToe03_Loc)*-.9);
select {$name + "_rToe03J3GeoShape.vtx[1]"} {$name + "_rToe03J3GeoShape.vtx[3]"} {$name + "_rToe03J3GeoShape.vtx[5]"} {$name + "_rToe03J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe03J3_Clstr"};
pointConstraint {$name + "_rToe03JTip"} {$name + "_rToe03J3_Clstr"};

delete -ch {$name + "_rToe03J1Geo"} {$name + "_rToe03J2Geo"} {$name + "_rToe03J3Geo"};
parent {$name + "_rToe03J1GeoG"} {$name + "_rToe03J2GeoG"} {$name + "_rToe03J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe03J1_Clstr"} {$name + "_rToe03J2_Clstr"} {$name + "_rToe03J3_Clstr"};
}

if (`objExists ($name + "_rToe04J1")`)
{
polyCube -n {$name + "_rToe04J1Geo"};
group -n {$name + "_rToe04J1GeoG"} {$name + "_rToe04J1Geo"};
move -r -0.5 0 0 {$name + "_rToe04J1GeoG.scalePivot"} {$name + "_rToe04J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe04J1Geo.scalePivot"} {$name + "_rToe04J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe04J1C"} {$name + "_rToe04J1GeoG"};
$rToe02_Loc = `getAttr {$name + "_rToe02J1.tz"}`;
$rToe03_Loc = `getAttr {$name + "_rToe03J1.tz"}`;
$rToe04_Loc = `getAttr {$name + "_rToe04J1.tz"}`;
setAttr {$name + "_rToe04J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe04J1GeoG.sz"} (($rToe03_Loc - $rToe04_Loc)*-.9);
setAttr {$name + "_rToe03J1GeoG.sz"} (($rToe02_Loc - $rToe04_Loc)*.45);
setAttr {$name + "_rToe03J2GeoG.sz"} (($rToe02_Loc - $rToe04_Loc)*.45);
setAttr {$name + "_rToe03J3GeoG.sz"} (($rToe02_Loc - $rToe04_Loc)*.45);

select {$name + "_rToe04J1GeoShape.vtx[1]"} {$name + "_rToe04J1GeoShape.vtx[3]"} {$name + "_rToe04J1GeoShape.vtx[5]"} {$name + "_rToe04J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04J1_Clstr"};
pointConstraint {$name + "_rToe04J2"} {$name + "_rToe04J1_Clstr"};

polyCube -n {$name + "_rToe04J2Geo"};
group -n {$name + "_rToe04J2GeoG"} {$name + "_rToe04J2Geo"};
move -r -0.5 0 0 {$name + "_rToe04J2GeoG.scalePivot"} {$name + "_rToe04J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe04J2Geo.scalePivot"} {$name + "_rToe04J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe04J2C"} {$name + "_rToe04J2GeoG"};
setAttr {$name + "_rToe04J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe04J2GeoG.sz"} (($rToe03_Loc - $rToe04_Loc)*-.9);
select {$name + "_rToe04J2GeoShape.vtx[1]"} {$name + "_rToe04J2GeoShape.vtx[3]"} {$name + "_rToe04J2GeoShape.vtx[5]"} {$name + "_rToe04J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04J2_Clstr"};
pointConstraint {$name + "_rToe04J3"} {$name + "_rToe04J2_Clstr"};

polyCube -n {$name + "_rToe04J3Geo"};
group -n {$name + "_rToe04J3GeoG"} {$name + "_rToe04J3Geo"};
move -r -0.5 0 0 {$name + "_rToe04J3GeoG.scalePivot"} {$name + "_rToe04J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe04J3Geo.scalePivot"} {$name + "_rToe04J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe04J3C"} {$name + "_rToe04J3GeoG"};
setAttr {$name + "_rToe04J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe04J3GeoG.sz"} (($rToe03_Loc - $rToe04_Loc)*-.9);
select {$name + "_rToe04J3GeoShape.vtx[1]"} {$name + "_rToe04J3GeoShape.vtx[3]"} {$name + "_rToe04J3GeoShape.vtx[5]"} {$name + "_rToe04J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe04J3_Clstr"};
pointConstraint {$name + "_rToe04JTip"} {$name + "_rToe04J3_Clstr"};

delete -ch {$name + "_rToe04J1Geo"} {$name + "_rToe04J2Geo"} {$name + "_rToe04J3Geo"};
parent {$name + "_rToe04J1GeoG"} {$name + "_rToe04J2GeoG"} {$name + "_rToe04J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe04J1_Clstr"} {$name + "_rToe04J2_Clstr"} {$name + "_rToe04J3_Clstr"};
}

if (`objExists ($name + "_rToe05J1")`)
{
polyCube -n {$name + "_rToe05J1Geo"};
group -n {$name + "_rToe05J1GeoG"} {$name + "_rToe05J1Geo"};
move -r -0.5 0 0 {$name + "_rToe05J1GeoG.scalePivot"} {$name + "_rToe05J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe05J1Geo.scalePivot"} {$name + "_rToe05J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe05J1C"} {$name + "_rToe05J1GeoG"};
$rToe03_Loc = `getAttr {$name + "_rToe03J1.tz"}`;
$rToe04_Loc = `getAttr {$name + "_rToe04J1.tz"}`;
$rToe05_Loc = `getAttr {$name + "_rToe05J1.tz"}`;
setAttr {$name + "_rToe05J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe05J1GeoG.sz"} (($rToe04_Loc - $rToe05_Loc)*-.9);
setAttr {$name + "_rToe04J1GeoG.sz"} (($rToe03_Loc - $rToe05_Loc)*.45);
setAttr {$name + "_rToe04J2GeoG.sz"} (($rToe03_Loc - $rToe05_Loc)*.45);
setAttr {$name + "_rToe04J3GeoG.sz"} (($rToe03_Loc - $rToe05_Loc)*.45);

select {$name + "_rToe05J1GeoShape.vtx[1]"} {$name + "_rToe05J1GeoShape.vtx[3]"} {$name + "_rToe05J1GeoShape.vtx[5]"} {$name + "_rToe05J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05J1_Clstr"};
pointConstraint {$name + "_rToe05J2"} {$name + "_rToe05J1_Clstr"};

polyCube -n {$name + "_rToe05J2Geo"};
group -n {$name + "_rToe05J2GeoG"} {$name + "_rToe05J2Geo"};
move -r -0.5 0 0 {$name + "_rToe05J2GeoG.scalePivot"} {$name + "_rToe05J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe05J2Geo.scalePivot"} {$name + "_rToe05J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe05J2C"} {$name + "_rToe05J2GeoG"};
setAttr {$name + "_rToe05J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe05J2GeoG.sz"} (($rToe04_Loc - $rToe05_Loc)*-.9);
select {$name + "_rToe05J2GeoShape.vtx[1]"} {$name + "_rToe05J2GeoShape.vtx[3]"} {$name + "_rToe05J2GeoShape.vtx[5]"} {$name + "_rToe05J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05J2_Clstr"};
pointConstraint {$name + "_rToe05J3"} {$name + "_rToe05J2_Clstr"};

polyCube -n {$name + "_rToe05J3Geo"};
group -n {$name + "_rToe05J3GeoG"} {$name + "_rToe05J3Geo"};
move -r -0.5 0 0 {$name + "_rToe05J3GeoG.scalePivot"} {$name + "_rToe05J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe05J3Geo.scalePivot"} {$name + "_rToe05J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe05J3C"} {$name + "_rToe05J3GeoG"};
setAttr {$name + "_rToe05J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe05J3GeoG.sz"} (($rToe04_Loc - $rToe05_Loc)*-.9);
select {$name + "_rToe05J3GeoShape.vtx[1]"} {$name + "_rToe05J3GeoShape.vtx[3]"} {$name + "_rToe05J3GeoShape.vtx[5]"} {$name + "_rToe05J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe05J3_Clstr"};
pointConstraint {$name + "_rToe05JTip"} {$name + "_rToe05J3_Clstr"};

delete -ch {$name + "_rToe05J1Geo"} {$name + "_rToe05J2Geo"} {$name + "_rToe05J3Geo"};
parent {$name + "_rToe05J1GeoG"} {$name + "_rToe05J2GeoG"} {$name + "_rToe05J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe05J1_Clstr"} {$name + "_rToe05J2_Clstr"} {$name + "_rToe05J3_Clstr"};
}

if (`objExists ($name + "_rToe06J1")`)
{
polyCube -n {$name + "_rToe06J1Geo"};
group -n {$name + "_rToe06J1GeoG"} {$name + "_rToe06J1Geo"};
move -r -0.5 0 0 {$name + "_rToe06J1GeoG.scalePivot"} {$name + "_rToe06J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe06J1Geo.scalePivot"} {$name + "_rToe06J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe06J1C"} {$name + "_rToe06J1GeoG"};
$rToe04_Loc = `getAttr {$name + "_rToe04J1.tz"}`;
$rToe05_Loc = `getAttr {$name + "_rToe05J1.tz"}`;
$rToe06_Loc = `getAttr {$name + "_rToe06J1.tz"}`;
setAttr {$name + "_rToe06J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe06J1GeoG.sz"} (($rToe05_Loc - $rToe06_Loc)*-.9);
setAttr {$name + "_rToe05J1GeoG.sz"} (($rToe04_Loc - $rToe06_Loc)*.45);
setAttr {$name + "_rToe05J2GeoG.sz"} (($rToe04_Loc - $rToe06_Loc)*.45);
setAttr {$name + "_rToe05J3GeoG.sz"} (($rToe04_Loc - $rToe06_Loc)*.45);


select {$name + "_rToe06J1GeoShape.vtx[1]"} {$name + "_rToe06J1GeoShape.vtx[3]"} {$name + "_rToe06J1GeoShape.vtx[5]"} {$name + "_rToe06J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06J1_Clstr"};
pointConstraint {$name + "_rToe06J2"} {$name + "_rToe06J1_Clstr"};

polyCube -n {$name + "_rToe06J2Geo"};
group -n {$name + "_rToe06J2GeoG"} {$name + "_rToe06J2Geo"};
move -r -0.5 0 0 {$name + "_rToe06J2GeoG.scalePivot"} {$name + "_rToe06J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe06J2Geo.scalePivot"} {$name + "_rToe06J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe06J2C"} {$name + "_rToe06J2GeoG"};
setAttr {$name + "_rToe06J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe06J2GeoG.sz"} (($rToe05_Loc - $rToe06_Loc)*-.9);
select {$name + "_rToe06J2GeoShape.vtx[1]"} {$name + "_rToe06J2GeoShape.vtx[3]"} {$name + "_rToe06J2GeoShape.vtx[5]"} {$name + "_rToe06J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06J2_Clstr"};
pointConstraint {$name + "_rToe06J3"} {$name + "_rToe06J2_Clstr"};

polyCube -n {$name + "_rToe06J3Geo"};
group -n {$name + "_rToe06J3GeoG"} {$name + "_rToe06J3Geo"};
move -r -0.5 0 0 {$name + "_rToe06J3GeoG.scalePivot"} {$name + "_rToe06J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe06J3Geo.scalePivot"} {$name + "_rToe06J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe06J3C"} {$name + "_rToe06J3GeoG"};
setAttr {$name + "_rToe06J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe06J3GeoG.sz"} (($rToe05_Loc - $rToe06_Loc)*-.9);
select {$name + "_rToe06J3GeoShape.vtx[1]"} {$name + "_rToe06J3GeoShape.vtx[3]"} {$name + "_rToe06J3GeoShape.vtx[5]"} {$name + "_rToe06J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe06J3_Clstr"};
pointConstraint {$name + "_rToe06JTip"} {$name + "_rToe06J3_Clstr"};

delete -ch {$name + "_rToe06J1Geo"} {$name + "_rToe06J2Geo"} {$name + "_rToe06J3Geo"};
parent {$name + "_rToe06J1GeoG"} {$name + "_rToe06J2GeoG"} {$name + "_rToe06J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe06J1_Clstr"} {$name + "_rToe06J2_Clstr"} {$name + "_rToe06J3_Clstr"};
}

if (`objExists ($name + "_rToe07J1")`)
{
polyCube -n {$name + "_rToe07J1Geo"};
group -n {$name + "_rToe07J1GeoG"} {$name + "_rToe07J1Geo"};
move -r -0.5 0 0 {$name + "_rToe07J1GeoG.scalePivot"} {$name + "_rToe07J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe07J1Geo.scalePivot"} {$name + "_rToe07J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe07J1C"} {$name + "_rToe07J1GeoG"};
$rToe04_Loc = `getAttr {$name + "_rToe04J1.tz"}`;
$rToe05_Loc = `getAttr {$name + "_rToe05J1.tz"}`;
$rToe06_Loc = `getAttr {$name + "_rToe06J1.tz"}`;
$rToe07_Loc = `getAttr {$name + "_rToe07J1.tz"}`;
setAttr {$name + "_rToe07J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe07J1GeoG.sz"} (($rToe06_Loc - $rToe07_Loc)*-.9);
setAttr {$name + "_rToe06J1GeoG.sz"} (($rToe05_Loc - $rToe07_Loc)*.45);
setAttr {$name + "_rToe06J2GeoG.sz"} (($rToe05_Loc - $rToe07_Loc)*.45);
setAttr {$name + "_rToe06J3GeoG.sz"} (($rToe05_Loc - $rToe07_Loc)*.45);


select {$name + "_rToe07J1GeoShape.vtx[1]"} {$name + "_rToe07J1GeoShape.vtx[3]"} {$name + "_rToe07J1GeoShape.vtx[5]"} {$name + "_rToe07J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07J1_Clstr"};
pointConstraint {$name + "_rToe07J2"} {$name + "_rToe07J1_Clstr"};

polyCube -n {$name + "_rToe07J2Geo"};
group -n {$name + "_rToe07J2GeoG"} {$name + "_rToe07J2Geo"};
move -r -0.5 0 0 {$name + "_rToe07J2GeoG.scalePivot"} {$name + "_rToe07J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe07J2Geo.scalePivot"} {$name + "_rToe07J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe07J2C"} {$name + "_rToe07J2GeoG"};
setAttr {$name + "_rToe07J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe07J2GeoG.sz"} (($rToe06_Loc - $rToe07_Loc)*-.9);
select {$name + "_rToe07J2GeoShape.vtx[1]"} {$name + "_rToe07J2GeoShape.vtx[3]"} {$name + "_rToe07J2GeoShape.vtx[5]"} {$name + "_rToe07J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07J2_Clstr"};
pointConstraint {$name + "_rToe07J3"} {$name + "_rToe07J2_Clstr"};

polyCube -n {$name + "_rToe07J3Geo"};
group -n {$name + "_rToe07J3GeoG"} {$name + "_rToe07J3Geo"};
move -r -0.5 0 0 {$name + "_rToe07J3GeoG.scalePivot"} {$name + "_rToe07J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe07J3Geo.scalePivot"} {$name + "_rToe07J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe07J3C"} {$name + "_rToe07J3GeoG"};
setAttr {$name + "_rToe07J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe07J3GeoG.sz"} (($rToe06_Loc - $rToe07_Loc)*-.9);
select {$name + "_rToe07J3GeoShape.vtx[1]"} {$name + "_rToe07J3GeoShape.vtx[3]"} {$name + "_rToe07J3GeoShape.vtx[5]"} {$name + "_rToe07J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe07J3_Clstr"};
pointConstraint {$name + "_rToe07JTip"} {$name + "_rToe07J3_Clstr"};

delete -ch {$name + "_rToe07J1Geo"} {$name + "_rToe07J2Geo"} {$name + "_rToe07J3Geo"};
parent {$name + "_rToe07J1GeoG"} {$name + "_rToe07J2GeoG"} {$name + "_rToe07J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe07J1_Clstr"} {$name + "_rToe07J2_Clstr"} {$name + "_rToe07J3_Clstr"};
}

if (`objExists ($name + "_rToe08J1")`)
{
polyCube -n {$name + "_rToe08J1Geo"};
group -n {$name + "_rToe08J1GeoG"} {$name + "_rToe08J1Geo"};
move -r -0.5 0 0 {$name + "_rToe08J1GeoG.scalePivot"} {$name + "_rToe08J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe08J1Geo.scalePivot"} {$name + "_rToe08J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe08J1C"} {$name + "_rToe08J1GeoG"};
$rToe05_Loc = `getAttr {$name + "_rToe05J1.tz"}`;
$rToe06_Loc = `getAttr {$name + "_rToe06J1.tz"}`;
$rToe07_Loc = `getAttr {$name + "_rToe07J1.tz"}`;
$rToe08_Loc = `getAttr {$name + "_rToe08J1.tz"}`;
setAttr {$name + "_rToe08J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe08J1GeoG.sz"} (($rToe07_Loc - $rToe08_Loc)*-.9);
setAttr {$name + "_rToe07J1GeoG.sz"} (($rToe06_Loc - $rToe08_Loc)*.45);
setAttr {$name + "_rToe07J2GeoG.sz"} (($rToe06_Loc - $rToe08_Loc)*.45);
setAttr {$name + "_rToe07J3GeoG.sz"} (($rToe06_Loc - $rToe08_Loc)*.45);

select {$name + "_rToe08J1GeoShape.vtx[1]"} {$name + "_rToe08J1GeoShape.vtx[3]"} {$name + "_rToe08J1GeoShape.vtx[5]"} {$name + "_rToe08J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08J1_Clstr"};
pointConstraint {$name + "_rToe08J2"} {$name + "_rToe08J1_Clstr"};

polyCube -n {$name + "_rToe08J2Geo"};
group -n {$name + "_rToe08J2GeoG"} {$name + "_rToe08J2Geo"};
move -r -0.5 0 0 {$name + "_rToe08J2GeoG.scalePivot"} {$name + "_rToe08J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe08J2Geo.scalePivot"} {$name + "_rToe08J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe08J2C"} {$name + "_rToe08J2GeoG"};
setAttr {$name + "_rToe08J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe08J2GeoG.sz"} (($rToe07_Loc - $rToe08_Loc)*-.9);
select {$name + "_rToe08J2GeoShape.vtx[1]"} {$name + "_rToe08J2GeoShape.vtx[3]"} {$name + "_rToe08J2GeoShape.vtx[5]"} {$name + "_rToe08J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08J2_Clstr"};
pointConstraint {$name + "_rToe08J3"} {$name + "_rToe08J2_Clstr"};

polyCube -n {$name + "_rToe08J3Geo"};
group -n {$name + "_rToe08J3GeoG"} {$name + "_rToe08J3Geo"};
move -r -0.5 0 0 {$name + "_rToe08J3GeoG.scalePivot"} {$name + "_rToe08J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe08J3Geo.scalePivot"} {$name + "_rToe08J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe08J3C"} {$name + "_rToe08J3GeoG"};
setAttr {$name + "_rToe08J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe08J3GeoG.sz"} (($rToe07_Loc - $rToe08_Loc)*-.9);
select {$name + "_rToe08J3GeoShape.vtx[1]"} {$name + "_rToe08J3GeoShape.vtx[3]"} {$name + "_rToe08J3GeoShape.vtx[5]"} {$name + "_rToe08J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe08J3_Clstr"};
pointConstraint {$name + "_rToe08JTip"} {$name + "_rToe08J3_Clstr"};

delete -ch {$name + "_rToe08J1Geo"} {$name + "_rToe08J2Geo"} {$name + "_rToe08J3Geo"};
parent {$name + "_rToe08J1GeoG"} {$name + "_rToe08J2GeoG"} {$name + "_rToe08J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe08J1_Clstr"} {$name + "_rToe08J2_Clstr"} {$name + "_rToe08J3_Clstr"};
}

if (`objExists ($name + "_rToe09J1")`)
{
polyCube -n {$name + "_rToe09J1Geo"};
group -n {$name + "_rToe09J1GeoG"} {$name + "_rToe09J1Geo"};
move -r -0.5 0 0 {$name + "_rToe09J1GeoG.scalePivot"} {$name + "_rToe09J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe09J1Geo.scalePivot"} {$name + "_rToe09J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe09J1C"} {$name + "_rToe09J1GeoG"};
$rToe06_Loc = `getAttr {$name + "_rToe06J1.tz"}`;
$rToe07_Loc = `getAttr {$name + "_rToe07J1.tz"}`;
$rToe08_Loc = `getAttr {$name + "_rToe08J1.tz"}`;
$rToe09_Loc = `getAttr {$name + "_rToe09J1.tz"}`;
setAttr {$name + "_rToe09J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe09J1GeoG.sz"} (($rToe08_Loc - $rToe09_Loc)*-.9);
setAttr {$name + "_rToe08J1GeoG.sz"} (($rToe07_Loc - $rToe09_Loc)*.45);
setAttr {$name + "_rToe08J2GeoG.sz"} (($rToe07_Loc - $rToe09_Loc)*.45);
setAttr {$name + "_rToe08J3GeoG.sz"} (($rToe07_Loc - $rToe09_Loc)*.45);

select {$name + "_rToe09J1GeoShape.vtx[1]"} {$name + "_rToe09J1GeoShape.vtx[3]"} {$name + "_rToe09J1GeoShape.vtx[5]"} {$name + "_rToe09J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe09J1_Clstr"};
pointConstraint {$name + "_rToe09J2"} {$name + "_rToe09J1_Clstr"};

polyCube -n {$name + "_rToe09J2Geo"};
group -n {$name + "_rToe09J2GeoG"} {$name + "_rToe09J2Geo"};
move -r -0.5 0 0 {$name + "_rToe09J2GeoG.scalePivot"} {$name + "_rToe09J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe09J2Geo.scalePivot"} {$name + "_rToe09J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe09J2C"} {$name + "_rToe09J2GeoG"};
setAttr {$name + "_rToe09J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe09J2GeoG.sz"} (($rToe08_Loc - $rToe09_Loc)*-.9);
select {$name + "_rToe09J2GeoShape.vtx[1]"} {$name + "_rToe09J2GeoShape.vtx[3]"} {$name + "_rToe09J2GeoShape.vtx[5]"} {$name + "_rToe09J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe09J2_Clstr"};
pointConstraint {$name + "_rToe09J3"} {$name + "_rToe09J2_Clstr"};

polyCube -n {$name + "_rToe09J3Geo"};
group -n {$name + "_rToe09J3GeoG"} {$name + "_rToe09J3Geo"};
move -r -0.5 0 0 {$name + "_rToe09J3GeoG.scalePivot"} {$name + "_rToe09J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe09J3Geo.scalePivot"} {$name + "_rToe09J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe09J3C"} {$name + "_rToe09J3GeoG"};
setAttr {$name + "_rToe09J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe09J3GeoG.sz"} (($rToe08_Loc - $rToe09_Loc)*-.9);
select {$name + "_rToe09J3GeoShape.vtx[1]"} {$name + "_rToe09J3GeoShape.vtx[3]"} {$name + "_rToe09J3GeoShape.vtx[5]"} {$name + "_rToe09J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe09J3_Clstr"};
pointConstraint {$name + "_rToe09JTip"} {$name + "_rToe09J3_Clstr"};

delete -ch {$name + "_rToe09J1Geo"} {$name + "_rToe09J2Geo"} {$name + "_rToe09J3Geo"};
parent {$name + "_rToe09J1GeoG"} {$name + "_rToe09J2GeoG"} {$name + "_rToe09J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe09J1_Clstr"} {$name + "_rToe09J2_Clstr"} {$name + "_rToe09J3_Clstr"};
}

if (`objExists ($name + "_rToe10J1")`)
{
polyCube -n {$name + "_rToe10J1Geo"};
group -n {$name + "_rToe10J1GeoG"} {$name + "_rToe10J1Geo"};
move -r -0.5 0 0 {$name + "_rToe10J1GeoG.scalePivot"} {$name + "_rToe10J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe10J1Geo.scalePivot"} {$name + "_rToe10J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe10J1C"} {$name + "_rToe10J1GeoG"};
$rToe07_Loc = `getAttr {$name + "_rToe07J1.tz"}`;
$rToe08_Loc = `getAttr {$name + "_rToe08J1.tz"}`;
$rToe09_Loc = `getAttr {$name + "_rToe09J1.tz"}`;
$rToe10_Loc = `getAttr {$name + "_rToe10J1.tz"}`;
setAttr {$name + "_rToe10J1GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe10J1GeoG.sz"} (($rToe09_Loc - $rToe10_Loc)*-.9);
setAttr {$name + "_rToe09J1GeoG.sz"} (($rToe08_Loc - $rToe10_Loc)*.45);
setAttr {$name + "_rToe09J2GeoG.sz"} (($rToe08_Loc - $rToe10_Loc)*.45);
setAttr {$name + "_rToe09J3GeoG.sz"} (($rToe08_Loc - $rToe10_Loc)*.45);

select {$name + "_rToe10J1GeoShape.vtx[1]"} {$name + "_rToe10J1GeoShape.vtx[3]"} {$name + "_rToe10J1GeoShape.vtx[5]"} {$name + "_rToe10J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe10J1_Clstr"};
pointConstraint {$name + "_rToe10J2"} {$name + "_rToe10J1_Clstr"};

polyCube -n {$name + "_rToe10J2Geo"};
group -n {$name + "_rToe10J2GeoG"} {$name + "_rToe10J2Geo"};
move -r -0.5 0 0 {$name + "_rToe10J2GeoG.scalePivot"} {$name + "_rToe10J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe10J2Geo.scalePivot"} {$name + "_rToe10J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe10J2C"} {$name + "_rToe10J2GeoG"};
setAttr {$name + "_rToe10J2GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe10J2GeoG.sz"} (($rToe09_Loc - $rToe10_Loc)*-.9);
select {$name + "_rToe10J2GeoShape.vtx[1]"} {$name + "_rToe10J2GeoShape.vtx[3]"} {$name + "_rToe10J2GeoShape.vtx[5]"} {$name + "_rToe10J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe10J2_Clstr"};
pointConstraint {$name + "_rToe10J3"} {$name + "_rToe10J2_Clstr"};

polyCube -n {$name + "_rToe10J3Geo"};
group -n {$name + "_rToe10J3GeoG"} {$name + "_rToe10J3Geo"};
move -r -0.5 0 0 {$name + "_rToe10J3GeoG.scalePivot"} {$name + "_rToe10J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rToe10J3Geo.scalePivot"} {$name + "_rToe10J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rToe10J3C"} {$name + "_rToe10J3GeoG"};
setAttr {$name + "_rToe10J3GeoG.sy"} ($rLegLength[0] /-12);
setAttr {$name + "_rToe10J3GeoG.sz"} (($rToe09_Loc - $rToe10_Loc)*-.9);
select {$name + "_rToe10J3GeoShape.vtx[1]"} {$name + "_rToe10J3GeoShape.vtx[3]"} {$name + "_rToe10J3GeoShape.vtx[5]"} {$name + "_rToe10J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rToe10J3_Clstr"};
pointConstraint {$name + "_rToe10JTip"} {$name + "_rToe10J3_Clstr"};

delete -ch {$name + "_rToe10J1Geo"} {$name + "_rToe10J2Geo"} {$name + "_rToe10J3Geo"};
parent {$name + "_rToe10J1GeoG"} {$name + "_rToe10J2GeoG"} {$name + "_rToe10J3GeoG"} {$name + "_scaleGeoG"};
delete {$name + "_rToe10J1_Clstr"} {$name + "_rToe10J2_Clstr"} {$name + "_rToe10J3_Clstr"};
}

//////MOVE BOTTOM TOE POINTS TO GRID/////////
if (`objExists ($name + "_rToe01J1")`)
{
move -y 0 0 0 {$name + "_rToe01J1GeoShape.vtx[2:5]"} {$name + "_rToe01J2GeoShape.vtx[2:5]"} ;
}
if (`objExists ($name + "_rToe02J1")`)
{
move -y 0 0 0 {$name + "_rToe02J1GeoShape.vtx[2:5]"} {$name + "_rToe02J2GeoShape.vtx[2:5]"} {$name + "_rToe02J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe03J1")`)
{
move -y 0 0 0 {$name + "_rToe03J1GeoShape.vtx[2:5]"} {$name + "_rToe03J2GeoShape.vtx[2:5]"} {$name + "_rToe03J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe04J1")`)
{
move -y 0 0 0 {$name + "_rToe04J1GeoShape.vtx[2:5]"} {$name + "_rToe04J2GeoShape.vtx[2:5]"} {$name + "_rToe04J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe05J1")`)
{
move -y 0 0 0 {$name + "_rToe05J1GeoShape.vtx[2:5]"} {$name + "_rToe05J2GeoShape.vtx[2:5]"} {$name + "_rToe05J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe06J1")`)
{
move -y 0 0 0 {$name + "_rToe06J1GeoShape.vtx[2:5]"} {$name + "_rToe06J2GeoShape.vtx[2:5]"} {$name + "_rToe06J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe07J1")`)
{
move -y 0 0 0 {$name + "_rToe07J1GeoShape.vtx[2:5]"} {$name + "_rToe07J2GeoShape.vtx[2:5]"} {$name + "_rToe07J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe08J1")`)
{
move -y 0 0 0 {$name + "_rToe08J1GeoShape.vtx[2:5]"} {$name + "_rToe08J2GeoShape.vtx[2:5]"} {$name + "_rToe08J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe09J1")`)
{
move -y 0 0 0 {$name + "_rToe09J1GeoShape.vtx[2:5]"} {$name + "_rToe09J2GeoShape.vtx[2:5]"} {$name + "_rToe09J3GeoShape.vtx[2:5]"};
}
if (`objExists ($name + "_rToe10J1")`)
{
move -y 0 0 0 {$name + "_rToe10J1GeoShape.vtx[2:5]"} {$name + "_rToe10J2GeoShape.vtx[2:5]"} {$name + "_rToe10J3GeoShape.vtx[2:5]"};
}

//////////////////////////////////////////////////////////////////////////////
////////////////////////////////RIGHT ARM//////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//RIGHT UPPER ARM
$rElbowLength = `xform -q -t {$name + "_rElbowJ"}`;
$rWristLength = `xform -q -t {$name + "_rWristJDummy"}`;
$rArmLength[0] = (($rElbowLength[0] + $rWristLength[0]) /2);
$rUprArmLength = `getAttr {$name + "_rElbowJ.tx"}`;
$rLwrArmLength = `getAttr {$name + "_rWristJDummy.tx"}`;

rotate -r 0 0 180 {$name + "_rUprArmGeoG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rUprArmGeoG"};
parentConstraint {$name + "_rShoulderJ"} {$name + "_rUprArmGeoG"};
delete {$name + "_rUprArmGeoG_parentConstraint1"};
setAttr ({$name + "_rUprArmGeoG.scale"}, ($rUprArmLength * -1), ($rArmLength[0] /-12), ($rArmLength[0] /-12));
makeIdentity -apply true -t 1 -s 1 {$name + "_rUprArmGeoG"};
parentConstraint {$name + "_rShoulderJ"} {$name + "_rUprArmGeoG"};
connectAttr -f {$name + "_rShoulderJ.scale"} {$name + "_rUprArmGeoG.scale"};

//RIGHT LOWER ARM
rotate -r 0 0 180 {$name + "_rLwrArmGeoG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rLwrArmGeoG"};
parentConstraint {$name + "_rElbowJ"} {$name + "_rLwrArmGeoG"};
delete {$name + "_rLwrArmGeoG_parentConstraint1"};
setAttr ({$name + "_rLwrArmGeoG.scale"}, ($rLwrArmLength * -1), ($rArmLength[0] /-12), ($rArmLength[0] /-12));
makeIdentity -apply true -t 1 -s 1 {$name + "_rLwrArmGeoG"};
parentConstraint {$name + "_rElbowJ"} {$name + "_rLwrArmGeoG"};
connectAttr -f {$name + "_rElbowJ.scale"} {$name + "_rLwrArmGeoG.scale"};

parentConstraint {$name + "_rElbowJ"} {$name + "_rElbowGeoG"};
parentConstraint {$name + "_rShoulderJ"} {$name + "_rShoulderGeoG"};

/////////////////////////////////////////////////////////////////////////////////
//////////////////////////////RIGHT HAND GEOMETRY/////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

polyCube -n {$name + "_rHandGeo"};
group -n {$name + "_rHandGeoG"} {$name + "_rHandGeo"};
move -r -0.5 0 0 {$name + "_rHandGeoG.scalePivot"} {$name + "_rHandGeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rHandGeo.scalePivot"} {$name + "_rHandGeo.rotatePivot"} ;
setAttr {$name + "_rHandGeoG.sy"} ($rArmLength[0] /8);
setAttr {$name + "_rHandGeoG.sz"} ($rArmLength[0] /3.5);
makeIdentity -apply true -s 1 {$name + "_rHandGeoG"};
parentConstraint {$name + "_rWristJ"} {$name + "_rHandGeoG"};
parent {$name + "_rHandGeoG"} {$name + "_scaleGeoG"};
connectAttr -f {$name + "_rWristJG1.scale"} {$name + "_rHandGeoG.scale"};

$rHandInputs = `listHistory {$name + "_rHandGeo"}`;

if (`objExists ($name + "_rFinger9J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 9;

select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[21]"} {$name + "_rHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing9Clstr"};

$rFinger8Loc = `xform -q -ws -t {$name + "_rFinger8J1C"}`;
$rFinger9Loc = `xform -q -ws -t {$name + "_rFinger9J1C"}`;
$rFinger9Offset[0] = ($rFinger8Loc[0] - $rFinger9Loc[0]) /-2;
$rFinger9Offset[1] = ($rFinger8Loc[1] - $rFinger9Loc[1]) /-2;
$rFinger9Offset[2] = ($rFinger8Loc[2] - $rFinger9Loc[2]) /-2;

pointConstraint -offset $rFinger9Offset[0] $rFinger9Offset[1] $rFinger9Offset[2] {$name + "_rFinger9J1C"} {$name + "_rFing9Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[39]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[37]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[35]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[33]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4_5Clstr"};
pointConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger5J1C"} {$name + "_rFing4_5Clstr"} ;

select {$name + "_rHandGeoShape.vtx[13]"} {$name + "_rHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing5_6Clstr"};
pointConstraint {$name + "_rFinger5J1C"} {$name + "_rFinger6J1C"} {$name + "_rFing5_6Clstr"} ;

select {$name + "_rHandGeoShape.vtx[15]"} {$name + "_rHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing6_7Clstr"};
pointConstraint {$name + "_rFinger6J1C"} {$name + "_rFinger7J1C"} {$name + "_rFing6_7Clstr"} ;

select {$name + "_rHandGeoShape.vtx[17]"} {$name + "_rHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing7_8Clstr"};
pointConstraint {$name + "_rFinger7J1C"} {$name + "_rFinger8J1C"} {$name + "_rFing7_8Clstr"} ;

select {$name + "_rHandGeoShape.vtx[19]"} {$name + "_rHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing8_9Clstr"};
pointConstraint {$name + "_rFinger8J1C"} {$name + "_rFinger9J1C"} {$name + "_rFing8_9Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4_5Clstr"} {$name + "_rFing5_6Clstr"}
{$name + "_rFing6_7Clstr"} {$name + "_rFing7_8Clstr"} {$name + "_rFing8_9Clstr"} {$name + "_rFing9Clstr"};
}

else if (`objExists ($name + "_rFinger8J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 8;

select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[19]"} {$name + "_rHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing8Clstr"};

$rFinger7Loc = `xform -q -ws -t {$name + "_rFinger7J1C"}`;
$rFinger8Loc = `xform -q -ws -t {$name + "_rFinger8J1C"}`;
$rFinger8Offset[0] = ($rFinger7Loc[0] - $rFinger8Loc[0]) /-2;
$rFinger8Offset[1] = ($rFinger7Loc[1] - $rFinger8Loc[1]) /-2;
$rFinger8Offset[2] = ($rFinger7Loc[2] - $rFinger8Loc[2]) /-2;

pointConstraint -offset $rFinger8Offset[0] $rFinger8Offset[1] $rFinger8Offset[2] {$name + "_rFinger8J1C"} {$name + "_rFing8Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[35]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[33]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4_5Clstr"};
pointConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger5J1C"} {$name + "_rFing4_5Clstr"} ;

select {$name + "_rHandGeoShape.vtx[13]"} {$name + "_rHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing5_6Clstr"};
pointConstraint {$name + "_rFinger5J1C"} {$name + "_rFinger6J1C"} {$name + "_rFing5_6Clstr"} ;

select {$name + "_rHandGeoShape.vtx[15]"} {$name + "_rHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing6_7Clstr"};
pointConstraint {$name + "_rFinger6J1C"} {$name + "_rFinger7J1C"} {$name + "_rFing6_7Clstr"} ;

select {$name + "_rHandGeoShape.vtx[17]"} {$name + "_rHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing7_8Clstr"};
pointConstraint {$name + "_rFinger7J1C"} {$name + "_rFinger8J1C"} {$name + "_rFing7_8Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4_5Clstr"} {$name + "_rFing5_6Clstr"}
{$name + "_rFing6_7Clstr"} {$name + "_rFing7_8Clstr"} {$name + "_rFing8Clstr"};
}

else if (`objExists ($name + "_rFinger7J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 7;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[17]"} {$name + "_rHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing7Clstr"};

$rFinger6Loc = `xform -q -ws -t {$name + "_rFinger6J1C"}`;
$rFinger7Loc = `xform -q -ws -t {$name + "_rFinger7J1C"}`;
$rFinger7Offset[0] = ($rFinger6Loc[0] - $rFinger7Loc[0]) /-2;
$rFinger7Offset[1] = ($rFinger6Loc[1] - $rFinger7Loc[1]) /-2;
$rFinger7Offset[2] = ($rFinger6Loc[2] - $rFinger7Loc[2]) /-2;

pointConstraint -offset $rFinger7Offset[0] $rFinger7Offset[1] $rFinger7Offset[2] {$name + "_rFinger7J1C"} {$name + "_rFing7Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[31]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[29]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4_5Clstr"};
pointConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger5J1C"} {$name + "_rFing4_5Clstr"} ;

select {$name + "_rHandGeoShape.vtx[13]"} {$name + "_rHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing5_6Clstr"};
pointConstraint {$name + "_rFinger5J1C"} {$name + "_rFinger6J1C"} {$name + "_rFing5_6Clstr"} ;

select {$name + "_rHandGeoShape.vtx[15]"} {$name + "_rHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing6_7Clstr"};
pointConstraint {$name + "_rFinger6J1C"} {$name + "_rFinger7J1C"} {$name + "_rFing6_7Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4_5Clstr"} {$name + "_rFing5_6Clstr"}
{$name + "_rFing6_7Clstr"} {$name + "_rFing7Clstr"};
}

else if (`objExists ($name + "_rFinger6J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 6;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[15]"} {$name + "_rHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing6Clstr"};

$rFinger5Loc = `xform -q -ws -t {$name + "_rFinger5J1C"}`;
$rFinger6Loc = `xform -q -ws -t {$name + "_rFinger6J1C"}`;
$rFinger6Offset[0] = ($rFinger5Loc[0] - $rFinger6Loc[0]) /-2;
$rFinger6Offset[1] = ($rFinger5Loc[1] - $rFinger6Loc[1]) /-2;
$rFinger6Offset[2] = ($rFinger5Loc[2] - $rFinger6Loc[2]) /-2;

pointConstraint -offset $rFinger6Offset[0] $rFinger6Offset[1] $rFinger6Offset[2] {$name + "_rFinger6J1C"} {$name + "_rFing6Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[27]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[25]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4_5Clstr"};
pointConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger5J1C"} {$name + "_rFing4_5Clstr"} ;

select {$name + "_rHandGeoShape.vtx[13]"} {$name + "_rHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing5_6Clstr"};
pointConstraint {$name + "_rFinger5J1C"} {$name + "_rFinger6J1C"} {$name + "_rFing5_6Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4_5Clstr"} {$name + "_rFing5_6Clstr"}
{$name + "_rFing6Clstr"};
}

else if (`objExists ($name + "_rFinger5J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 5;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[13]"} {$name + "_rHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing5Clstr"};

$rFinger4Loc = `xform -q -ws -t {$name + "_rFinger4J1C"}`;
$rFinger5Loc = `xform -q -ws -t {$name + "_rFinger5J1C"}`;
$rFinger5Offset[0] = ($rFinger4Loc[0] - $rFinger5Loc[0]) /-2;
$rFinger5Offset[1] = ($rFinger4Loc[1] - $rFinger5Loc[1]) /-2;
$rFinger5Offset[2] = ($rFinger4Loc[2] - $rFinger5Loc[2]) /-2;

pointConstraint -offset $rFinger5Offset[0] $rFinger5Offset[1] $rFinger5Offset[2] {$name + "_rFinger5J1C"} {$name + "_rFing5Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[23]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[21]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4_5Clstr"};
pointConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger5J1C"} {$name + "_rFing4_5Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4_5Clstr"} {$name + "_rFing5Clstr"};
}

else if (`objExists ($name + "_rFinger4J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 4;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[11]"} {$name + "_rHandGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing4Clstr"};

$rFinger3Loc = `xform -q -ws -t {$name + "_rFinger3J1C"}`;
$rFinger4Loc = `xform -q -ws -t {$name + "_rFinger4J1C"}`;
$rFinger4Offset[0] = ($rFinger3Loc[0] - $rFinger4Loc[0]) /-2;
$rFinger4Offset[1] = ($rFinger3Loc[1] - $rFinger4Loc[1]) /-2;
$rFinger4Offset[2] = ($rFinger3Loc[2] - $rFinger4Loc[2]) /-2;

pointConstraint -offset $rFinger4Offset[0] $rFinger4Offset[1] $rFinger4Offset[2] {$name + "_rFinger4J1C"} {$name + "_rFing4Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[19]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[17]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3_4Clstr"};
pointConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger4J1C"} {$name + "_rFing3_4Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3_4Clstr"} {$name + "_rFing4Clstr"};
}

else if (`objExists ($name + "_rFinger3J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 3;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[9]"} {$name + "_rHandGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing3Clstr"};

$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger3Loc = `xform -q -ws -t {$name + "_rFinger3J1C"}`;
$rFinger3Offset[0] = ($rFinger2Loc[0] - $rFinger3Loc[0]) /-2;
$rFinger3Offset[1] = ($rFinger2Loc[1] - $rFinger3Loc[1]) /-2;
$rFinger3Offset[2] = ($rFinger2Loc[2] - $rFinger3Loc[2]) /-2;

pointConstraint -offset $rFinger3Offset[0] $rFinger3Offset[1] $rFinger3Offset[2] {$name + "_rFinger3J1C"} {$name + "_rFing3Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[15]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[13]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2_3Clstr"};
pointConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger3J1C"} {$name + "_rFing2_3Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2_3Clstr"} {$name + "_rFing3Clstr"};
}

else if (`objExists ($name + "_rFinger2J1")`)
{
setAttr {$rHandInputs[2] + ".subdivisionsDepth"} 2;
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};

$rFinger1Loc = `xform -q -ws -t {$name + "_rFinger1J1C"}`;
$rFinger2Loc = `xform -q -ws -t {$name + "_rFinger2J1C"}`;
$rFinger1Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /2;
$rFinger1Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /2;
$rFinger1Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /2;

pointConstraint -offset $rFinger1Offset[0] $rFinger1Offset[1] $rFinger1Offset[2] {$name + "_rFinger1J1C"} {$name + "_rFing1Clstr"};

select {$name + "_rHandGeoShape.vtx[7]"} {$name + "_rHandGeoShape.vtx[9]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing2Clstr"};

$rFinger2Offset[0] = ($rFinger1Loc[0] - $rFinger2Loc[0]) /-2;
$rFinger2Offset[1] = ($rFinger1Loc[1] - $rFinger2Loc[1]) /-2;
$rFinger2Offset[2] = ($rFinger1Loc[2] - $rFinger2Loc[2]) /-2;

pointConstraint -offset $rFinger2Offset[0] $rFinger2Offset[1] $rFinger2Offset[2] {$name + "_rFinger2J1C"} {$name + "_rFing2Clstr"};

select {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[11]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1_2Clstr"};
pointConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger2J1C"} {$name + "_rFing1_2Clstr"} ;

delete -ch {$name + "_rHandGeo"};
delete {$name + "_rFing1_2Clstr"} {$name + "_rFing2Clstr"};
}

else
{
select {$name + "_rHandGeoShape.vtx[1]"} {$name + "_rHandGeoShape.vtx[3]"} {$name + "_rHandGeoShape.vtx[5]"} {$name + "_rHandGeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFing1Clstr"};
pointConstraint {$name + "_rFinger1J1"} {$name + "_rFing1Clstr"};
}

delete -ch {$name + "_rHandGeo"};

select {$name + "_rHandGeo.e[0]"} ;
PolyConvertToRingAndSplit;
select {$name + "_rHandGeo.e[0]"} ;
polySelectEdges edgeRing;
PolySelectConvert 1;
$rHandFaces = `ls -sl`;
hilite {$name + "_rHandGeo"} ;
polyChipOff  -kft 1 -dup 0 -off 0 $rHandFaces;
polySeparate -rs 1 -ch 1 {$name + "_rHandGeoShape"};
delete -ch {$name + "_rHandGeo"};
select {$name + "_rHandGeo"};
pickWalk -d down;
rename {$name + "_rHand1GeoBase"};
pickWalk -d right;
rename {$name + "_rHand2GeoTemp"};
polySeparate;
pickWalk -d up;
pickWalk -d down;
rename {$name + "_rHand2Geo"};
pickWalk -d right;
rename {$name + "_rHand1GeoEnd"};
polyUnite -ch 1 {$name + "_rHand1GeoBase"} {$name + "_rHand1GeoEnd"};
rename {$name + "_rHand1Geo"};
polyMergeVertex  -d 0.01 -am 1 {$name + "_rHand1Geo"};
polyCloseBorder {$name + "_rHand1Geo"};
group -n {$name + "_rHand1GeoG"} {$name + "_rHand1Geo"};
polyCloseBorder {$name + "_rHand2Geo"};
group -n {$name + "_rHand2GeoG"} {$name + "_rHand2Geo"};
parent {$name + "_rHand1GeoG"} {$name + "_rHand2GeoG"} {$name + "_scaleGeoG"};
delete -ch {$name + "_rHand1GeoG"} {$name + "_rHand2Geo"};
parent {$name + "_rHand1GeoG"} {$name + "_rHand2GeoG"} {$name + "_rHandGeoG"};

$rWristLoc = `xform -q -ws -rp {$name + "_rWristJ"}`;
$rHandLoc = `xform -q -ws -rp {$name + "_rPalmJ"}`;
move $rWristLoc[0] $rWristLoc[1] $rWristLoc[2] {$name + "_rHand1Geo.scalePivot"} {$name + "_rHand1Geo.rotatePivot"} {$name + "_rHand1GeoG.scalePivot"} {$name + "_rHand1GeoG.rotatePivot"};
move $rHandLoc[0] $rHandLoc[1] $rHandLoc[2] {$name + "_rHand2Geo.scalePivot"} {$name + "_rHand2Geo.rotatePivot"} {$name + "_rHand2GeoG.scalePivot"} {$name + "_rHand2GeoG.rotatePivot"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rHand1GeoG"} {$name + "_rHand2GeoG"};

parentConstraint -mo {$name + "_rPalmJ"} {$name + "_rHand2GeoG"};

/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////RIGHT FINGER GEOMETRY/////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
polyCube -n {$name + "_rFinger1J1Geo"};
group -n {$name + "_rFinger1J1GeoG"} {$name + "_rFinger1J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger1J1GeoG.scalePivot"} {$name + "_rFinger1J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger1J1Geo.scalePivot"} {$name + "_rFinger1J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger1J1C"} {$name + "_rFinger1J1GeoG"};
setAttr {$name + "_rFinger1J1Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_rFinger1J1Geo.sz"} ($lArmLength[0] /8);
select {$name + "_rFinger1J1GeoShape.vtx[1]"} {$name + "_rFinger1J1GeoShape.vtx[3]"} {$name + "_rFinger1J1GeoShape.vtx[5]"} {$name + "_rFinger1J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger1J1_Clstr"};
pointConstraint {$name + "_rFinger1J2"} {$name + "_rFinger1J1_Clstr"};

polyCube -n {$name + "_rFinger1J2Geo"};
group -n {$name + "_rFinger1J2GeoG"} {$name + "_rFinger1J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger1J2GeoG.scalePivot"} {$name + "_rFinger1J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger1J2Geo.scalePivot"} {$name + "_rFinger1J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger1J2C"} {$name + "_rFinger1J2GeoG"};
setAttr {$name + "_rFinger1J2Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_rFinger1J2Geo.sz"} ($lArmLength[0] /8);
select {$name + "_rFinger1J2GeoShape.vtx[1]"} {$name + "_rFinger1J2GeoShape.vtx[3]"} {$name + "_rFinger1J2GeoShape.vtx[5]"} {$name + "_rFinger1J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger1J2_Clstr"};
pointConstraint {$name + "_rFinger1J3"} {$name + "_rFinger1J2_Clstr"};

polyCube -n {$name + "_rFinger1J3Geo"};
group -n {$name + "_rFinger1J3GeoG"} {$name + "_rFinger1J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger1J3GeoG.scalePivot"} {$name + "_rFinger1J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger1J3Geo.scalePivot"} {$name + "_rFinger1J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger1J3C"} {$name + "_rFinger1J3GeoG"};
setAttr {$name + "_rFinger1J3Geo.sy"} ($lArmLength[0] /8);
setAttr {$name + "_rFinger1J3Geo.sz"} ($lArmLength[0] /8);
select {$name + "_rFinger1J3GeoShape.vtx[1]"} {$name + "_rFinger1J3GeoShape.vtx[3]"} {$name + "_rFinger1J3GeoShape.vtx[5]"} {$name + "_rFinger1J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger1J3_Clstr"};
pointConstraint {$name + "_rFinger1JTip"} {$name + "_rFinger1J3_Clstr"};

if (`objExists ($name + "_rFinger2J1")`)
{
$rFinger1J1Loc = `getAttr {$name + "_rFinger1J1.tz"}`;
$rFinger2J1Loc = `getAttr {$name + "_rFinger2J1.tz"}`;
setAttr {$name + "_rFinger1J1Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger1J1Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger1J2Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger1J2Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger1J3Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger1J3Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
}

delete -ch {$name + "_rFinger1J1Geo"} {$name + "_rFinger1J2Geo"} {$name + "_rFinger1J3Geo"};
delete {$name + "_rFing1Clstr"} {$name + "_rFinger1J1_Clstr"} {$name + "_rFinger1J2_Clstr"} {$name + "_rFinger1J3_Clstr"} ;
group -em -n {$name + "_rFingersGeoG"};
parent {$name + "_rFingersGeoG"} {$name + "_scaleGeoG"};
parentConstraint {$name + "_lWristJ"} {$name + "_rFingersGeoG"};
connectAttr -f {$name + "_rWristJG1.scale"} {$name + "_rFingersGeoG.scale"};
parent {$name + "_rFinger1J1GeoG"} {$name + "_rFinger1J2GeoG"} {$name + "_rFinger1J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger1J1Geo"} {$name + "_rFinger1J2Geo"} {$name + "_rFinger1J3Geo"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J1GeoG.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J2GeoG.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J3GeoG.scale"};

if (`objExists ($name + "_rFinger2J1")`)
{
polyCube -n {$name + "_rFinger2J1Geo"};
group -n {$name + "_rFinger2J1GeoG"} {$name + "_rFinger2J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger2J1GeoG.scalePivot"} {$name + "_rFinger2J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger2J1Geo.scalePivot"} {$name + "_rFinger2J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger2J1C"} {$name + "_rFinger2J1GeoG"};
$rFinger1J1Loc = `getAttr {$name + "_rFinger1J1.tz"}`;
$rFinger2J1Loc = `getAttr {$name + "_rFinger2J1.tz"}`;
setAttr {$name + "_rFinger2J1Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger2J1Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
select {$name + "_rFinger2J1GeoShape.vtx[1]"} {$name + "_rFinger2J1GeoShape.vtx[3]"} {$name + "_rFinger2J1GeoShape.vtx[5]"} {$name + "_rFinger2J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger2J1_Clstr"};
pointConstraint {$name + "_rFinger2J2"} {$name + "_rFinger2J1_Clstr"};

polyCube -n {$name + "_rFinger2J2Geo"};
group -n {$name + "_rFinger2J2GeoG"} {$name + "_rFinger2J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger2J2GeoG.scalePivot"} {$name + "_rFinger2J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger2J2Geo.scalePivot"} {$name + "_rFinger2J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger2J2C"} {$name + "_rFinger2J2GeoG"};
setAttr {$name + "_rFinger2J2Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger2J2Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
select {$name + "_rFinger2J2GeoShape.vtx[1]"} {$name + "_rFinger2J2GeoShape.vtx[3]"} {$name + "_rFinger2J2GeoShape.vtx[5]"} {$name + "_rFinger2J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger2J2_Clstr"};
pointConstraint {$name + "_rFinger2J3"} {$name + "_rFinger2J2_Clstr"};

polyCube -n {$name + "_rFinger2J3Geo"};
group -n {$name + "_rFinger2J3GeoG"} {$name + "_rFinger2J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger2J3GeoG.scalePivot"} {$name + "_rFinger2J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger2J3Geo.scalePivot"} {$name + "_rFinger2J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger2J3C"} {$name + "_rFinger2J3GeoG"};
setAttr {$name + "_rFinger2J3Geo.sy"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
setAttr {$name + "_rFinger2J3Geo.sz"} (($rFinger1J1Loc - $rFinger2J1Loc)*.9);
select {$name + "_rFinger2J3GeoShape.vtx[1]"} {$name + "_rFinger2J3GeoShape.vtx[3]"} {$name + "_rFinger2J3GeoShape.vtx[5]"} {$name + "_rFinger2J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger2J3_Clstr"};
pointConstraint {$name + "_rFinger2JTip"} {$name + "_rFinger2J3_Clstr"};

delete -ch {$name + "_rFinger2J1Geo"} {$name + "_rFinger2J2Geo"} {$name + "_rFinger2J3Geo"};
delete {$name + "_rFinger2J1_Clstr"} {$name + "_rFinger2J2_Clstr"} {$name + "_rFinger2J3_Clstr"} ;
parent {$name + "_rFinger2J1GeoG"} {$name + "_rFinger2J2GeoG"} {$name + "_rFinger2J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger2J1Geo"} {$name + "_rFinger2J2Geo"} {$name + "_rFinger2J3Geo"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J1GeoG.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J2GeoG.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger3J1")`)
{
polyCube -n {$name + "_rFinger3J1Geo"};
group -n {$name + "_rFinger3J1GeoG"} {$name + "_rFinger3J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger3J1GeoG.scalePivot"} {$name + "_rFinger3J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger3J1Geo.scalePivot"} {$name + "_rFinger3J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger3J1C"} {$name + "_rFinger3J1GeoG"};
$rFinger2J1Loc = `getAttr {$name + "_rFinger2J1.tz"}`;
$rFinger3J1Loc = `getAttr {$name + "_rFinger3J1.tz"}`;
setAttr {$name + "_rFinger3J1Geo.sy"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
setAttr {$name + "_rFinger3J1Geo.sz"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
select {$name + "_rFinger3J1GeoShape.vtx[1]"} {$name + "_rFinger3J1GeoShape.vtx[3]"} {$name + "_rFinger3J1GeoShape.vtx[5]"} {$name + "_rFinger3J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger3J1_Clstr"};
pointConstraint {$name + "_rFinger3J2"} {$name + "_rFinger3J1_Clstr"};

polyCube -n {$name + "_rFinger3J2Geo"};
group -n {$name + "_rFinger3J2GeoG"} {$name + "_rFinger3J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger3J2GeoG.scalePivot"} {$name + "_rFinger3J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger3J2Geo.scalePivot"} {$name + "_rFinger3J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger3J2C"} {$name + "_rFinger3J2GeoG"};
setAttr {$name + "_rFinger3J2Geo.sy"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
setAttr {$name + "_rFinger3J2Geo.sz"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
select {$name + "_rFinger3J2GeoShape.vtx[1]"} {$name + "_rFinger3J2GeoShape.vtx[3]"} {$name + "_rFinger3J2GeoShape.vtx[5]"} {$name + "_rFinger3J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger3J2_Clstr"};
pointConstraint {$name + "_rFinger3J3"} {$name + "_rFinger3J2_Clstr"};

polyCube -n {$name + "_rFinger3J3Geo"};
group -n {$name + "_rFinger3J3GeoG"} {$name + "_rFinger3J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger3J3GeoG.scalePivot"} {$name + "_rFinger3J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger3J3Geo.scalePivot"} {$name + "_rFinger3J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger3J3C"} {$name + "_rFinger3J3GeoG"};
setAttr {$name + "_rFinger3J3Geo.sy"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
setAttr {$name + "_rFinger3J3Geo.sz"} (($rFinger2J1Loc - $rFinger3J1Loc)*.9);
select {$name + "_rFinger3J3GeoShape.vtx[1]"} {$name + "_rFinger3J3GeoShape.vtx[3]"} {$name + "_rFinger3J3GeoShape.vtx[5]"} {$name + "_rFinger3J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger3J3_Clstr"};
pointConstraint {$name + "_rFinger3JTip"} {$name + "_rFinger3J3_Clstr"};

delete -ch {$name + "_rFinger3J1Geo"} {$name + "_rFinger3J2Geo"} {$name + "_rFinger3J3Geo"};
delete {$name + "_rFinger3J1_Clstr"} {$name + "_rFinger3J2_Clstr"} {$name + "_rFinger3J3_Clstr"} ;
parent {$name + "_rFinger3J1GeoG"} {$name + "_rFinger3J2GeoG"} {$name + "_rFinger3J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger3J1Geo"} {$name + "_rFinger3J2Geo"} {$name + "_rFinger3J3Geo"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J1GeoG.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J2GeoG.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger4J1")`)
{
polyCube -n {$name + "_rFinger4J1Geo"};
group -n {$name + "_rFinger4J1GeoG"} {$name + "_rFinger4J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger4J1GeoG.scalePivot"} {$name + "_rFinger4J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger4J1Geo.scalePivot"} {$name + "_rFinger4J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger4J1C"} {$name + "_rFinger4J1GeoG"};
$rFinger3J1Loc = `getAttr {$name + "_rFinger3J1.tz"}`;
$rFinger4J1Loc = `getAttr {$name + "_rFinger4J1.tz"}`;
setAttr {$name + "_rFinger4J1Geo.sy"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
setAttr {$name + "_rFinger4J1Geo.sz"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
select {$name + "_rFinger4J1GeoShape.vtx[1]"} {$name + "_rFinger4J1GeoShape.vtx[3]"} {$name + "_rFinger4J1GeoShape.vtx[5]"} {$name + "_rFinger4J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger4J1_Clstr"};
pointConstraint {$name + "_rFinger4J2"} {$name + "_rFinger4J1_Clstr"};

polyCube -n {$name + "_rFinger4J2Geo"};
group -n {$name + "_rFinger4J2GeoG"} {$name + "_rFinger4J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger4J2GeoG.scalePivot"} {$name + "_rFinger4J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger4J2Geo.scalePivot"} {$name + "_rFinger4J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger4J2C"} {$name + "_rFinger4J2GeoG"};
setAttr {$name + "_rFinger4J2Geo.sy"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
setAttr {$name + "_rFinger4J2Geo.sz"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
select {$name + "_rFinger4J2GeoShape.vtx[1]"} {$name + "_rFinger4J2GeoShape.vtx[3]"} {$name + "_rFinger4J2GeoShape.vtx[5]"} {$name + "_rFinger4J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger4J2_Clstr"};
pointConstraint {$name + "_rFinger4J3"} {$name + "_rFinger4J2_Clstr"};

polyCube -n {$name + "_rFinger4J3Geo"};
group -n {$name + "_rFinger4J3GeoG"} {$name + "_rFinger4J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger4J3GeoG.scalePivot"} {$name + "_rFinger4J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger4J3Geo.scalePivot"} {$name + "_rFinger4J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger4J3C"} {$name + "_rFinger4J3GeoG"};
setAttr {$name + "_rFinger4J3Geo.sy"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
setAttr {$name + "_rFinger4J3Geo.sz"} (($rFinger3J1Loc - $rFinger4J1Loc)*.9);
select {$name + "_rFinger4J3GeoShape.vtx[1]"} {$name + "_rFinger4J3GeoShape.vtx[3]"} {$name + "_rFinger4J3GeoShape.vtx[5]"} {$name + "_rFinger4J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger4J3_Clstr"};
pointConstraint {$name + "_rFinger4JTip"} {$name + "_rFinger4J3_Clstr"};

delete -ch {$name + "_rFinger4J1Geo"} {$name + "_rFinger4J2Geo"} {$name + "_rFinger4J3Geo"};
delete {$name + "_rFinger4J1_Clstr"} {$name + "_rFinger4J2_Clstr"} {$name + "_rFinger4J3_Clstr"} ;
parent {$name + "_rFinger4J1GeoG"} {$name + "_rFinger4J2GeoG"} {$name + "_rFinger4J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger4J1Geo"} {$name + "_rFinger4J2Geo"} {$name + "_rFinger4J3Geo"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J1GeoG.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J2GeoG.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger5J1")`)
{
polyCube -n {$name + "_rFinger5J1Geo"};
group -n {$name + "_rFinger5J1GeoG"} {$name + "_rFinger5J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger5J1GeoG.scalePivot"} {$name + "_rFinger5J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger5J1Geo.scalePivot"} {$name + "_rFinger5J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger5J1C"} {$name + "_rFinger5J1GeoG"};
$rFinger4J1Loc = `getAttr {$name + "_rFinger4J1.tz"}`;
$rFinger5J1Loc = `getAttr {$name + "_rFinger5J1.tz"}`;
setAttr {$name + "_rFinger5J1Geo.sy"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
setAttr {$name + "_rFinger5J1Geo.sz"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
select {$name + "_rFinger5J1GeoShape.vtx[1]"} {$name + "_rFinger5J1GeoShape.vtx[3]"} {$name + "_rFinger5J1GeoShape.vtx[5]"} {$name + "_rFinger5J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger5J1_Clstr"};
pointConstraint {$name + "_rFinger5J2"} {$name + "_rFinger5J1_Clstr"};

polyCube -n {$name + "_rFinger5J2Geo"};
group -n {$name + "_rFinger5J2GeoG"} {$name + "_rFinger5J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger5J2GeoG.scalePivot"} {$name + "_rFinger5J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger5J2Geo.scalePivot"} {$name + "_rFinger5J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger5J2C"} {$name + "_rFinger5J2GeoG"};
setAttr {$name + "_rFinger5J2Geo.sy"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
setAttr {$name + "_rFinger5J2Geo.sz"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
select {$name + "_rFinger5J2GeoShape.vtx[1]"} {$name + "_rFinger5J2GeoShape.vtx[3]"} {$name + "_rFinger5J2GeoShape.vtx[5]"} {$name + "_rFinger5J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger5J2_Clstr"};
pointConstraint {$name + "_rFinger5J3"} {$name + "_rFinger5J2_Clstr"};

polyCube -n {$name + "_rFinger5J3Geo"};
group -n {$name + "_rFinger5J3GeoG"} {$name + "_rFinger5J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger5J3GeoG.scalePivot"} {$name + "_rFinger5J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger5J3Geo.scalePivot"} {$name + "_rFinger5J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger5J3C"} {$name + "_rFinger5J3GeoG"};
setAttr {$name + "_rFinger5J3Geo.sy"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
setAttr {$name + "_rFinger5J3Geo.sz"} (($rFinger4J1Loc - $rFinger5J1Loc)*.9);
select {$name + "_rFinger5J3GeoShape.vtx[1]"} {$name + "_rFinger5J3GeoShape.vtx[3]"} {$name + "_rFinger5J3GeoShape.vtx[5]"} {$name + "_rFinger5J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger5J3_Clstr"};
pointConstraint {$name + "_rFinger5JTip"} {$name + "_rFinger5J3_Clstr"};

delete -ch {$name + "_rFinger5J1Geo"} {$name + "_rFinger5J2Geo"} {$name + "_rFinger5J3Geo"};
delete {$name + "_rFinger5J1_Clstr"} {$name + "_rFinger5J2_Clstr"} {$name + "_rFinger5J3_Clstr"} ;
parent {$name + "_rFinger5J1GeoG"} {$name + "_rFinger5J2GeoG"} {$name + "_rFinger5J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger5J1Geo"} {$name + "_rFinger5J2Geo"} {$name + "_rFinger5J3Geo"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J1GeoG.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J2GeoG.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger6J1")`)
{
polyCube -n {$name + "_rFinger6J1Geo"};
group -n {$name + "_rFinger6J1GeoG"} {$name + "_rFinger6J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger6J1GeoG.scalePivot"} {$name + "_rFinger6J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger6J1Geo.scalePivot"} {$name + "_rFinger6J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger6J1C"} {$name + "_rFinger6J1GeoG"};
$rFinger5J1Loc = `getAttr {$name + "_rFinger5J1.tz"}`;
$rFinger6J1Loc = `getAttr {$name + "_rFinger6J1.tz"}`;
setAttr {$name + "_rFinger6J1Geo.sy"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
setAttr {$name + "_rFinger6J1Geo.sz"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
select {$name + "_rFinger6J1GeoShape.vtx[1]"} {$name + "_rFinger6J1GeoShape.vtx[3]"} {$name + "_rFinger6J1GeoShape.vtx[5]"} {$name + "_rFinger6J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger6J1_Clstr"};
pointConstraint {$name + "_rFinger6J2"} {$name + "_rFinger6J1_Clstr"};

polyCube -n {$name + "_rFinger6J2Geo"};
group -n {$name + "_rFinger6J2GeoG"} {$name + "_rFinger6J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger6J2GeoG.scalePivot"} {$name + "_rFinger6J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger6J2Geo.scalePivot"} {$name + "_rFinger6J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger6J2C"} {$name + "_rFinger6J2GeoG"};
$rFinger7J1Loc = `getAttr {$name + "_rFinger7J1.tz"}`;
setAttr {$name + "_rFinger6J2Geo.sy"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
setAttr {$name + "_rFinger6J2Geo.sz"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
select {$name + "_rFinger6J2GeoShape.vtx[1]"} {$name + "_rFinger6J2GeoShape.vtx[3]"} {$name + "_rFinger6J2GeoShape.vtx[5]"} {$name + "_rFinger6J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger6J2_Clstr"};
pointConstraint {$name + "_rFinger6J3"} {$name + "_rFinger6J2_Clstr"};

polyCube -n {$name + "_rFinger6J3Geo"};
group -n {$name + "_rFinger6J3GeoG"} {$name + "_rFinger6J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger6J3GeoG.scalePivot"} {$name + "_rFinger6J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger6J3Geo.scalePivot"} {$name + "_rFinger6J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger6J3C"} {$name + "_rFinger6J3GeoG"};
setAttr {$name + "_rFinger6J3Geo.sy"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
setAttr {$name + "_rFinger6J3Geo.sz"} (($rFinger5J1Loc - $rFinger6J1Loc)*.9);
select {$name + "_rFinger6J3GeoShape.vtx[1]"} {$name + "_rFinger6J3GeoShape.vtx[3]"} {$name + "_rFinger6J3GeoShape.vtx[5]"} {$name + "_rFinger6J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger6J3_Clstr"};
pointConstraint {$name + "_rFinger6JTip"} {$name + "_rFinger6J3_Clstr"};

delete -ch {$name + "_rFinger6J1Geo"} {$name + "_rFinger6J2Geo"} {$name + "_rFinger6J3Geo"};
delete {$name + "_rFinger6J1_Clstr"} {$name + "_rFinger6J2_Clstr"} {$name + "_rFinger6J3_Clstr"} ;
parent {$name + "_rFinger6J1GeoG"} {$name + "_rFinger6J2GeoG"} {$name + "_rFinger6J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger6J1Geo"} {$name + "_rFinger6J2Geo"} {$name + "_rFinger6J3Geo"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J1GeoG.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J2GeoG.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger7J1")`)
{
polyCube -n {$name + "_rFinger7J1Geo"};
group -n {$name + "_rFinger7J1GeoG"} {$name + "_rFinger7J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger7J1GeoG.scalePivot"} {$name + "_rFinger7J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger7J1Geo.scalePivot"} {$name + "_rFinger7J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger7J1C"} {$name + "_rFinger7J1GeoG"};
$rFinger6J1Loc = `getAttr {$name + "_rFinger6J1.tz"}`;
$rFinger7J1Loc = `getAttr {$name + "_rFinger7J1.tz"}`;
setAttr {$name + "_rFinger7J1Geo.sy"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
setAttr {$name + "_rFinger7J1Geo.sz"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
select {$name + "_rFinger7J1GeoShape.vtx[1]"} {$name + "_rFinger7J1GeoShape.vtx[3]"} {$name + "_rFinger7J1GeoShape.vtx[5]"} {$name + "_rFinger7J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger7J1_Clstr"};
pointConstraint {$name + "_rFinger7J2"} {$name + "_rFinger7J1_Clstr"};

polyCube -n {$name + "_rFinger7J2Geo"};
group -n {$name + "_rFinger7J2GeoG"} {$name + "_rFinger7J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger7J2GeoG.scalePivot"} {$name + "_rFinger7J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger7J2Geo.scalePivot"} {$name + "_rFinger7J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger7J2C"} {$name + "_rFinger7J2GeoG"};
setAttr {$name + "_rFinger7J2Geo.sy"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
setAttr {$name + "_rFinger7J2Geo.sz"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
select {$name + "_rFinger7J2GeoShape.vtx[1]"} {$name + "_rFinger7J2GeoShape.vtx[3]"} {$name + "_rFinger7J2GeoShape.vtx[5]"} {$name + "_rFinger7J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger7J2_Clstr"};
pointConstraint {$name + "_rFinger7J3"} {$name + "_rFinger7J2_Clstr"};

polyCube -n {$name + "_rFinger7J3Geo"};
group -n {$name + "_rFinger7J3GeoG"} {$name + "_rFinger7J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger7J3GeoG.scalePivot"} {$name + "_rFinger7J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger7J3Geo.scalePivot"} {$name + "_rFinger7J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger7J3C"} {$name + "_rFinger7J3GeoG"};
setAttr {$name + "_rFinger7J3Geo.sy"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
setAttr {$name + "_rFinger7J3Geo.sz"} (($rFinger6J1Loc - $rFinger7J1Loc)*.9);
select {$name + "_rFinger7J3GeoShape.vtx[1]"} {$name + "_rFinger7J3GeoShape.vtx[3]"} {$name + "_rFinger7J3GeoShape.vtx[5]"} {$name + "_rFinger7J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger7J3_Clstr"};
pointConstraint {$name + "_rFinger7JTip"} {$name + "_rFinger7J3_Clstr"};

delete -ch {$name + "_rFinger7J1Geo"} {$name + "_rFinger7J2Geo"} {$name + "_rFinger7J3Geo"};
delete {$name + "_rFinger7J1_Clstr"} {$name + "_rFinger7J2_Clstr"} {$name + "_rFinger7J3_Clstr"} ;
parent {$name + "_rFinger7J1GeoG"} {$name + "_rFinger7J2GeoG"} {$name + "_rFinger7J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger7J1Geo"} {$name + "_rFinger7J2Geo"} {$name + "_rFinger7J3Geo"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J1GeoG.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J2GeoG.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger8J1")`)
{
polyCube -n {$name + "_rFinger8J1Geo"};
group -n {$name + "_rFinger8J1GeoG"} {$name + "_rFinger8J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger8J1GeoG.scalePivot"} {$name + "_rFinger8J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger8J1Geo.scalePivot"} {$name + "_rFinger8J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger8J1C"} {$name + "_rFinger8J1GeoG"};
$rFinger7J1Loc = `getAttr {$name + "_rFinger7J1.tz"}`;
$rFinger8J1Loc = `getAttr {$name + "_rFinger8J1.tz"}`;
setAttr {$name + "_rFinger8J1Geo.sy"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
setAttr {$name + "_rFinger8J1Geo.sz"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
select {$name + "_rFinger8J1GeoShape.vtx[1]"} {$name + "_rFinger8J1GeoShape.vtx[3]"} {$name + "_rFinger8J1GeoShape.vtx[5]"} {$name + "_rFinger8J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger8J1_Clstr"};
pointConstraint {$name + "_rFinger8J2"} {$name + "_rFinger8J1_Clstr"};

polyCube -n {$name + "_rFinger8J2Geo"};
group -n {$name + "_rFinger8J2GeoG"} {$name + "_rFinger8J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger8J2GeoG.scalePivot"} {$name + "_rFinger8J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger8J2Geo.scalePivot"} {$name + "_rFinger8J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger8J2C"} {$name + "_rFinger8J2GeoG"};
setAttr {$name + "_rFinger8J2Geo.sy"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
setAttr {$name + "_rFinger8J2Geo.sz"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
select {$name + "_rFinger8J2GeoShape.vtx[1]"} {$name + "_rFinger8J2GeoShape.vtx[3]"} {$name + "_rFinger8J2GeoShape.vtx[5]"} {$name + "_rFinger8J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger8J2_Clstr"};
pointConstraint {$name + "_rFinger8J3"} {$name + "_rFinger8J2_Clstr"};

polyCube -n {$name + "_rFinger8J3Geo"};
group -n {$name + "_rFinger8J3GeoG"} {$name + "_rFinger8J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger8J3GeoG.scalePivot"} {$name + "_rFinger8J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger8J3Geo.scalePivot"} {$name + "_rFinger8J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger8J3C"} {$name + "_rFinger8J3GeoG"};
setAttr {$name + "_rFinger8J3Geo.sy"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
setAttr {$name + "_rFinger8J3Geo.sz"} (($rFinger7J1Loc - $rFinger8J1Loc)*.9);
select {$name + "_rFinger8J3GeoShape.vtx[1]"} {$name + "_rFinger8J3GeoShape.vtx[3]"} {$name + "_rFinger8J3GeoShape.vtx[5]"} {$name + "_rFinger8J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger8J3_Clstr"};
pointConstraint {$name + "_rFinger8JTip"} {$name + "_rFinger8J3_Clstr"};

delete -ch {$name + "_rFinger8J1Geo"} {$name + "_rFinger8J2Geo"} {$name + "_rFinger8J3Geo"};
delete {$name + "_rFinger8J1_Clstr"} {$name + "_rFinger8J2_Clstr"} {$name + "_rFinger8J3_Clstr"} ;
parent {$name + "_rFinger8J1GeoG"} {$name + "_rFinger8J2GeoG"} {$name + "_rFinger8J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger8J1Geo"} {$name + "_rFinger8J2Geo"} {$name + "_rFinger8J3Geo"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J1GeoG.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J2GeoG.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J3GeoG.scale"};
}

if (`objExists ($name + "_rFinger9J1")`)
{
polyCube -n {$name + "_rFinger9J1Geo"};
group -n {$name + "_rFinger9J1GeoG"} {$name + "_rFinger9J1Geo"};
move -r -0.5 0 0 {$name + "_rFinger9J1GeoG.scalePivot"} {$name + "_rFinger9J1GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger9J1Geo.scalePivot"} {$name + "_rFinger9J1Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger9J1C"} {$name + "_rFinger9J1GeoG"};
$rFinger8J1Loc = `getAttr {$name + "_rFinger8J1.tz"}`;
$rFinger9J1Loc = `getAttr {$name + "_rFinger9J1.tz"}`;
setAttr {$name + "_rFinger9J1Geo.sy"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
setAttr {$name + "_rFinger9J1Geo.sz"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
select {$name + "_rFinger9J1GeoShape.vtx[1]"} {$name + "_rFinger9J1GeoShape.vtx[3]"} {$name + "_rFinger9J1GeoShape.vtx[5]"} {$name + "_rFinger9J1GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger9J1_Clstr"};
pointConstraint {$name + "_rFinger9J2"} {$name + "_rFinger9J1_Clstr"};

polyCube -n {$name + "_rFinger9J2Geo"};
group -n {$name + "_rFinger9J2GeoG"} {$name + "_rFinger9J2Geo"};
move -r -0.5 0 0 {$name + "_rFinger9J2GeoG.scalePivot"} {$name + "_rFinger9J2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger9J2Geo.scalePivot"} {$name + "_rFinger9J2Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger9J2C"} {$name + "_rFinger9J2GeoG"};
setAttr {$name + "_rFinger9J2Geo.sy"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
setAttr {$name + "_rFinger9J2Geo.sz"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
select {$name + "_rFinger9J2GeoShape.vtx[1]"} {$name + "_rFinger9J2GeoShape.vtx[3]"} {$name + "_rFinger9J2GeoShape.vtx[5]"} {$name + "_rFinger9J2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger9J2_Clstr"};
pointConstraint {$name + "_rFinger9J3"} {$name + "_rFinger9J2_Clstr"};

polyCube -n {$name + "_rFinger9J3Geo"};
group -n {$name + "_rFinger9J3GeoG"} {$name + "_rFinger9J3Geo"};
move -r -0.5 0 0 {$name + "_rFinger9J3GeoG.scalePivot"} {$name + "_rFinger9J3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rFinger9J3Geo.scalePivot"} {$name + "_rFinger9J3Geo.rotatePivot"} ;
parentConstraint {$name + "_rFinger9J3C"} {$name + "_rFinger9J3GeoG"};
setAttr {$name + "_rFinger9J3Geo.sy"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
setAttr {$name + "_rFinger9J3Geo.sz"} (($rFinger8J1Loc - $rFinger9J1Loc)*.9);
select {$name + "_rFinger9J3GeoShape.vtx[1]"} {$name + "_rFinger9J3GeoShape.vtx[3]"} {$name + "_rFinger9J3GeoShape.vtx[5]"} {$name + "_rFinger9J3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rFinger9J3_Clstr"};
pointConstraint {$name + "_rFinger9JTip"} {$name + "_rFinger9J3_Clstr"};

delete -ch {$name + "_rFinger9J1Geo"} {$name + "_rFinger9J2Geo"} {$name + "_rFinger9J3Geo"};
delete {$name + "_rFinger9J1_Clstr"} {$name + "_rFinger9J2_Clstr"} {$name + "_rFinger9J3_Clstr"} ;
parent {$name + "_rFinger9J1GeoG"} {$name + "_rFinger9J2GeoG"} {$name + "_rFinger9J3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rFinger9J1Geo"} {$name + "_rFinger9J2Geo"} {$name + "_rFinger9J3Geo"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J1GeoG.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J2GeoG.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J3GeoG.scale"};
}

if (`objExists ($name + "_rThumbJ1")`)
{
duplicate -n {$name + "_rThumbJ1Geo1"} {$name + "_rHand1Geo"};
select {$name + "_rThumbJ1Geo1"};
PolySelectConvert 1;
select -d {$name + "_rThumbJ1Geo1.f[0]"} ;
doDelete;

$rPalmLoc = `getAttr {$name + "_rPalmJ.tx"}`;

polyPlane -n {$name + "_rThumbJ1Geo2"} -w ($rPalmLoc * -.75) -h ($rPalmLoc * -.75) -sx 1 -sy 1 -ax 0 1 0 -cuv 2 -ch 1;
pointConstraint {$name + "_rThumbJ2C"} {$name + "_rThumbJ1Geo2"};
aimConstraint -aimVector 0 -1 0 -upVector 0 0 -1 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_rThumbJ1C"} {$name + "_rThumbJ1C"} {$name + "_rThumbJ1Geo2"}; 
delete {$name + "_rThumbJ1Geo2_pointConstraint1"};
delete {$name + "_rThumbJ1Geo2_aimConstraint1"};

polyUnite -n {$name + "_rThumbJ1Geo"} -ch 0 {$name + "_rThumbJ1Geo2"} {$name + "_rThumbJ1Geo1"};
polyAppend -ch on -s 1 -tx 1 -ed 5 -ed 0 {$name + "_rThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 6 -ed 2 -ed 8 {$name + "_rThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 4 -ed 3 -ed 10 {$name + "_rThumbJ1GeoShape"} ;
polyAppend -ch on -s 1 -tx 1 -ed 7 -ed 9 -ed 1 -ed 11 {$name + "_rThumbJ1GeoShape"} ;

group -n {$name + "_rThumbJ1GeoG"} {$name + "_rThumbJ1Geo"};
$rThumbJ1Loc = `xform -q -ws -rp {$name + "_rThumbJ1"}`;
move $rThumbJ1Loc[0] $rThumbJ1Loc[1] $rThumbJ1Loc[2] {$name + "_rThumbJ1GeoG.scalePivot"} {$name + "_rThumbJ1GeoG.rotatePivot"} ;
move $rThumbJ1Loc[0] $rThumbJ1Loc[1] $rThumbJ1Loc[2] {$name + "_rThumbJ1Geo.scalePivot"} {$name + "_rThumbJ1Geo.rotatePivot"} ;
rotate -r 0 -90 0 {$name + "_rThumbJ1GeoG"};
parentConstraint -mo {$name + "_rThumbJ1"} {$name + "_rThumbJ1GeoG"};
rotate -r 0 90 0 {$name + "_rThumbJ1Geo"};
makeIdentity -apply true -r 1 {$name + "_rThumbJ1Geo"};

polyCube -n {$name + "_rThumbJ2Geo"};
group -n {$name + "_rThumbJ2GeoG"};
move -r -0.5 0 0 {$name + "_rThumbJ2GeoG.scalePivot"} {$name + "_rThumbJ2GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rThumbJ2Geo.scalePivot"} {$name + "_rThumbJ2Geo.rotatePivot"} ;
parentConstraint {$name + "_rThumbJ2C"} {$name + "_rThumbJ2GeoG"};
setAttr {$name + "_rThumbJ2Geo.sy"} ($rPalmLoc * -.75);
setAttr {$name + "_rThumbJ2Geo.sz"} ($rPalmLoc * -.75);
select {$name + "_rThumbJ2GeoShape.vtx[1]"} {$name + "_rThumbJ2GeoShape.vtx[3]"} {$name + "_rThumbJ2GeoShape.vtx[5]"} {$name + "_rThumbJ2GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rThumbJ2_Clstr"};
pointConstraint {$name + "_rThumbJ3"} {$name + "_rThumbJ2_Clstr"};

polyCube -n {$name + "_rThumbJ3Geo"};
group -n {$name + "_rThumbJ3GeoG"};
move -r -0.5 0 0 {$name + "_rThumbJ3GeoG.scalePivot"} {$name + "_rThumbJ3GeoG.rotatePivot"} ;
move -r -0.5 0 0 {$name + "_rThumbJ3Geo.scalePivot"} {$name + "_rThumbJ3Geo.rotatePivot"} ;
parentConstraint {$name + "_rThumbJ3C"} {$name + "_rThumbJ3GeoG"};
setAttr {$name + "_rThumbJ3Geo.sy"} ($rPalmLoc * -.75);
setAttr {$name + "_rThumbJ3Geo.sz"} ($rPalmLoc * -.75);
select {$name + "_rThumbJ3GeoShape.vtx[1]"} {$name + "_rThumbJ3GeoShape.vtx[3]"} {$name + "_rThumbJ3GeoShape.vtx[5]"} {$name + "_rThumbJ3GeoShape.vtx[7]"} ;
newCluster " -envelope 1";
rename {$name + "_rThumbJ3_Clstr"};
pointConstraint {$name + "_rThumbJTip"} {$name + "_rThumbJ3_Clstr"};

delete -ch {$name + "_rThumbJ1Geo"} {$name + "_rThumbJ2Geo"} {$name + "_rThumbJ3Geo"};
delete {$name + "_rThumbJ2_Clstr"} {$name + "_rThumbJ3_Clstr"} ;
parent {$name + "_rThumbJ1GeoG"} {$name + "_rThumbJ2GeoG"} {$name + "_rThumbJ3GeoG"} {$name + "_rFingersGeoG"};

makeIdentity -apply true -s 1 {$name + "_rThumbJ1Geo"} {$name + "_rThumbJ2Geo"} {$name + "_rThumbJ3Geo"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ1GeoG.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ2GeoG.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ3GeoG.scale"};
}

/////////HEAD///////////
polyCube -n {$name + "_HeadTopGeo"} -w 1 -h 1 -d 1 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1;
polySmooth  -mth 0 -dv 2 -c 1 -kb 0 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 {$name + "_HeadTopGeo"};
move -r 0 0 0.0303227 {$name + "_HeadTopGeo.vtx[34]"} {$name + "_HeadTopGeo.vtx[36]"} {$name + "_HeadTopGeo.vtx[50]"} {$name + "_HeadTopGeo.vtx[74]"} {$name + "_HeadTopGeo.vtx[77]"} ;
move -r 0 -0.0272904 0 {$name + "_HeadTopGeo.vtx[47]"} {$name + "_HeadTopGeo.vtx[49]"} {$name + "_HeadTopGeo.vtx[64]"} {$name + "_HeadTopGeo.vtx[87:88]"} ;
move -r 0 -0.118258 0.118258 {$name + "_HeadTopGeo.vtx[0:1]"} {$name + "_HeadTopGeo.vtx[8]"} {$name + "_HeadTopGeo.vtx[26:27]"} ;
move -r 0 0 -0.0424517 {$name + "_HeadTopGeo.vtx[0:1]"} ;
move -r 0 -0.0219276 0 {$name + "_HeadTopGeo.vtx[26:27]"} {$name + "_HeadTopGeo.vtx[63]"} {$name + "_HeadTopGeo.vtx[65]"} {$name + "_HeadTopGeo.vtx[87:88]"} ;
move -r 0 -0.00626502 0 {$name + "_HeadTopGeo.vtx[87:88]"} ;
move -r 0 -0.00626502 0 {$name + "_HeadTopGeo.vtx[63]"} {$name + "_HeadTopGeo.vtx[65]"} ;
move -r 0 -0.0140963 -0.00626502 {$name + "_HeadTopGeo.vtx[86]"} {$name + "_HeadTopGeo.vtx[89]"} ;
move -r 0 -0.0657827 0 {$name + "_HeadTopGeo.vtx[0:1]"} ;
move -r 0 -0.111204 0 {$name + "_HeadTopGeo.vtx[47]"} {$name + "_HeadTopGeo.vtx[49]"} ;
move -r 0 -0.117469 0 {$name + "_HeadTopGeo.vtx[18:19]"} ;
move -r 0 -0.0645777 0 {$name + "_HeadTopGeo.vtx[46]"} {$name + "_HeadTopGeo.vtx[48]"} ;
move -r 0 -0.00156625 -0.0109638 {$name + "_HeadTopGeo.vtx[46]"} {$name + "_HeadTopGeo.vtx[48]"};
move -r 0 -0.0293769 -0.0160238 {$name + "_HeadTopGeo.vtx[6:7]"} ;
move -r 0 -0.0156625 0 {$name + "_HeadTopGeo.vtx[34]"} {$name + "_HeadTopGeo.vtx[36]"} {$name + "_HeadTopGeo.vtx[50]"} {$name + "_HeadTopGeo.vtx[74]"} {$name + "_HeadTopGeo.vtx[77]"} {$name + "_HeadTopGeo.vtx[93:94]"} ;
move -r 0 -0.0219276 0 {$name + "_HeadTopGeo.vtx[34]"} {$name + "_HeadTopGeo.vtx[36]"} {$name + "_HeadTopGeo.vtx[50]"} {$name + "_HeadTopGeo.vtx[74]"} {$name + "_HeadTopGeo.vtx[77]"} ;
move -r 0 0.0203613 0 {$name + "_HeadTopGeo.vtx[0:1]"} {$name + "_HeadTopGeo.vtx[8]"} {$name + "_HeadTopGeo.vtx[18:19]"} {$name + "_HeadTopGeo.vtx[23]"} {$name + "_HeadTopGeo.vtx[26:27]"} {$name + "_HeadTopGeo.vtx[47]"} {$name + "_HeadTopGeo.vtx[49]"} {$name + "_HeadTopGeo.vtx[63:65]"} {$name + "_HeadTopGeo.vtx[87:88]"} ;
move -r 0 0.0500673 0 {$name + "_HeadTopGeo.vtx[0:1]"} {$name + "_HeadTopGeo.vtx[8]"} {$name + "_HeadTopGeo.vtx[18:19]"} {$name + "_HeadTopGeo.vtx[23]"} {$name + "_HeadTopGeo.vtx[26:27]"} {$name + "_HeadTopGeo.vtx[46:49]"} {$name + "_HeadTopGeo.vtx[62:65]"} {$name + "_HeadTopGeo.vtx[86:89]"} ;
move -r 0 0.0282989 0 {$name + "_HeadTopGeo.vtx[6:7]"} {$name + "_HeadTopGeo.vtx[11]"} {$name + "_HeadTopGeo.vtx[32:33]"} ;
scale -r -p 0cm -0.368014cm 0.295457cm 1.069691 1 1 {$name + "_HeadTopGeo.vtx[0:1]"} {$name + "_HeadTopGeo.vtx[8]"} {$name + "_HeadTopGeo.vtx[26:27]"} {$name + "_HeadTopGeo.vtx[47]"} {$name + "_HeadTopGeo.vtx[49]"} {$name + "_HeadTopGeo.vtx[64]"} {$name + "_HeadTopGeo.vtx[87:88]"} ;
scale -r -p 0.248091cm -0.367827cm 0.0815972cm 1 1 1 {$name + "_HeadTopGeo.f[55]"} ;
polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy -0.3680142015 -pvz 0.2199364901 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadTopGeo.f[52:59]"};
move -r 0 -0.24816 0 {$name + "_HeadTopGeo.f[52:59]"};
move -r 0 0.0957809 0 {$name + "_HeadTopGeo.vtx[101:103]"} {$name + "_HeadTopGeo.vtx[108:109]"} ;
move -r 0 -0.0195916 0 {$name + "_HeadTopGeo.vtx[95:100]"} {$name + "_HeadTopGeo.vtx[104:107]"} ;
move -r 0 -0.0217684 0 {$name + "_HeadTopGeo.vtx[96:97]"} {$name + "_HeadTopGeo.vtx[99]"} {$name + "_HeadTopGeo.vtx[104:105]"} ;
scale -r -p 0cm -0.589415cm 0.219936cm 0.820306 1 1 {$name + "_HeadTopGeo.vtx[95:109]"} ;
scale -r -p 0cm -0.444336cm 0cm 1.036799 1 1 {$name + "_HeadTopGeo.vtx[18:19]"} {$name + "_HeadTopGeo.vtx[23]"} {$name + "_HeadTopGeo.vtx[63:64]"} {$name + "_HeadTopGeo.vtx[101:103]"} {$name + "_HeadTopGeo.vtx[52:59]"} ;
select -d {$name + "_HeadTopGeo.vtx[18:19]"} {$name + "_HeadTopGeo.vtx[23]"} {$name + "_HeadTopGeo.vtx[63:64]"} {$name + "_HeadTopGeo.vtx[101:103]"} {$name + "_HeadTopGeo.vtx[52:59]"} ;

select {$name + "_HeadTopGeo.vtx[4:7]"} {$name + "_HeadTopGeo.vtx[10:11]"} {$name + "_HeadTopGeo.vtx[14:17]"} {$name + "_HeadTopGeo.vtx[21:22]"} {$name + "_HeadTopGeo.vtx[24:25]"} {$name + "_HeadTopGeo.vtx[30:33]"} {$name + "_HeadTopGeo.vtx[38:45]"} {$name + "_HeadTopGeo.vtx[54:61]"}  {$name + "_HeadTopGeo.vtx[65:72]"} {$name + "_HeadTopGeo.vtx[77:84]"} {$name + "_HeadTopGeo.vtx[77:84]"} {$name + "_HeadTopGeo.vtx[87:94]"} ;
scale -r -p 0cm 0.0729602cm -0.131944cm 0.967254 1 1 ;
select -add {$name + "_HeadTopGeo.vtx[2:3]"} {$name + "_HeadTopGeo.vtx[9]"} {$name + "_HeadTopGeo.vtx[12:13]"} {$name + "_HeadTopGeo.vtx[28:29]"} {$name + "_HeadTopGeo.vtx[34:37]"} ;
scale -r -p 0cm 0.0729602cm -0.0547171cm 0.912778 1 1 ;
select {$name + "_HeadTopGeo.vtx[101:103]"} {$name + "_HeadTopGeo.vtx[52:59]"} ;
scale -r -p 0cm -0.520526cm 0cm 1.065 1 1 ;
select {$name + "_HeadTopGeo.vtx[0:1]"} {$name + "_HeadTopGeo.vtx[8]"} {$name + "_HeadTopGeo.vtx[11]"} {$name + "_HeadTopGeo.vtx[18:19]"} {$name + "_HeadTopGeo.vtx[23]"} {$name + "_HeadTopGeo.vtx[26:27]"} {$name + "_HeadTopGeo.vtx[46:49]"} {$name + "_HeadTopGeo.vtx[62:64]"} {$name + "_HeadTopGeo.vtx[85:86]"} ;
scale -r -p 0cm -0.33138cm 0.059129cm 0.957222 1 1 ;
select {$name + "_HeadTopGeo.vtx[97:100]"} {$name + "_HeadTopGeo.vtx[105]"} {$name + "_HeadTopGeo.vtx[107]"} ;
move -r 0 -0.0123915 0 ;
select -cl  ;
select {$name + "_HeadTopGeo.vtx[99:100]"} ;
move -r 0 -0.00309787 0 ;
select -cl  ;
select {$name + "_HeadTopGeo.vtx[1]"} {$name + "_HeadTopGeo.vtx[96]"} {$name + "_HeadTopGeo.vtx[0]"} {$name + "_HeadTopGeo.vtx[104]"} ;
scale -r -p 0cm -0.513002cm 0.330436cm 0.950714 1 1 ;
polySoftEdge -angle 45 -ch 1 {$name + "_HeadTopGeo"};
duplicate -n {$name + "_HeadBtmGeo"} {$name + "_HeadTopGeo"} ;

delete {$name + "_HeadBtmGeo.f[0:51]"} {$name + "_HeadBtmGeo.f[60:95]"} ;
polyCloseBorder -ch 1 {$name + "_HeadBtmGeo"};

polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy -0.3684650958 -pvz 0.2199362814 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadBtmGeo.f[20]"};
setAttr "polyExtrudeFace2.localScale" -type double3 0.85 0.85 0.85 ;
polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy -0.3684484959 -pvz 0.2142376453 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadBtmGeo.f[20]"};
setAttr "polyExtrudeFace3.localTranslate" -type double3 0 0 -0.14 ;

polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy -0.3680999577 -pvz 0.0780961439 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadBtmGeo.f[25]"} {$name + "_HeadBtmGeo.f[30]"};
setAttr "polyExtrudeFace4.localTranslate" -type double3 0 0 0.15 ;
move -r 0.0261447 0 0 {$name + "_HeadBtmGeo.f[25]"} ;
move -r -0.0261447 0 0 {$name + "_HeadBtmGeo.f[30]"} ;
polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0.01281668246 -pvy -0.4460017607 -pvz 0.2193639018 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadBtmGeo.f[8:10]"} {$name + "_HeadBtmGeo.f[13:16]"} {$name + "_HeadBtmGeo.f[19]"} {$name + "_HeadBtmGeo.f[45]"} {$name + "_HeadBtmGeo.f[49]"};
setAttr "polyExtrudeFace5.localTranslate" -type double3 0 0 0.04 ;


delete {$name + "_HeadTopGeo.f[52:59]"} {$name + "_HeadTopGeo.f[96:107]"} ;
polyCloseBorder -ch 1 {$name + "_HeadTopGeo"};

polyExtrudeFacet -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy -0.3684650958 -pvz 0.2199362814 -divisions 1 -twist 0 -taper 1 -off 0 -smoothingAngle 30 {$name + "_HeadTopGeo.f[88]"};
setAttr "polyExtrudeFace6.localScale" -type double3 0.85 0.85 0.85 ;

polyCylinder -n {$name + "_earsGeo"} -r 0.1 -h .85 -sz 1;
rotate 0 0 90 {$name + "_earsGeo"};
move  0 -0.08 0 ;

group -n {$name + "_HeadGeoG"} {$name + "_HeadTopGeo"} {$name + "_HeadBtmGeo"} {$name + "_earsGeo"};
xform -os -piv 0 -0.05 -0.0;

pointConstraint {$name + "_HeadJ"} {$name + "_HeadTipJ"} {$name + "_HeadGeoG"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_HeadTipJ"} {$name + "_HeadGeoG"};

spaceLocator -n {$name + "_HeadAimLctr"};
spaceLocator -n {$name + "_HeadTargetLctr"};
parent {$name + "_HeadTargetLctr"} {$name + "_HeadAimLctr"};
pointConstraint {$name + "_HeadJ"} {$name + "_HeadAimLctr"};
pointConstraint {$name + "_HeadTipJ"} {$name + "_HeadTargetLctr"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_HeadTipJ"} {$name + "_HeadAimLctr"};

$HeadHeight = `getAttr {$name + "_HeadTargetLctr.ty"}`;
setAttr {$name + "_HeadGeoG.sy"} ($HeadHeight * 1.1);

spaceLocator -n {$name + "_lEyeAimLctr"};
spaceLocator -n {$name + "_lEyeTargetLctr"};
parent {$name + "_lEyeTargetLctr"} {$name + "_lEyeAimLctr"};
pointConstraint {$name + "_HeadGeoG"} {$name + "_lEyeAimLctr"};
pointConstraint {$name + "_lEyeJ"} {$name + "_lEyeTargetLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 0 0 -worldUpType "none" {$name + "_lEyeJ"} {$name + "_lEyeAimLctr"};
$lEyeDistance = `getAttr {$name + "_lEyeTargetLctr.tx"}`;

spaceLocator -n {$name + "_rEyeAimLctr"};
spaceLocator -n {$name + "_rEyeTargetLctr"};
parent {$name + "_rEyeTargetLctr"} {$name + "_rEyeAimLctr"};
pointConstraint {$name + "_HeadGeoG"} {$name + "_rEyeAimLctr"};
pointConstraint {$name + "_rEyeJ"} {$name + "_rEyeTargetLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 0 0 -worldUpType "none" {$name + "_rEyeJ"} {$name + "_rEyeAimLctr"};
$rEyeDistance = `getAttr {$name + "_rEyeTargetLctr.tx"}`;

setAttr {$name + "_HeadGeoG.sx"} (($lEyeDistance + $rEyeDistance)* 1.05);
setAttr {$name + "_HeadGeoG.sz"} (($lEyeDistance + $rEyeDistance)* 1.2);

$lEyeSpace = `getAttr {$name + "_lEyeJ.tz"}`;
$rEyeSpace = `getAttr {$name + "_rEyeJ.tz"}`;
polySphere -n {$name + "_lEyeGeo"} -r (($lEyeSpace - $rEyeSpace)/-4);
rotate -r -os 90 0 0 {$name + "_lEyeGeo"};
makeIdentity -apply true -t 1 -r 1 -s 1;

//EYE MATERIALS
shadingNode -n {$name + "_EyeWhites"} -asShader lambert;
sets -renderable true -noSurfaceShader true -empty -name {$name + "_EyeWhitesSG"};
connectAttr -f {$name + "_EyeWhites.outColor"} {$name + "_EyeWhitesSG.surfaceShader"};
setAttr {$name + "_EyeWhites.color"} -type double3 1 1 1 ;
shadingNode -n {$name + "_Pupils"} -asShader lambert;
sets -renderable true -noSurfaceShader true -empty -name {$name + "_PupilsSG"};
connectAttr -f {$name + "_Pupils.outColor"} {$name + "_PupilsSG.surfaceShader"};
setAttr {$name + "_Pupils.color"} -type double3 0 0 0;

select {$name + "_lEyeGeo"};
sets -e -forceElement {$name + "_EyeWhitesSG"};
select -r {$name + "_lEyeGeoShape.f[320:359]"} {$name + "_lEyeGeoShape.f[380:399]"} ;
sets -e -forceElement {$name + "_PupilsSG"};

//EYE LIDS
polySphere -n {$name + "_lEyeLidBtmGeo"} -r (($lEyeSpace - $rEyeSpace)/-3.5);
setAttr {$name + "_lEyeLidBtmGeo.rotateOrder"} 2;
delete {$name + "_lEyeLidBtmGeo.f[180:359]"} {$name + "_lEyeLidBtmGeo.f[380:399]"} ;
polyCloseBorder -ch 1 {$name + "_lEyeLidBtmGeo"};
delete -ch {$name + "_lEyeLidBtmGeo"};
duplicate -n {$name + "_rEyeLidBtmGeo"} {$name + "_lEyeLidBtmGeo"};

polySphere -n {$name + "_lEyeLidTopGeo"} -r (($lEyeSpace - $rEyeSpace)/-3.5);
setAttr {$name + "_lEyeLidTopGeo.rotateOrder"} 2;
delete {$name + "_lEyeLidTopGeo.f[0:179]"} {$name + "_lEyeLidTopGeo.f[360:379]"} ;
polyCloseBorder -ch 1 {$name + "_lEyeLidTopGeo"};
delete -ch {$name + "_lEyeLidTopGeo"};
duplicate -n {$name + "_rEyeLidTopGeo"} {$name + "_lEyeLidTopGeo"};

group -n {$name + "_lEyeLidTopGeoG"} {$name + "_lEyeLidTopGeo"}; xform -os -piv 0 0 0;
group -n {$name + "_lEyeLidBtmGeoG"} {$name + "_lEyeLidBtmGeo"}; xform -os -piv 0 0 0;

group -n {$name + "_rEyeLidTopGeoG"} {$name + "_rEyeLidTopGeo"}; xform -os -piv 0 0 0;
group -n {$name + "_rEyeLidBtmGeoG"} {$name + "_rEyeLidBtmGeo"}; xform -os -piv 0 0 0;

rotate -25 0 0 {$name + "_lEyeLidTopGeoG"} {$name + "_rEyeLidTopGeoG"};
rotate 25 0 0 {$name + "_lEyeLidBtmGeoG"} {$name + "_rEyeLidBtmGeoG"};
makeIdentity -apply true -r 1 {$name + "_lEyeLidTopGeoG"} {$name + "_rEyeLidTopGeoG"} {$name + "_lEyeLidBtmGeoG"} {$name + "_rEyeLidBtmGeoG"};

duplicate -n {$name + "_rEyeGeo"} {$name + "_lEyeGeo"};
group -n {$name + "_lEyeGeoG2"} {$name + "_lEyeGeo"} {$name + "_lEyeLidBtmGeoG"} {$name + "_lEyeLidTopGeoG"}; xform -os -piv 0 0 0;
group -n {$name + "_rEyeGeoG2"} {$name + "_rEyeGeo"} {$name + "_rEyeLidBtmGeoG"} {$name + "_rEyeLidTopGeoG"}; xform -os -piv 0 0 0;
group -n {$name + "_lEyeGeoG"} {$name + "_lEyeGeoG2"}; xform -os -piv 0 0 0;
group -n {$name + "_rEyeGeoG"} {$name + "_rEyeGeoG2"}; xform -os -piv 0 0 0;



//LID FOLLOW LOCATOR
spaceLocator -n {$name + "_EyeLidsFollowLctr"};
pointConstraint{$name + "_EyeAimC"} {$name + "_EyeLidsFollowLctr"};
delete {$name + "_EyeLidsFollowLctr_pointConstraint1"};
parentConstraint -mo {$name + "_HeadC"} {$name + "_EyeLidsFollowLctr"};
parent {$name + "_EyeLidsFollowLctr"} {$name + "_MainC"};
setAttr {$name + "_EyeLidsFollowLctr.v"} 0;

//CONSTRAINTS
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} -skip y -skip z {$name + "_lEyeAimC"} {$name + "_EyeLidsFollowLctr"} {$name + "_lEyeLidTopGeoG"};
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} -skip y -skip z {$name + "_lEyeAimC"} {$name + "_EyeLidsFollowLctr"} {$name + "_lEyeLidBtmGeoG"};

aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} -skip y -skip z {$name + "_rEyeAimC"} {$name + "_EyeLidsFollowLctr"} {$name + "_rEyeLidTopGeoG"};
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} -skip y -skip z {$name + "_rEyeAimC"} {$name + "_EyeLidsFollowLctr"} {$name + "_rEyeLidBtmGeoG"};

//LIMITS
transformLimits -rx 0 45 -erx 1 0 {$name + "_lEyeLidBtmGeoG"};
transformLimits -rx 0 45 -erx 1 0 {$name + "_rEyeLidBtmGeoG"};

//ANIMATION ATTRIBUTES
//LEFT EYE
addAttr -ln "TopOpenClose"  -at double  -min -10 -max 10 -dv 0 {$name + "_lEyeAimC"};
setAttr -e-keyable true {$name + "_lEyeAimC.TopOpenClose"};
addAttr -ln "BtmOpenClose"  -at double  -min -10 -max 10 -dv 0 {$name + "_lEyeAimC"};
setAttr -e-keyable true {$name + "_lEyeAimC.BtmOpenClose"};

addAttr -ln "TopExpress"  -at double  -min -10 -max 10 -dv 0 {$name + "_lEyeAimC"};
setAttr -e-keyable true {$name + "_lEyeAimC.TopExpress"};
addAttr -ln "BtmExpress"  -at double  -min -10 -max 10 -dv 0 {$name + "_lEyeAimC"};
setAttr -e-keyable true {$name + "_lEyeAimC.BtmExpress"};

addAttr -ln "LidsFollow"  -at double  -min 0 -max 1 -dv 1 {$name + "_lEyeAimC"};
setAttr -e-keyable true {$name + "_lEyeAimC.LidsFollow"};

//RIGHT EYE
addAttr -ln "TopOpenClose"  -at double  -min -10 -max 10 -dv 0 {$name + "_rEyeAimC"};
setAttr -e-keyable true {$name + "_rEyeAimC.TopOpenClose"};
addAttr -ln "BtmOpenClose"  -at double  -min -10 -max 10 -dv 0 {$name + "_rEyeAimC"};
setAttr -e-keyable true {$name + "_rEyeAimC.BtmOpenClose"};

addAttr -ln "TopExpress"  -at double  -min -10 -max 10 -dv 0 {$name + "_rEyeAimC"};
setAttr -e-keyable true {$name + "_rEyeAimC.TopExpress"};
addAttr -ln "BtmExpress"  -at double  -min -10 -max 10 -dv 0 {$name + "_rEyeAimC"};
setAttr -e-keyable true {$name + "_rEyeAimC.BtmExpress"};

addAttr -ln "LidsFollow"  -at double  -min 0 -max 1 -dv 1 {$name + "_rEyeAimC"};
setAttr -e-keyable true {$name + "_rEyeAimC.LidsFollow"};

//ATTRIBUTE CONNECTIONS
//LEFT EYE LIDS FOLLOW
connectAttr -f {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidTopGeoG_aimConstraint1." + $name + "_lEyeAimCW0"};
setAttr {$name + "_lEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_lEyeAimC.LidsFollow"} 0;
setAttr {$name + "_lEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};

connectAttr -f {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidBtmGeoG_aimConstraint1." + $name + "_lEyeAimCW0"};
setAttr {$name + "_lEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_lEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.LidsFollow"} {$name + "_lEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_lEyeAimC.LidsFollow"} 1;

//LEFT EYE TOP LID
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopOpenClose"} {$name + "_lEyeLidTopGeo.rx"};
setAttr {$name + "_lEyeAimC.TopOpenClose"} 10;
setAttr {$name + "_lEyeLidTopGeo.rx"} 75;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopOpenClose"} {$name + "_lEyeLidTopGeo.rx"};
setAttr {$name + "_lEyeAimC.TopOpenClose"} -10;
setAttr {$name + "_lEyeLidTopGeo.rx"} -75;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopOpenClose"} {$name + "_lEyeLidTopGeo.rx"};
setAttr {$name + "_lEyeAimC.TopOpenClose"} 0;

setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopExpress"} {$name + "_lEyeLidTopGeo.rz"};
setAttr {$name + "_lEyeAimC.TopExpress"} 10;
setAttr {$name + "_lEyeLidTopGeo.rz"} 45;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopExpress"} {$name + "_lEyeLidTopGeo.rz"};
setAttr {$name + "_lEyeAimC.TopExpress"} -10;
setAttr {$name + "_lEyeLidTopGeo.rz"} -45;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.TopExpress"} {$name + "_lEyeLidTopGeo.rz"};
setAttr {$name + "_lEyeAimC.TopExpress"} 0;

//LEFT EYE BTM LID
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmOpenClose"} {$name + "_lEyeLidBtmGeo.rx"};
setAttr {$name + "_lEyeAimC.BtmOpenClose"} 10;
setAttr {$name + "_lEyeLidBtmGeo.rx"} -75;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmOpenClose"} {$name + "_lEyeLidBtmGeo.rx"};
setAttr {$name + "_lEyeAimC.BtmOpenClose"} -10;
setAttr {$name + "_lEyeLidBtmGeo.rx"} 75;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmOpenClose"} {$name + "_lEyeLidBtmGeo.rx"};
setAttr {$name + "_lEyeAimC.BtmOpenClose"} 0;

setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmExpress"} {$name + "_lEyeLidBtmGeo.rz"};
setAttr {$name + "_lEyeAimC.BtmExpress"} 10;
setAttr {$name + "_lEyeLidBtmGeo.rz"} -45;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmExpress"} {$name + "_lEyeLidBtmGeo.rz"};
setAttr {$name + "_lEyeAimC.BtmExpress"} -10;
setAttr {$name + "_lEyeLidBtmGeo.rz"} 45;
setDrivenKeyframe -currentDriver {$name + "_lEyeAimC.BtmExpress"} {$name + "_lEyeLidBtmGeo.rz"};
setAttr {$name + "_lEyeAimC.BtmExpress"} 0;


//RIGHT EYE LIDS FOLLOW
connectAttr -f {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidTopGeoG_aimConstraint1." + $name + "_rEyeAimCW0"};
setAttr {$name + "_rEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_rEyeAimC.LidsFollow"} 0;
setAttr {$name + "_rEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidTopGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};

connectAttr -f {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidBtmGeoG_aimConstraint1." + $name + "_rEyeAimCW0"};
setAttr {$name + "_rEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_rEyeAimC.LidsFollow"} 0;
setAttr {$name + "_rEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.LidsFollow"} {$name + "_rEyeLidBtmGeoG_aimConstraint1." + $name + "_EyeLidsFollowLctrW1"};
setAttr {$name + "_rEyeAimC.LidsFollow"} 1;

//RIGHT EYE TOP LID
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopOpenClose"} {$name + "_rEyeLidTopGeo.rx"};
setAttr {$name + "_rEyeAimC.TopOpenClose"} 10;
setAttr {$name + "_rEyeLidTopGeo.rx"} 75;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopOpenClose"} {$name + "_rEyeLidTopGeo.rx"};
setAttr {$name + "_rEyeAimC.TopOpenClose"} -10;
setAttr {$name + "_rEyeLidTopGeo.rx"} -75;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopOpenClose"} {$name + "_rEyeLidTopGeo.rx"};
setAttr {$name + "_rEyeAimC.TopOpenClose"} 0;

setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopExpress"} {$name + "_rEyeLidTopGeo.rz"};
setAttr {$name + "_rEyeAimC.TopExpress"} 10;
setAttr {$name + "_rEyeLidTopGeo.rz"} -45;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopExpress"} {$name + "_rEyeLidTopGeo.rz"};
setAttr {$name + "_rEyeAimC.TopExpress"} -10;
setAttr {$name + "_rEyeLidTopGeo.rz"} 45;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.TopExpress"} {$name + "_rEyeLidTopGeo.rz"};
setAttr {$name + "_rEyeAimC.TopExpress"} 0;

//RIGHT EYE BTM LID
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmOpenClose"} {$name + "_rEyeLidBtmGeo.rx"};
setAttr {$name + "_rEyeAimC.BtmOpenClose"} 10;
setAttr {$name + "_rEyeLidBtmGeo.rx"} -75;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmOpenClose"} {$name + "_rEyeLidBtmGeo.rx"};
setAttr {$name + "_rEyeAimC.BtmOpenClose"} -10;
setAttr {$name + "_rEyeLidBtmGeo.rx"} 75;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmOpenClose"} {$name + "_rEyeLidBtmGeo.rx"};
setAttr {$name + "_rEyeAimC.BtmOpenClose"} 0;

setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmExpress"} {$name + "_rEyeLidBtmGeo.rz"};
setAttr {$name + "_rEyeAimC.BtmExpress"} 10;
setAttr {$name + "_rEyeLidBtmGeo.rz"} 45;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmExpress"} {$name + "_rEyeLidBtmGeo.rz"};
setAttr {$name + "_rEyeAimC.BtmExpress"} -10;
setAttr {$name + "_rEyeLidBtmGeo.rz"} -45;
setDrivenKeyframe -currentDriver {$name + "_rEyeAimC.BtmExpress"} {$name + "_rEyeLidBtmGeo.rz"};
setAttr {$name + "_rEyeAimC.BtmExpress"} 0;

//SET SDK CURVES TO TANGENT
selectKey -k {$name + "_rEyeLidBtmGeo_rotateZ"} {$name + "_rEyeLidBtmGeo_rotateX"} {$name + "_rEyeLidTopGeo_rotateZ"}
{$name + "_rEyeLidTopGeo_rotateX"} {$name + "_lEyeLidBtmGeo_rotateZ"} {$name + "_lEyeLidBtmGeo_rotateX"} {$name + "_lEyeLidTopGeo_rotateZ"}
{$name + "_lEyeLidTopGeo_rotateX"} ;
keyTangent -itt spline -ott spline;

/////TORSO//////
$lShoulderLoc = `xform -q -ws -t {$name + "_lShoulderJ"}`;
$rShoulderLoc = `xform -q -ws -t {$name + "_rShoulderJ"}`;
$lHipLoc = `xform -q -ws -t {$name + "_lHipJ"}`;
$rHipLoc = `xform -q -ws -t {$name + "_rHipJ"}`;

$shoulderWidth = (($lShoulderLoc[0] - $rShoulderLoc[0])/1);
$hipWidth = (($lHipLoc[0] - $rHipLoc[0]) /1);

$torsoWidth = (($shoulderWidth - $hipWidth)/2);
$torsoHeight = (($lShoulderLoc[1] + $rShoulderLoc[1])/2) - (($lHipLoc[1] + $rHipLoc[1])/2);

polyCylinder -n {$name + "_torsoGeo"} -h 5 -sy 3 -sz 4 -rcp 1;
scale -r 1.05 1 1.05 {$name + "_torsoGeo.e[0:59]"} {$name + "_torsoGeo.e[140:199]"} ;
scale -r  1 2. 1 {$name + "_torsoGeo.e[80:119]"};

duplicate -n {$name + "_rootGeo"} {$name + "_torsoGeo"};
scale -r ($hipWidth * 0.7) ($torsoHeight * 0.025) ($torsoWidth * 1.2) {$name + "_rootGeo"};
scale -r 0.98 1 0.98 {$name + "_rootGeoShape.vtx[0:79]"} {$name + "_rootGeoShape.vtx[200]"};
scale -r 0.9 1 0.9 {$name + "_rootGeoShape.vtx[0:59]"} {$name + "_rootGeoShape.vtx[200]"};
pointConstraint {$name + "_ROOTJ"} {$name + "_rootGeo"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_spine01J"} {$name + "_rootGeo"};
select {$name + "_rootGeoShape.vtx[100:199]"} {$name + "_rootGeoShape.vtx[201]"} ;
newCluster " -envelope 1";
rename {$name + "_rootGeoTopClstr"};
pointConstraint {$name + "_spine01J"} {$name + "_rootGeoTopClstr"};
select {$name + "_rootGeoShape.vtx[0:99]"} {$name + "_rootGeoShape.vtx[200]"} ;
newCluster " -envelope 1";
rename {$name + "_rootGeoBtmClstr"};
scale -r  1 4 1 {$name + "_rootGeoBtmClstr"};
pointConstraint -skip x {$name + "_rHipJ"} {$name + "_lHipJ"} {$name + "_rootGeoBtmClstr"};

duplicate -n {$name + "_spine01Geo"} {$name + "_torsoGeo"};
scale -r ($hipWidth * 0.6) ($torsoHeight * 0.025) ($torsoWidth * 1.) {$name + "_spine01Geo"};
move -r 0 ($torsoHeight * -0.075) 0 {$name + "_spine01Geo.scalePivot"} {$name + "_spine01Geo.rotatePivot"} ;
pointConstraint {$name + "_spine01J"} {$name + "_spine01Geo"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_spine02J"} {$name + "_spine01Geo"};
select {$name + "_spine01GeoShape.vtx[100:199]"} {$name + "_spine01GeoShape.vtx[201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine01GeoTopClstr"};
pointConstraint {$name + "_spine02J"} {$name + "_spine01GeoTopClstr"};;

duplicate -n {$name + "_spine02Geo"} {$name + "_torsoGeo"};
scale -r ($hipWidth * 0.65) ($torsoHeight * 0.025) ($torsoWidth * 1.1) {$name + "_spine02Geo"};
move -r 0 ($torsoHeight * -0.075) 0 {$name + "_spine02Geo.scalePivot"} {$name + "_spine02Geo.rotatePivot"} ;
pointConstraint {$name + "_spine02J"} {$name + "_spine02Geo"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_spine03J"} {$name + "_spine02Geo"};
select {$name + "_spine02GeoShape.vtx[100:199]"} {$name + "_spine02GeoShape.vtx[201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine02GeoTopClstr"};
pointConstraint {$name + "_spine03J"} {$name + "_spine02GeoTopClstr"};

duplicate -n {$name + "_spine03Geo"} {$name + "_torsoGeo"};
lattice  -n {$name + "_spine03GeoLattice"} -divisions 2 2 2 -objectCentered true  -ldv 2 2 2 {$name + "_spine03Geo"};
scale -r ($hipWidth * 0.7) ($torsoHeight * 0.025) ($torsoWidth * 1.2) {$name + "_spine03GeoLatticeLattice.pt[0:1][0][0]"} {$name + "_spine03GeoLatticeLattice.pt[0:1][0][1]"} ;
scale -r ($shoulderWidth * 0.5) ($torsoHeight * 0.025) ($torsoWidth * 1.2)  {$name + "_spine03GeoLatticeLattice.pt[0:1][1][0]"} {$name + "_spine03GeoLatticeLattice.pt[0:1][1][1]"};
delete -ch {$name + "_spine03Geo"};
move -r 0 ($torsoHeight * -0.075) 0 {$name + "_spine03Geo.scalePivot"} {$name + "_spine03Geo.rotatePivot"} ;
pointConstraint {$name + "_spine03J"} {$name + "_spine03Geo"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_Spine04J"} {$name + "_spine03Geo"};
select {$name + "_spine03GeoShape.vtx[100:199]"} {$name + "_spine03GeoShape.vtx[201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine03GeoTopClstr"};
pointConstraint {$name + "_Spine04J"} {$name + "_spine03GeoTopClstr"};

duplicate -n {$name + "_spine04Geo"} {$name + "_torsoGeo"};
scale -r ($shoulderWidth * 0.5) ($torsoHeight * 0.025) ($torsoWidth * 1.2) {$name + "_spine04Geo"};
move -r 0 ($torsoHeight * -0.08) 0 {$name + "_spine04Geo.scalePivot"} {$name + "_spine04Geo.rotatePivot"} ;
pointConstraint {$name + "_Spine04J"} {$name + "_spine04Geo"};
select {$name + "_spine04GeoShape.vtx[100:199]"} {$name + "_spine04GeoShape.vtx[201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine04GeoTopClstr"};
pointConstraint -skip x -skip z {$name + "_Neck01J"} {$name + "_lShoulderJ"} {$name + "_rShoulderJ"} {$name + "_spine04GeoTopClstr"};
setAttr {$name + "_spine04GeoTopClstr_pointConstraint1." + $name + "_Neck01JW0"} 4;
$lShoulderHeight = `xform -q -ws -rp {$name + "_lShoulderJ"}`;
$rShoulderHeight = `xform -q -ws -rp {$name + "_rShoulderJ"}`;
$Neck01Height = `xform -q -ws -rp {$name + "_Neck01J"}`;
$Neck01Distance = ($Neck01Height[1] - (($lShoulderHeight[1] + $rShoulderHeight[1])/2));
scale -r 1 3 1 {$name + "_spine04GeoTopClstr"} ;
delete {$name + "_spine04Geo_pointConstraint1"};
makeIdentity -apply true -s 1 {$name + "_spine04Geo"};
pointConstraint -skip x -skip z {$name + "_Neck01J"} {$name + "_lShoulderJ"} {$name + "_rShoulderJ"} {$name + "_spine04GeoTopClstr"};

delete -constraints {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"};
delete -ch {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"};
parent {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"} {$name + "_geoSkinG"};

//BLENDSHAPES FOR TORSO
duplicate -n {$name + "_rootGeoScale"} {$name + "_rootGeo"};
select -r {$name + "_rootGeoScale.vtx[0:201]"} ;
newCluster " -envelope 1";
rename {$name + "_rootGeoScaleClstr"};

duplicate -n {$name + "_spine01GeoScale"} {$name + "_spine01Geo"};
select -r {$name + "_spine01GeoScale.vtx[0:201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine01GeoScaleClstr"};

duplicate -n {$name + "_spine02GeoScale"} {$name + "_spine02Geo"};
select -r {$name + "_spine02GeoScale.vtx[0:201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine02GeoScaleClstr"};

duplicate -n {$name + "_spine03GeoScale"} {$name + "_spine03Geo"};
select -r {$name + "_spine03GeoScale.vtx[0:201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine03GeoScaleClstr"};

duplicate -n {$name + "_spine04GeoScale"} {$name + "_spine04Geo"};
select -r {$name + "_spine04GeoScale.vtx[0:201]"} ;
newCluster " -envelope 1";
rename {$name + "_spine04GeoScaleClstr"};

//NECK
spaceLocator -n {$name + "_Neck01AimLctr"};
spaceLocator -n {$name + "_Neck01TargetLctr"};
parent {$name + "_Neck01TargetLctr"} {$name + "_Neck01AimLctr"};
pointConstraint {$name + "_Neck01J"} {$name + "_Neck01AimLctr"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_HeadJ"} {$name + "_Neck01AimLctr"};
pointConstraint {$name + "_HeadJ"} {$name + "_Neck01TargetLctr"};
$Neck01Length = `getAttr {$name + "_Neck01TargetLctr.ty"}`;

polyCylinder -n {$name + "_NeckGeo"} -h ($Neck01Length*1.6) -r ($Neck01Length/1.5) -sy 8 -sz 3 -rcp 1;
move -r 0 ($Neck01Length *-0.8) 0 {$name + "_NeckGeo.scalePivot"} {$name + "_NeckGeo.rotatePivot"} ;

pointConstraint {$name + "_Neck01J"} {$name + "_NeckGeo"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y -skip z {$name + "_HeadJ"} {$name + "_NeckGeo"};
delete {$name + "_NeckGeo_pointConstraint1"} {$name + "_NeckGeo_aimConstraint1"};

parent {$name + "_spine04Geo"} {$name + "_HeadBtmGeo"} {$name + "_HeadTopGeo"} {$name + "_earsGeo"} {$name + "_lEyeGeoG"} {$name + "_rEyeGeoG"} {$name + "_scaleGeoG"};
delete {$name + "_HeadGeoG"};
parent {$name + "_NeckGeo"} {$name + "_geoSkinG"};

select {$name + "_Neck01J"} {$name + "_Neck02J"} {$name + "_HeadJ"} {$name + "_NeckGeo"};
newSkinCluster "-n NeckSkinClstr -ignoreHierarchy -toSelectedBones -mi 2 -omi true -dr 4 -rui true";
rename NeckSkinClstr {$name + "_NeckSkinClstr"};
skinPercent -tv {$name + "_Neck02J"} 1    ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[80:99]"};
skinPercent -tv {$name + "_Neck02J"} 0.85 ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[100:119]"};
skinPercent -tv {$name + "_Neck02J"} 0.45 ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[120:139]"};
skinPercent -tv {$name + "_Neck02J"} 0.2  ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[140:159]"};
skinPercent -tv {$name + "_Neck02J"} 0.05 ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[160:179]"};

skinPercent -tv {$name + "_HeadJ"} 1 ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[180:259]"} {$name + "_NeckGeo.vtx[261]"};
skinPercent -tv {$name + "_Neck01J"} 1 ($name + "_NeckSkinClstr") {$name + "_NeckGeo.vtx[0:59]"} {$name + "_NeckGeo.vtx[260]"};


//CLEAN UP AND ATTACH GEOMETRY

//TORSO
delete -ch {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"} {$name + "_spine04Geo"}
{$name + "_HeadBtmGeo"} {$name + "_HeadTopGeo"} {$name + "_lEyeGeo"} {$name + "_rEyeGeo"} ;

delete -constraints {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"} {$name + "_spine04Geo"}
{$name + "_HeadBtmGeo"} {$name + "_HeadTopGeo"} {$name + "_lEyeGeo"} {$name + "_rEyeGeo"} ;

delete baseCylinderG baseSphereG {$name + "_torsoGeo"} {$name + "_rootGeoTopClstr"} {$name + "_rootGeoBtmClstr"}
{$name + "_spine01GeoTopClstr"} {$name + "_spine02GeoTopClstr"} {$name + "_spine03GeoTopClstr"} {$name + "_spine04GeoTopClstr"}
{$name + "_HeadAimLctr"} {$name + "_lEyeAimLctr"} {$name + "_rEyeAimLctr"} {$name + "_Neck01AimLctr"} ;

//BLENDSHAPE CONNECTIONS
blendShape -tc 0 -n {$name + "_rootGeoBlend"} {$name + "_rootGeoScale"} {$name + "_rootGeo"};
blendShape -tc 0 -n {$name + "_spine01GeoBlend"} {$name + "_spine01GeoScale"} {$name + "_spine01Geo"};
blendShape -tc 0 -n {$name + "_spine02GeoBlend"} {$name + "_spine02GeoScale"} {$name + "_spine02Geo"};
blendShape -tc 0 -n {$name + "_spine03GeoBlend"} {$name + "_spine03GeoScale"} {$name + "_spine03Geo"};
blendShape -tc 0 -n {$name + "_spine04GeoBlend"} {$name + "_spine04GeoScale"} {$name + "_spine04Geo"};

select {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"} {$name + "_spine04Geo"};
$TorsoGeo = `ls -sl`;
string $selectedGeo;
for ($selectedGeo in $TorsoGeo)
{
addAttr -ln "Width"  -at double  -min .01 -dv 1 $selectedGeo;
setAttr -e-keyable true {$selectedGeo + ".Width"};
addAttr -ln "Depth"  -at double  -min .01 -dv 1 $selectedGeo;
setAttr -e-keyable true {$selectedGeo + ".Depth"};

connectAttr -f {$selectedGeo + ".Width"} {$selectedGeo + "ScaleClstr.scaleX"};
connectAttr -f {$selectedGeo + ".Depth"} {$selectedGeo + "ScaleClstr.scaleZ"};
setAttr {$selectedGeo + "Blend." + $selectedGeo + "Scale"} 1;

setAttr {$selectedGeo + "Scale.v"} 0;
setAttr {$selectedGeo + "ScaleClstr.v"} 0;
parent {$selectedGeo + "ScaleClstr"} {$name + "_geoSkinG"};
}
parent {$name + "_spine04GeoScale"} {$name + "_geoSkinG"};

//SKIN CLUSTERS
select {$name + "_ROOTJ"} {$name + "_spine01J"} {$name + "_rootGeo"} ;
newSkinCluster "-n rootSkinClstr -toSelectedBones -mi 2 -omi true -dr 10 -rui true";
rename rootSkinClstr {$name + "_rootSkinClstr"};
skinPercent -tv {$name + "_spine01J"} 1    ($name + "_rootSkinClstr") {$name + "_rootGeo.vtx[120:199]"} {$name + "_rootGeo.vtx[201]"};
skinPercent -tv {$name + "_spine01J"} 0.98 ($name + "_rootSkinClstr") {$name + "_rootGeo.vtx[100:119]"};
skinPercent -tv {$name + "_spine01J"} 0.08 ($name + "_rootSkinClstr") {$name + "_rootGeo.vtx[80:99]"};

select {$name + "_spine01J"} {$name + "_spine02J"} {$name + "_spine01Geo"} ;
newSkinCluster "-n spine01SkinClstr -toSelectedBones -mi 2 -omi true -dr 10 -rui true";
rename spine01SkinClstr {$name + "_spine01SkinClstr"};
skinPercent -tv {$name + "_spine02J"} 1    ($name + "_spine01SkinClstr") {$name + "_spine01Geo.vtx[120:199]"} {$name + "_spine01Geo.vtx[201]"};
skinPercent -tv {$name + "_spine01J"} 0.15 ($name + "_spine01SkinClstr") {$name + "_spine01Geo.vtx[100:119]"};
skinPercent -tv {$name + "_spine02J"} 0.15 ($name + "_spine01SkinClstr") {$name + "_spine01Geo.vtx[80:99]"};
skinPercent -tv {$name + "_spine01J"} 1    ($name + "_spine01SkinClstr") {$name + "_spine01Geo.vtx[0:79]"} {$name + "_spine01Geo.vtx[200]"};

select {$name + "_spine02J"} {$name + "_spine03J"} {$name + "_spine02Geo"} ;
newSkinCluster "-n spine02SkinClstr -toSelectedBones -mi 2 -omi true -dr 10 -rui true";
rename spine02SkinClstr {$name + "_spine02SkinClstr"};
skinPercent -tv {$name + "_spine03J"} 1    ($name + "_spine02SkinClstr") {$name + "_spine02Geo.vtx[120:199]"} {$name + "_spine02Geo.vtx[201]"};
skinPercent -tv {$name + "_spine02J"} 0.15 ($name + "_spine02SkinClstr") {$name + "_spine02Geo.vtx[100:119]"};
skinPercent -tv {$name + "_spine03J"} 0.15 ($name + "_spine02SkinClstr") {$name + "_spine02Geo.vtx[80:99]"};
skinPercent -tv {$name + "_spine02J"} 1    ($name + "_spine02SkinClstr") {$name + "_spine02Geo.vtx[0:79]"} {$name + "_spine02Geo.vtx[200]"};

select {$name + "_spine03J"} {$name + "_Spine04J"} {$name + "_spine03Geo"} ;
newSkinCluster "-n spine03SkinClstr -toSelectedBones -mi 2 -omi true -dr 10 -rui true";
rename spine03SkinClstr {$name + "_spine03SkinClstr"};
skinPercent -tv {$name + "_Spine04J"} 1    ($name + "_spine03SkinClstr") {$name + "_spine03Geo.vtx[120:199]"} {$name + "_spine03Geo.vtx[201]"};
skinPercent -tv {$name + "_spine03J"} 0.15 ($name + "_spine03SkinClstr") {$name + "_spine03Geo.vtx[100:119]"};
skinPercent -tv {$name + "_Spine04J"} 0.15 ($name + "_spine03SkinClstr") {$name + "_spine03Geo.vtx[80:99]"};
skinPercent -tv {$name + "_spine03J"} 1    ($name + "_spine03SkinClstr") {$name + "_spine03Geo.vtx[0:79]"} {$name + "_spine03Geo.vtx[200]"};

//UPPER BODY
parentConstraint -mo {$name + "_Spine04J"} {$name + "_spine04Geo"};
$HeadLoc = `xform -q -ws -rp {$name + "_HeadJ"}`;
move  $HeadLoc[0] $HeadLoc[1] $HeadLoc[2] {$name + "_HeadTopGeo.scalePivot"} {$name + "_HeadTopGeo.rotatePivot"} ;
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_HeadTopGeo"};
parentConstraint -mo {$name + "_HeadJ"} {$name + "_HeadTopGeo"};
$JawLoc = `xform -q -ws -rp {$name + "_JawJ"}`;
move  $JawLoc[0] $JawLoc[1] $JawLoc[2] {$name + "_HeadBtmGeo.scalePivot"} {$name + "_HeadBtmGeo.rotatePivot"} ;
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_HeadBtmGeo"};
parentConstraint -mo {$name + "_JawJ"} {$name + "_HeadBtmGeo"};
parentConstraint {$name + "_lEyeJ"} {$name + "_lEyeGeoG"};
delete {$name + "_lEyeGeoG_parentConstraint1"};
parentConstraint -mo {$name + "_HeadC"} {$name + "_lEyeGeoG"};
parentConstraint {$name + "_rEyeJ"} {$name + "_rEyeGeoG"};
delete {$name + "_rEyeGeoG_parentConstraint1"};
parentConstraint -mo {$name + "_HeadC"} {$name + "_rEyeGeoG"};
orientConstraint {$name + "_lEyeJ"} {$name + "_lEyeGeo"};
orientConstraint {$name + "_rEyeJ"} {$name + "_rEyeGeo"};

select -hi {$name + "_geoSkinG"};
pickWalk -d up;
string $selectedList[] = `ls -sl`;
string $currentObject;
for ($currentObject in $selectedList)
{
setAttr -l false -k true {$currentObject + ".tx"};
setAttr -l false -k true {$currentObject + ".ty"};
setAttr -l false -k true {$currentObject + ".tz"};
setAttr -l false -k true {$currentObject + ".rx"};
setAttr -l false -k true {$currentObject + ".ry"};
setAttr -l false -k true {$currentObject + ".rz"};
setAttr -l false -k true {$currentObject + ".sx"};
setAttr -l false -k true {$currentObject + ".sy"};
setAttr -l false -k true {$currentObject + ".sz"};
setAttr -l false -k true {$currentObject + ".v"};
}

//LOCK TORSO
select -r {$name + "_rootGeo"} {$name + "_spine01Geo"} {$name + "_spine02Geo"} {$name + "_spine03Geo"} {$name + "_spine04Geo"} ;
string $selectedList[] = `ls -sl`;
string $currentObject;
for ($currentObject in $selectedList)
{
setAttr -l 1 -k 0 {$currentObject + ".tx"};
setAttr -l 1 -k 0 {$currentObject + ".ty"};
setAttr -l 1 -k 0 {$currentObject + ".tz"};
setAttr -l 1 -k 0 {$currentObject + ".rx"};
setAttr -l 1 -k 0 {$currentObject + ".ry"};
setAttr -l 1 -k 0 {$currentObject + ".rz"};
setAttr -l 1 -k 0 {$currentObject + ".sx"};
setAttr -l 1 -k 0 {$currentObject + ".sy"};
setAttr -l 1 -k 0 {$currentObject + ".sz"};
setAttr -l 1 -k 0 {$currentObject + ".v"};
}

//HEAD SCALE
scaleConstraint {$name + "_HeadC"} {$name + "_HeadTopGeo"};
parent {$name + "_HeadBtmGeo"} {$name + "_earsGeo"} {$name + "_HeadTopGeo"};
scaleConstraint {$name + "_HeadC"} {$name + "_lEyeGeoG"};
scaleConstraint {$name + "_HeadC"} {$name + "_rEyeGeoG"};


//ADD RADIUS
select {$name + "_lKneeGeo"} {$name + "_rKneeGeo"} {$name + "_lHipGeo"} {$name + "_rHipGeo"} {$name + "_lAnkleGeo"} {$name + "_rAnkleGeo"} {$name + "_lUprLegGeo"} {$name + "_lLwrLegGeo"}
{$name + "_rUprLegGeo"} {$name + "_rLwrLegGeo"} {$name + "_lElbowGeo"} {$name + "_rElbowGeo"} {$name + "_lShoulderGeo"} {$name + "_rShoulderGeo"} {$name + "_lLwrArmGeo"}
{$name + "_lUprArmGeo"} {$name + "_rLwrArmGeo"} {$name + "_rUprArmGeo"} ;
$limbGeo = `ls -sl`;
string $currentGeo;

for ($currentGeo in $limbGeo)
{
addAttr -ln "radius"  -at double  -min 0 $currentGeo;
setAttr -e-keyable true {$currentGeo + ".radius"};
setAttr {$currentGeo + ".radius"} 1.5;
}

addAttr -ln "radius"  -at double  -min 0 {$name + "_NeckGeo"};
setAttr -e-keyable true {$name + "_NeckGeo.radius"};
$GeoInputs = `listHistory {$name + "_NeckGeo"}`;
$NeckRadius = `getAttr {$GeoInputs[6] + ".radius"}`;
setAttr {$name + "_NeckGeo.radius"} $NeckRadius;
$GeoInputs = `listHistory {$name + "_NeckGeo"}`;
connectAttr -force {$name + "_NeckGeo.radius"} {$GeoInputs[6] + ".radius"};

//TOON LEGS
if (`objExists ($name + "_lHipCurveJ")`)
{
	parent -w {$name + "_lUprLegGeo"} {$name + "_lLwrLegGeo"} {$name + "_rUprLegGeo"} {$name + "_rLwrLegGeo"};
	delete {$name + "_lUprLegGeoG"} {$name + "_lLwrLegGeoG"} {$name + "_rUprLegGeoG"} {$name + "_rLwrLegGeoG"};
	select {$name + "_lKneeCurveJ"} {$name + "_lUpperLegCurveJ1"} {$name + "_lUpperLegCurveJ2"} {$name + "_lUpperLegCurveJ3"} {$name + "_lHipCurveJ"} {$name + "_lUprLegGeo"};
	newSkinCluster "-n lUprLegSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename lUprLegSkinClstr {$name + "_lUprLegSkinClstr"};
	select {$name + "_lAnkleJ"} {$name + "_lLowerLegCurveJ1"} {$name + "_lLowerLegCurveJ2"} {$name + "_lLowerLegCurveJ3"} {$name + "_lKneeCurveJ"} {$name + "_lLwrLegGeo"};
	newSkinCluster "-n lLwrLegSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename lLwrLegSkinClstr {$name + "_lLwrLegSkinClstr"};
	delete {$name + "_lKneeGeoG_parentConstraint1"};
	parentConstraint -mo {$name + "_lKneeCurveC"} {$name + "_lKneeGeoG"};

	select {$name + "_rKneeCurveJ"} {$name + "_rUpperLegCurveJ1"} {$name + "_rUpperLegCurveJ2"} {$name + "_rUpperLegCurveJ3"} {$name + "_rHipCurveJ"} {$name + "_rUprLegGeo"};
	newSkinCluster "-n  rUprLegSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename rUprLegSkinClstr {$name + "_rUprLegSkinClstr"};
	select {$name + "_rAnkleJ"} {$name + "_rLowerLegCurveJ1"} {$name + "_rLowerLegCurveJ2"} {$name + "_rLowerLegCurveJ3"} {$name + "_rKneeCurveJ"} {$name + "_rLwrLegGeo"};
	newSkinCluster "-n rLwrLegSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename rLwrLegSkinClstr {$name + "_rLwrLegSkinClstr"};
	delete {$name + "_rKneeGeoG_parentConstraint1"};
	parentConstraint -mo {$name + "_rKneeCurveC"} {$name + "_rKneeGeoG"};


select {$name + "_lUprLegGeo"} {$name + "_lLwrLegGeo"} {$name + "_rUprLegGeo"} {$name + "_rLwrLegGeo"};
$limbGeo = `ls -sl`;
string $currentGeo;

$GeoInputs = `listHistory {$name + "_lUprLegGeo"}`;
connectAttr -force {$name + "_lUprLegGeo.radius"} {$GeoInputs[9] + ".radius"};
$GeoInputs = `listHistory {$name + "_lLwrLegGeo"}`;
connectAttr -force {$name + "_lLwrLegGeo.radius"} {$GeoInputs[9] + ".radius"};

$GeoInputs = `listHistory {$name + "_rUprLegGeo"}`;
connectAttr -force {$name + "_rUprLegGeo.radius"} {$GeoInputs[10] + ".radius"};
$GeoInputs = `listHistory {$name + "_rLwrLegGeo"}`;
connectAttr -force {$name + "_rLwrLegGeo.radius"} {$GeoInputs[10] + ".radius"};

parent {$name + "_lKneeTwistLctr"} {$name + "_lAnkleAimLctr"} {$name + "_lKneeTwist75Lctr"}
{$name + "_lKneeTwist50Lctr"} {$name + "_lKneeTwist25Lctr"} {$name + "_rKneeTwistLctr"} {$name + "_rAnkleAimLctr"}
{$name + "_rKneeTwist75Lctr"} {$name + "_rKneeTwist50Lctr"} {$name + "_rKneeTwist25Lctr"} {$name + "_extraCurveNodesG"};

parent {$name + "_lUprLegGeo"} {$name + "_lLwrLegGeo"} {$name + "_rUprLegGeo"} {$name + "_rLwrLegGeo"} {$name + "_geoSkinG"};
}

else
{
$GeoInputs = `listHistory {$name + "_lUprLegGeo"}`;
connectAttr -force {$name + "_lUprLegGeo.radius"} {$GeoInputs[4] + ".radius"};
$GeoInputs = `listHistory {$name + "_lLwrLegGeo"}`;
connectAttr -force {$name + "_lLwrLegGeo.radius"} {$GeoInputs[4] + ".radius"};

$GeoInputs = `listHistory {$name + "_rUprLegGeo"}`;
connectAttr -force {$name + "_rUprLegGeo.radius"} {$GeoInputs[5] + ".radius"};
$GeoInputs = `listHistory {$name + "_rLwrLegGeo"}`;
connectAttr -force {$name + "_rLwrLegGeo.radius"} {$GeoInputs[5] + ".radius"};
}

select {$name + "_lKneeGeo"} {$name + "_rKneeGeo"} {$name + "_lHipGeo"} {$name + "_rHipGeo"} {$name + "_lAnkleGeo"} {$name + "_rAnkleGeo"};
$limbGeo = `ls -sl`;
string $currentGeo;

for ($currentGeo in $limbGeo)
{
$GeoInputs = `listHistory $currentGeo`;
connectAttr -force {$currentGeo + ".radius"} {$GeoInputs[1] + ".radius"};
}

//TOON ARMS
if (`objExists ($name + "_lShoulderCurveJ")`)
{
	parent -w {$name + "_lLwrArmGeo"} {$name + "_lUprArmGeo"} {$name + "_rLwrArmGeo"} {$name + "_rUprArmGeo"} ;
	delete {$name + "_lLwrArmGeoG"} {$name + "_lUprArmGeoG"} {$name + "_rLwrArmGeoG"} {$name + "_rUprArmGeoG"};
	select {$name + "_lElbowCurveJ"} {$name + "_lUpperArmCurveJ1"} {$name + "_lUpperArmCurveJ2"} {$name + "_lUpperArmCurveJ3"} {$name + "_lShoulderCurveJ"} {$name + "_lUprArmGeo"};
	newSkinCluster "-n lUprArmGeoSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename lUprArmGeoSkinClstr {$name + "_lUprArmGeoSkinClstr"};
	select {$name + "_lWristJ"} {$name + "_lLowerArmCurveJ1"} {$name + "_lLowerArmCurveJ2"} {$name + "_lLowerArmCurveJ3"} {$name + "_lElbowCurveJ"} {$name + "_lLwrArmGeo"};
	newSkinCluster "-n lLwrArmGeoSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename lLwrArmGeoSkinClstr {$name + "_lLwrArmGeoSkinClstr"};
	delete {$name + "_lElbowGeoG_parentConstraint1"};
	parentConstraint -mo {$name + "_lElbowCurveC"} {$name + "_lElbowGeoG"};

	select {$name + "_rElbowCurveJ"} {$name + "_rUpperArmCurveJ1"} {$name + "_rUpperArmCurveJ2"} {$name + "_rUpperArmCurveJ3"} {$name + "_rShoulderCurveJ"} {$name + "_rUprArmGeo"};
	newSkinCluster "-n rUprArmGeoSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename rUprArmGeoSkinClstr {$name + "_rUprArmGeoSkinClstr"};
	select {$name + "_rWristJ"} {$name + "_rLowerArmCurveJ1"} {$name + "_rLowerArmCurveJ2"} {$name + "_rLowerArmCurveJ3"} {$name + "_rElbowCurveJ"} {$name + "_rLwrArmGeo"};
	newSkinCluster "-n rLwrArmGeoSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
	rename rLwrArmGeoSkinClstr {$name + "_rLwrArmGeoSkinClstr"};
	delete {$name + "_rElbowGeoG_parentConstraint1"};
	parentConstraint -mo {$name + "_rElbowCurveC"} {$name + "_rElbowGeoG"};

select {$name + "_lLwrArmGeo"} {$name + "_lUprArmGeo"} {$name + "_rLwrArmGeo"} {$name + "_rUprArmGeo"} ;
$limbGeo = `ls -sl`;
string $currentGeo;

$GeoInputs = `listHistory {$name + "_lUprArmGeo"}`;
connectAttr -force {$name + "_lUprArmGeo.radius"} {$GeoInputs[9] + ".radius"};
$GeoInputs = `listHistory {$name + "_lLwrArmGeo"}`;
connectAttr -force {$name + "_lLwrArmGeo.radius"} {$GeoInputs[9] + ".radius"};

$GeoInputs = `listHistory {$name + "_rUprArmGeo"}`;
connectAttr -force {$name + "_rUprArmGeo.radius"} {$GeoInputs[10] + ".radius"};
$GeoInputs = `listHistory {$name + "_rLwrArmGeo"}`;
connectAttr -force {$name + "_rLwrArmGeo.radius"} {$GeoInputs[10] + ".radius"};

parent {$name + "_lElbowTwistLctr"} {$name + "_lWristAimLctr"} {$name + "_lElbowTwist75Lctr"} {$name + "_lElbowTwist50Lctr"}
{$name + "_lElbowTwist25Lctr"} {$name + "_rElbowTwistLctr"} {$name + "_rWristAimLctr"} {$name + "_rElbowTwist75Lctr"} {$name + "_rElbowTwist50Lctr"}
{$name + "_rElbowTwist25Lctr"} {$name + "_extraCurveNodesG"};

parent {$name + "_lLwrArmGeo"} {$name + "_lUprArmGeo"} {$name + "_rLwrArmGeo"} {$name + "_rUprArmGeo"} {$name + "_geoSkinG"};
}

else
{
$GeoInputs = `listHistory {$name + "_lUprArmGeo"}`;
connectAttr -force {$name + "_lUprArmGeo.radius"} {$GeoInputs[4] + ".radius"};
$GeoInputs = `listHistory {$name + "_lLwrArmGeo"}`;
connectAttr -force {$name + "_lLwrArmGeo.radius"} {$GeoInputs[4] + ".radius"};

$GeoInputs = `listHistory {$name + "_rUprArmGeo"}`;
connectAttr -force {$name + "_rUprArmGeo.radius"} {$GeoInputs[5] + ".radius"};
$GeoInputs = `listHistory {$name + "_rLwrArmGeo"}`;
connectAttr -force {$name + "_rLwrArmGeo.radius"} {$GeoInputs[5] + ".radius"};
}


select {$name + "_lElbowGeo"} {$name + "_rElbowGeo"} {$name + "_lShoulderGeo"} {$name + "_rShoulderGeo"};
$limbGeo = `ls -sl`;
string $currentGeo;

for ($currentGeo in $limbGeo)
{
$GeoInputs = `listHistory $currentGeo`;
connectAttr -force {$currentGeo + ".radius"} {$GeoInputs[1] + ".radius"};
}

//LOCK AND HIDE GEO CHANNELS
select {$name + "_lKneeGeo"} {$name + "_rKneeGeo"} {$name + "_lHipGeo"} {$name + "_rHipGeo"} {$name + "_lAnkleGeo"} {$name + "_rAnkleGeo"} {$name + "_lUprLegGeo"} {$name + "_lLwrLegGeo"}
{$name + "_rUprLegGeo"} {$name + "_rLwrLegGeo"} {$name + "_lElbowGeo"} {$name + "_rElbowGeo"} {$name + "_lShoulderGeo"} {$name + "_rShoulderGeo"} {$name + "_lLwrArmGeo"}
{$name + "_lUprArmGeo"} {$name + "_rLwrArmGeo"} {$name + "_rUprArmGeo"} {$name + "_HeadTopGeo"} {$name + "_HeadBtmGeo"} {$name + "_earsGeo"} {$name + "_NeckGeo"} {$name + "_HeadTopGeo"}
{$name + "_HeadBtmGeo"} {$name + "_lHeelGeo"} {$name + "_lBallGeo"} {$name + "_rHeelGeo"} {$name + "_rBallGeo"};
$limbGeo = `ls -sl`;
string $currentGeo;
for ($currentGeo in $limbGeo)
{
setAttr -l 1 -k 0 {$currentGeo + ".tx"};
setAttr -l 1 -k 0 {$currentGeo + ".ty"};
setAttr -l 1 -k 0 {$currentGeo + ".tz"};
setAttr -l 1 -k 0 {$currentGeo + ".rx"};
setAttr -l 1 -k 0 {$currentGeo + ".ry"};
setAttr -l 1 -k 0 {$currentGeo + ".rz"};
setAttr -l 1 -k 0 {$currentGeo + ".sx"};
setAttr -l 1 -k 0 {$currentGeo + ".sy"};
setAttr -l 1 -k 0 {$currentGeo + ".sz"};
setAttr -l 1 -k 0 {$currentGeo + ".v"};
}

select {$name + "_lHand1Geo"} {$name + "_lHand2Geo"} {$name + "_rHand1Geo"} {$name + "_rHand2Geo"};
$limbGeo = `ls -sl`;
string $currentGeo;
for ($currentGeo in $limbGeo)
{
setAttr -l 1 -k 0 {$currentGeo + ".tx"};
setAttr -l 1 -k 0 {$currentGeo + ".ty"};
setAttr -l 1 -k 0 {$currentGeo + ".tz"};
setAttr -l 1 -k 0 {$currentGeo + ".rx"};
setAttr -l 1 -k 0 {$currentGeo + ".ry"};
setAttr -l 1 -k 0 {$currentGeo + ".rz"};
setAttr -l 1 -k 0 {$currentGeo + ".sx"};
setAttr -l 1 -k 0 {$currentGeo + ".sz"};
setAttr -l 1 -k 0 {$currentGeo + ".v"};
}

//FINGERS
select {$name + "_lFinger1J1Geo"} {$name + "_lFinger1J2Geo"} {$name + "_lFinger1J3Geo"} {$name + "_rFinger1J1Geo"} {$name + "_rFinger1J2Geo"} {$name + "_rFinger1J3Geo"};
if (`objExists ($name + "_lFinger2J1Geo")`)
	{select -add {$name + "_lFinger2J1Geo"} {$name + "_lFinger2J2Geo"} {$name + "_lFinger2J3Geo"} {$name + "_rFinger2J1Geo"} {$name + "_rFinger2J2Geo"} {$name + "_rFinger2J3Geo"};}
if (`objExists ($name + "_lFinger3J1Geo")`)
	{select -add {$name + "_lFinger3J1Geo"} {$name + "_lFinger3J2Geo"} {$name + "_lFinger3J3Geo"} {$name + "_rFinger3J1Geo"} {$name + "_rFinger3J2Geo"} {$name + "_rFinger3J3Geo"};}
if (`objExists ($name + "_lFinger4J1Geo")`)
	{select -add {$name + "_lFinger4J1Geo"} {$name + "_lFinger4J2Geo"} {$name + "_lFinger4J3Geo"} {$name + "_rFinger4J1Geo"} {$name + "_rFinger4J2Geo"} {$name + "_rFinger4J3Geo"};}
if (`objExists ($name + "_lFinger5J1Geo")`)
	{select -add {$name + "_lFinger5J1Geo"} {$name + "_lFinger5J2Geo"} {$name + "_lFinger5J3Geo"} {$name + "_rFinger5J1Geo"} {$name + "_rFinger5J2Geo"} {$name + "_rFinger5J3Geo"};}
if (`objExists ($name + "_lFinger6J1Geo")`)
	{select -add {$name + "_lFinger6J1Geo"} {$name + "_lFinger6J2Geo"} {$name + "_lFinger6J3Geo"} {$name + "_rFinger6J1Geo"} {$name + "_rFinger6J2Geo"} {$name + "_rFinger6J3Geo"};}
if (`objExists ($name + "_lFinger7J1Geo")`)
	{select -add {$name + "_lFinger7J1Geo"} {$name + "_lFinger7J2Geo"} {$name + "_lFinger7J3Geo"} {$name + "_rFinger7J1Geo"} {$name + "_rFinger7J2Geo"} {$name + "_rFinger7J3Geo"};}
if (`objExists ($name + "_lFinger8J1Geo")`)
	{select -add {$name + "_lFinger8J1Geo"} {$name + "_lFinger8J2Geo"} {$name + "_lFinger8J3Geo"} {$name + "_rFinger8J1Geo"} {$name + "_rFinger8J2Geo"} {$name + "_rFinger8J3Geo"};}
if (`objExists ($name + "_lFinger9J1Geo")`)
	{select -add {$name + "_lFinger9J1Geo"} {$name + "_lFinger9J2Geo"} {$name + "_lFinger9J3Geo"} {$name + "_rFinger9J1Geo"} {$name + "_rFinger9J2Geo"} {$name + "_rFinger9J3Geo"};}
if (`objExists ($name + "_lThumbJ1Geo")`)
	{select -add {$name + "_lThumbJ1Geo"} {$name + "_lThumbJ2Geo"} {$name + "_lThumbJ3Geo"} {$name + "_rThumbJ1Geo"} {$name + "_rThumbJ2Geo"} {$name + "_rThumbJ3Geo"};}

//TOES
if (`objExists ($name + "_lToe01J1Geo")`)
	{select -add {$name + "_lToe01J1Geo"} {$name + "_lToe01J2Geo"} {$name + "_rToe01J1Geo"} {$name + "_rToe01J2Geo"};}
if (`objExists ($name + "_lToe02J1Geo")`)
	{select -add {$name + "_lToe02J1Geo"} {$name + "_lToe02J2Geo"} {$name + "_lToe02J3Geo"} {$name + "_rToe02J1Geo"} {$name + "_rToe02J2Geo"} {$name + "_rToe02J3Geo"};}
if (`objExists ($name + "_lToe03J1Geo")`)
	{select -add {$name + "_lToe03J1Geo"} {$name + "_lToe03J2Geo"} {$name + "_lToe03J3Geo"} {$name + "_rToe03J1Geo"} {$name + "_rToe03J2Geo"} {$name + "_rToe03J3Geo"};}
if (`objExists ($name + "_lToe04J1Geo")`)
	{select -add {$name + "_lToe04J1Geo"} {$name + "_lToe04J2Geo"} {$name + "_lToe04J3Geo"} {$name + "_rToe04J1Geo"} {$name + "_rToe04J2Geo"} {$name + "_rToe04J3Geo"};}
if (`objExists ($name + "_lToe05J1Geo")`)
	{select -add {$name + "_lToe05J1Geo"} {$name + "_lToe05J2Geo"} {$name + "_lToe05J3Geo"} {$name + "_rToe05J1Geo"} {$name + "_rToe05J2Geo"} {$name + "_rToe05J3Geo"};}
if (`objExists ($name + "_lToe06J1Geo")`)
	{select -add {$name + "_lToe06J1Geo"} {$name + "_lToe06J2Geo"} {$name + "_lToe06J3Geo"} {$name + "_rToe06J1Geo"} {$name + "_rToe06J2Geo"} {$name + "_rToe06J3Geo"};}
if (`objExists ($name + "_lToe07J1Geo")`)
	{select -add {$name + "_lToe07J1Geo"} {$name + "_lToe07J2Geo"} {$name + "_lToe07J3Geo"} {$name + "_rToe07J1Geo"} {$name + "_rToe07J2Geo"} {$name + "_rToe07J3Geo"};}
if (`objExists ($name + "_lToe08J1Geo")`)
	{select -add {$name + "_lToe08J1Geo"} {$name + "_lToe08J2Geo"} {$name + "_lToe08J3Geo"} {$name + "_rToe08J1Geo"} {$name + "_rToe08J2Geo"} {$name + "_rToe08J3Geo"};}
if (`objExists ($name + "_lToe09J1Geo")`)
	{select -add {$name + "_lToe09J1Geo"} {$name + "_lToe09J2Geo"} {$name + "_lToe09J3Geo"} {$name + "_rToe09J1Geo"} {$name + "_rToe09J2Geo"} {$name + "_rToe09J3Geo"};}
if (`objExists ($name + "_lToe10J1Geo")`)
	{select -add {$name + "_lToe10J1Geo"} {$name + "_lToe10J2Geo"} {$name + "_lToe10J3Geo"} {$name + "_rToe10J1Geo"} {$name + "_rToe10J2Geo"} {$name + "_rToe10J3Geo"};}


$limbGeo = `ls -sl`;
string $currentGeo;
for ($currentGeo in $limbGeo)
{
setAttr -l 1 -k 0 {$currentGeo + ".tx"};
setAttr -l 1 -k 0 {$currentGeo + ".ty"};
setAttr -l 1 -k 0 {$currentGeo + ".tz"};
setAttr -l 1 -k 0 {$currentGeo + ".rx"};
setAttr -l 1 -k 0 {$currentGeo + ".ry"};
setAttr -l 1 -k 0 {$currentGeo + ".rz"};
setAttr -l 1 -k 0 {$currentGeo + ".sx"};
setAttr -l 1 -k 0 {$currentGeo + ".v"};

}

//EYES
addAttr -ln "eyeWidth"  -at double  -min 0.1 -dv 1 {$name + "_lEyeGeo"};
setAttr -e-keyable true {$name + "_lEyeGeo.eyeWidth"};
addAttr -ln "eyeHeight"  -at double  -min 0.1 -dv 1 {$name + "_lEyeGeo"};
setAttr -e-keyable true {$name + "_lEyeGeo.eyeHeight"};
addAttr -ln "eyeDepth"  -at double  -min 0.1 -dv 1 {$name + "_lEyeGeo"};
setAttr -e-keyable true {$name + "_lEyeGeo.eyeDepth"};
connectAttr -f {$name + "_lEyeGeo.eyeWidth"} {$name + "_lEyeGeoG2.sx"};
connectAttr -f {$name + "_lEyeGeo.eyeHeight"} {$name + "_lEyeGeoG2.sy"};
connectAttr -f {$name + "_lEyeGeo.eyeDepth"} {$name + "_lEyeGeoG2.sz"};


addAttr -ln "eyeWidth"  -at double  -min 0.1 -dv 1 {$name + "_rEyeGeo"};
setAttr -e-keyable true {$name + "_rEyeGeo.eyeWidth"};
addAttr -ln "eyeHeight"  -at double  -min 0.1 -dv 1 {$name + "_rEyeGeo"};
setAttr -e-keyable true {$name + "_rEyeGeo.eyeHeight"};
addAttr -ln "eyeDepth"  -at double  -min 0.1 -dv 1 {$name + "_rEyeGeo"};
setAttr -e-keyable true {$name + "_rEyeGeo.eyeDepth"};
connectAttr -f {$name + "_rEyeGeo.eyeWidth"} {$name + "_rEyeGeoG2.sx"};
connectAttr -f {$name + "_rEyeGeo.eyeHeight"} {$name + "_rEyeGeoG2.sy"};
connectAttr -f {$name + "_rEyeGeo.eyeDepth"} {$name + "_rEyeGeoG2.sz"};

select {$name + "_lEyeGeo"} {$name + "_rEyeGeo"} {$name + "_lEyeLidBtmGeo"} {$name + "_lEyeLidTopGeo"} {$name + "_rEyeLidBtmGeo"} {$name + "_rEyeLidTopGeo"};
$limbGeo = `ls -sl`;
string $currentGeo;
for ($currentGeo in $limbGeo)
{
setAttr -l 1 -k 0 {$currentGeo + ".tx"};
setAttr -l 1 -k 0 {$currentGeo + ".ty"};
setAttr -l 1 -k 0 {$currentGeo + ".tz"};
setAttr -l 1 -k 0 {$currentGeo + ".rx"};
setAttr -l 1 -k 0 {$currentGeo + ".ry"};
setAttr -l 1 -k 0 {$currentGeo + ".rz"};
setAttr -l 1 -k 0 {$currentGeo + ".sx"};
setAttr -l 1 -k 0 {$currentGeo + ".sy"};
setAttr -l 1 -k 0 {$currentGeo + ".sz"};
setAttr -l 1 -k 0 {$currentGeo + ".v"};

}

//EARS
$earInputs = `listHistory {$name + "_earsGeo"}`;

addAttr -ln "radius"  -at double  -min .001 -dv .1 {$name + "_earsGeo"};
setAttr -e-keyable true {$name + "_earsGeo.radius"};
connectAttr -f {$name + "_earsGeo.radius"} {$earInputs[1] + ".radius"};

addAttr -ln "width"  -at double  -min .001 -dv .85 {$name + "_earsGeo"};
setAttr -e-keyable true {$name + "_earsGeo.width"};
connectAttr -f {$name + "_earsGeo.width"} {$earInputs[1] + ".height"};

parent {$name + "_geoSkinG"} {$name + "_MainC"};
setAttr {$name + "_scaleGeoG.inheritsTransform"} 0;
setAttr {$name + "_geoSkinG.inheritsTransform"} 0;


//ADD COLOURS
shadingNode -n {$name + "_geoColour01"} -asShader lambert;
sets -renderable true -noSurfaceShader true -empty -name {$name + "_geoColour01SG"};
connectAttr -f {$name + "_geoColour01.outColor"} {$name + "_geoColour01SG.surfaceShader"};
setAttr {$name + "_geoColour01.color"} -type double3 0.84 0.79 0.58 ;

parent -w {$name + "_HeadBtmGeo_parentConstraint1"} {$name + "_HeadTopGeo_parentConstraint1"} {$name + "_HeadTopGeo_scaleConstraint1"} {$name + "_spine04Geo_parentConstraint1"};
select {$name + "*Geo"};
select -d {$name + "_lEyeGeo"} {$name + "_rEyeGeo"};

sets -e -forceElement {$name + "_geoColour01SG"};

shadingNode -n {$name + "_geoColour02"} -asShader lambert;
sets -renderable true -noSurfaceShader true -empty -name {$name + "_geoColour02SG"};
connectAttr -f {$name + "_geoColour02.outColor"} {$name + "_geoColour02SG.surfaceShader"};
setAttr {$name + "_geoColour02.color"} -type double3 .5 0.44 0.3 ;

select -r {$name + "_lElbowGeo"} {$name + "_lShoulderGeo"} {$name + "_rShoulderGeo"}{$name + "_rElbowGeo"}
{$name + "_lKneeGeo"} {$name + "_rKneeGeo"} {$name + "_lAnkleGeo"} {$name + "_rAnkleGeo"} ;
sets -e -forceElement {$name + "_geoColour02SG"};

parent {$name + "_HeadBtmGeo_parentConstraint1"} {$name + "_HeadBtmGeo"};
parent {$name + "_HeadTopGeo_parentConstraint1"} {$name + "_HeadTopGeo"};
parent {$name + "_HeadTopGeo_scaleConstraint1"}   {$name + "_HeadTopGeo"};
parent {$name + "_spine04Geo_parentConstraint1"} {$name + "_spine04Geo"};

//*/
changeLinearUnit $currentUnit;
}

//ASSIGN COLORS
global proc assignColors()
{
global string $charName;
string $name = `textField -q -text $charName`;
//LEFT SIDE
select {$name + "_l*C"};
pickWalk -d down;
string $leftControls[] = `ls -sl`;
string $currentControl;
for ($currentControl in $leftControls)
{
	setAttr {$currentControl + ".overrideEnabled"} 1;
	setAttr {$currentControl + ".overrideColor"} 14;
}

//RIGHT SIDE
select {$name + "_r*C"};
pickWalk -d down;
string $rightControls[] = `ls -sl`;
string $currentControl;
for ($currentControl in $rightControls)
{
	setAttr {$currentControl + ".overrideEnabled"} 1;
	setAttr {$currentControl + ".overrideColor"} 13;
}
//MAIN CONTROL
setAttr {$name + "_MainCShape.overrideEnabled"} 1;
setAttr {$name + "_MainCShape.overrideColor"} 6;

setAttr {$name + "_Outer1Shape.v"} 1;
setAttr {$name + "_Outer2Shape.v"} 1;
setAttr {$name + "_Outer3Shape.v"} 1;
setAttr {$name + "_Outer4Shape.v"} 1;
setAttr {$name + "_Arrow1Shape.v"} 1;
setAttr {$name + "_Arrow2Shape.v"} 1;
setAttr {$name + "_Arrow3Shape.v"} 1;
setAttr {$name + "_Arrow4Shape.v"} 1;

setAttr {$name + "_Outer1Shape.overrideEnabled"} 1;
setAttr {$name + "_Outer2Shape.overrideEnabled"} 1;
setAttr {$name + "_Outer3Shape.overrideEnabled"} 1;
setAttr {$name + "_Outer4Shape.overrideEnabled"} 1;
setAttr {$name + "_Arrow1Shape.overrideEnabled"} 1;
setAttr {$name + "_Arrow2Shape.overrideEnabled"} 1;
setAttr {$name + "_Arrow3Shape.overrideEnabled"} 1;
setAttr {$name + "_Arrow4Shape.overrideEnabled"} 1;

setAttr {$name + "_Outer1Shape.overrideColor"} 6;
setAttr {$name + "_Outer2Shape.overrideColor"} 6;
setAttr {$name + "_Outer3Shape.overrideColor"} 6;
setAttr {$name + "_Outer4Shape.overrideColor"} 6;
setAttr {$name + "_Arrow1Shape.overrideColor"} 6;
setAttr {$name + "_Arrow2Shape.overrideColor"} 6;
setAttr {$name + "_Arrow3Shape.overrideColor"} 6;
setAttr {$name + "_Arrow4Shape.overrideColor"} 6;


}

global proc int checkName(string $validate)
{
	string $nameMatch = `match "^[a-zA-Z][0-9a-zA-Z_]*$" $validate`;
	int $goodMatch = ! `strcmp $nameMatch $validate`;
	
	return $goodMatch;
}

global proc prompts()
{
global string $charName;
string $name = `textField -q -text $charName`;
int $nameSize = `size $name`;

if ($nameSize == "0")
	{
		string $returnVal_Generate = `confirmDialog
	-title "Character Rig Needs a Name!"
		-message "You must enter a name for the rig in\nStep 2.1: Character Name text field.\n"
		-button "OK"
		-defaultButton "OK"
		-cancelButton "OK"`;
	}

else if (! checkName($name))
	{
		string $returnVal_Generate = `confirmDialog
	-title "The Rig's Name is Invalid!"
		-message "A valid name must begin with a letter.\n    The rest of the name may only contain\nletters, numbers and/or underscores.\n"
		-button "OK"
		-defaultButton "OK"
		-cancelButton "OK"`;
	}
else if (`objExists ($name)`)
	{
		string $returnVal_Generate = `confirmDialog
	-title "The Rig's Name is not Unique!"
	-message "A rig already exists with that name.\nYou must create a unique name.\n"
		-button "OK"
		-defaultButton "OK"
		-cancelButton "OK"`;
	}
else
	{
		generateRig;
	}
}
	
global proc generateRig()
{
	
	//CHARACTER NAME
global string $charName;
string $name = `textField -q -text $charName`;

	if (`objExists  DSN_MAIN`)
	{

	string $returnVal_Generate = `confirmDialog
	-title "Warning: Have you saved your file?"
		-message "Generating the rig may not be undoable. \n \nClick Go Back to go back and save, or Generate Rig to generate rig"
		-button "Generate Rig"
		-button "Go Back"
		-defaultButton "Generate Rig"
		-cancelButton "Go Back"`;
	
	if ($returnVal_Generate == "Generate Rig")
	{
	print "BUILDING ";
	print $name;
	print " RIG...\n";

string $currentUnit = `currentUnit -query -linear`;
if ($currentUnit != "cm")
{
changeLinearUnit "centimeter";
}



//TURN OFF REFLECTION!
symmetricModelling -e -symmetry 0;

//DELETE BUGGY CONSTRAINT
delete DSN_Spine01G_pointConstraint1 DSN_Spine02G_pointConstraint1 DSN_Spine03G_pointConstraint1;

//RENAME ANYTHING DSN
rename DSN_lFootInTilt {$name + "_lFootInTilt"};
rename DSN_lFootOutTilt {$name + "_lFootOutTilt"};
rename DSN_lFootHeelPivot{$name + "_lFootHeelPivot"};
rename DSN_rFootInTilt {$name + "_rFootInTilt"};
rename DSN_rFootOutTilt {$name + "_rFootOutTilt"};
rename DSN_rFootHeelPivot{$name + "_rFootHeelPivot"};

//UNLOCK MAIN CONTROL
setAttr -l false -k true -channelBox false "DSN_MAIN.tx";
setAttr -l false -k true -channelBox false "DSN_MAIN.ty";
setAttr -l false -k true -channelBox false "DSN_MAIN.tz";
setAttr -l false -k true -channelBox false "DSN_MAIN.rx";
setAttr -l false -k true -channelBox false "DSN_MAIN.ry";
setAttr -l false -k true -channelBox false "DSN_MAIN.rz";


////////////////CREATE JOINTS////////////////////////////////////////////

select {$name + "_lFootInTilt"} {$name + "_lFootOutTilt"} {$name + "_lFootHeelPivot"}
{$name + "_rFootInTilt"} {$name + "_rFootOutTilt"} {$name + "_rFootHeelPivot"};
string $selectedList[] = `ls -sl`;
string $currentObject;
for ($currentObject in $selectedList)
{
setAttr -l false -k true {$currentObject + ".tx"};
setAttr -l false -k true {$currentObject + ".ty"};
setAttr -l false -k true {$currentObject + ".tz"};
setAttr -l false -k true {$currentObject + ".rx"};
setAttr -l false -k true {$currentObject + ".ry"};
setAttr -l false -k true {$currentObject + ".rz"};
setAttr -l false -k true {$currentObject + ".sx"};
setAttr -l false -k true {$currentObject + ".sy"};
setAttr -l false -k true {$currentObject + ".sz"};
}
parent -w;

select -cl;
joint -n {$name + "_ROOTJ"};
pointConstraint DSN_ROOT {$name + "_ROOTJ"};
delete {$name + "_ROOTJ_pointConstraint1"};

select {$name + "_ROOTJ"};
joint -n {$name + "_Spine01J"};
pointConstraint DSN_Spine01 {$name + "_Spine01J"};

select {$name + "_Spine01J"};
joint -n {$name + "_Spine02J"};
pointConstraint DSN_Spine02 {$name + "_Spine02J"};

select {$name + "_Spine02J"};
joint -n {$name + "_Spine03J"};
pointConstraint DSN_Spine03 {$name + "_Spine03J"};

select {$name + "_Spine03J"};
joint -n {$name + "_Spine04J"};
pointConstraint DSN_Spine04 {$name + "_Spine04J"};

select {$name + "_Spine04J"};
joint -n {$name + "_Neck01J"};
pointConstraint DSN_Neck {$name + "_Neck01J"};

select {$name + "_Neck01J"};
joint -n {$name + "_HeadJ"};
parentConstraint DSN_Head {$name + "_HeadJ"};

select {$name + "_Neck01J"};
joint -n {$name + "_Neck02J"};
parentConstraint {$name + "_Neck01J"} {$name + "_HeadJ"} {$name + "_Neck02J"};
delete {$name + "_Neck02J_parentConstraint1"};

select {$name + "_HeadJ"};
joint -n {$name + "_HeadTipJ"};
pointConstraint DSN_HeadTip {$name + "_HeadTipJ"};

select {$name + "_HeadJ"};
joint -n {$name + "_JawJ"};
setAttr {$name + "_JawJ.segmentScaleCompensate"} 0;
pointConstraint DSN_Jaw {$name + "_JawJ"};

select {$name + "_JawJ"};
joint -n {$name + "_JawTipJ"};
pointConstraint DSN_JawTip {$name + "_JawTipJ"};

select {$name + "_HeadJ"};
joint -n {$name + "_lEyeJ"};
setAttr {$name + "_lEyeJ.segmentScaleCompensate"} 0;
pointConstraint DSN_lEye {$name + "_lEyeJ"};

select {$name + "_HeadJ"};
joint -n {$name + "_rEyeJ"};
setAttr {$name + "_rEyeJ.segmentScaleCompensate"} 0;
pointConstraint DSN_rEye {$name + "_rEyeJ"};

//////////////////////LEFT ARM//////////////////////
select {$name + "_Spine04J"};
joint -n {$name + "_lClavicleJ"};
pointConstraint DSN_lClavicle {$name + "_lClavicleJ"};

select {$name + "_lClavicleJ"};
joint -n {$name + "_lShoulderJ"};
pointConstraint DSN_lShoulder {$name + "_lShoulderJ"};

select {$name + "_lShoulderJ"};
joint -n {$name + "_lElbowJ"};
pointConstraint DSN_lElbow {$name + "_lElbowJ"};

select {$name + "_lElbowJ"};
joint -n {$name + "_lWristJ"};
pointConstraint DSN_lWrist {$name + "_lWristJ"};
$lWristJRotation = `xform -q -ro DSN_lWrist`;
setAttr {$name + "_lWristJ.jointOrientX"} $lWristJRotation[0];
setAttr {$name + "_lWristJ.jointOrientY"} $lWristJRotation[1];
setAttr {$name + "_lWristJ.jointOrientZ"} $lWristJRotation[2];

select {$name + "_lElbowJ"};
joint -n {$name + "_lWristJDummy"};
pointConstraint DSN_lWrist {$name + "_lWristJDummy"};
setAttr {$name + "_lWristJDummy.jointOrientX"} $lWristJRotation[0];
setAttr {$name + "_lWristJDummy.jointOrientY"} $lWristJRotation[1];
setAttr {$name + "_lWristJDummy.jointOrientZ"} $lWristJRotation[2];

//LEFT THUMB
if (`objExists DSN_lThumbJ1`)
{
select -cl;
joint -n {$name + "_lThumbJ1"};
parentConstraint DSN_lThumbJ1 {$name + "_lThumbJ1"};

select {$name + "_lThumbJ1"};
joint -n {$name + "_lThumbJ2"};
parentConstraint DSN_lThumbJ2 {$name + "_lThumbJ2"};

select {$name + "_lThumbJ2"};
joint -n {$name + "_lThumbJ3"};
parentConstraint DSN_lThumbJ3 {$name + "_lThumbJ3"};

select {$name + "_lThumbJ3"};
joint -n {$name + "_lThumbJTip"};
parentConstraint DSN_lThumbJTip {$name + "_lThumbJTip"};
parent {$name + "_lThumbJ1"} {$name + "_lWristJ"};
}

//LEFT FINGERS
if (`objExists DSN_lFinger1J1`)
{
select -cl;
joint -n {$name + "_lFinger1J1"};
parentConstraint DSN_lFinger1J1 {$name + "_lFinger1J1"};

select {$name + "_lFinger1J1"};
joint -n {$name + "_lFinger1J2"};
parentConstraint DSN_lFinger1J2 {$name + "_lFinger1J2"};

select {$name + "_lFinger1J2"};
joint -n {$name + "_lFinger1J3"};
parentConstraint DSN_lFinger1J3 {$name + "_lFinger1J3"};

select {$name + "_lFinger1J3"};
joint -n {$name + "_lFinger1JTip"};
parentConstraint DSN_lFinger1JTip {$name + "_lFinger1JTip"};
parent {$name + "_lFinger1J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger2J1`)
{
select -cl;
joint -n {$name + "_lFinger2J1"};
parentConstraint DSN_lFinger2J1 {$name + "_lFinger2J1"};

select {$name + "_lFinger2J1"};
joint -n {$name + "_lFinger2J2"};
parentConstraint DSN_lFinger2J2 {$name + "_lFinger2J2"};

select {$name + "_lFinger2J2"};
joint -n {$name + "_lFinger2J3"};
parentConstraint DSN_lFinger2J3 {$name + "_lFinger2J3"};

select {$name + "_lFinger2J3"};
joint -n {$name + "_lFinger2JTip"};
parentConstraint DSN_lFinger2JTip {$name + "_lFinger2JTip"};
parent {$name + "_lFinger2J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger3J1`)
{
select -cl;
joint -n {$name + "_lFinger3J1"};
parentConstraint DSN_lFinger3J1 {$name + "_lFinger3J1"};

select {$name + "_lFinger3J1"};
joint -n {$name + "_lFinger3J2"};
parentConstraint DSN_lFinger3J2 {$name + "_lFinger3J2"}; 

select {$name + "_lFinger3J2"};
joint -n {$name + "_lFinger3J3"};
parentConstraint DSN_lFinger3J3 {$name + "_lFinger3J3"};

select {$name + "_lFinger3J3"};
joint -n {$name + "_lFinger3JTip"};
parentConstraint DSN_lFinger3JTip {$name + "_lFinger3JTip"};
parent {$name + "_lFinger3J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger4J1`)
{
select -cl;
joint -n {$name + "_lFinger4J1"};
parentConstraint DSN_lFinger4J1 {$name + "_lFinger4J1"};

select {$name + "_lFinger4J1"};
joint -n {$name + "_lFinger4J2"};
parentConstraint DSN_lFinger4J2 {$name + "_lFinger4J2"};

select {$name + "_lFinger4J2"};
joint -n {$name + "_lFinger4J3"};
parentConstraint DSN_lFinger4J3 {$name + "_lFinger4J3"};

select {$name + "_lFinger4J3"};
joint -n {$name + "_lFinger4JTip"};
parentConstraint DSN_lFinger4JTip {$name + "_lFinger4JTip"};
parent {$name + "_lFinger4J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger5J1`)
{
select -cl;
joint -n {$name + "_lFinger5J1"};
parentConstraint DSN_lFinger5J1 {$name + "_lFinger5J1"};

select {$name + "_lFinger5J1"};
joint -n {$name + "_lFinger5J2"};
parentConstraint DSN_lFinger5J2 {$name + "_lFinger5J2"}; 

select {$name + "_lFinger5J2"};
joint -n {$name + "_lFinger5J3"};
parentConstraint DSN_lFinger5J3 {$name + "_lFinger5J3"};

select {$name + "_lFinger5J3"};
joint -n {$name + "_lFinger5JTip"};
parentConstraint DSN_lFinger5JTip {$name + "_lFinger5JTip"};
parent {$name + "_lFinger5J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger6J1`)
{
select -cl;
joint -n {$name + "_lFinger6J1"};
parentConstraint DSN_lFinger6J1 {$name + "_lFinger6J1"};

select {$name + "_lFinger6J1"};
joint -n {$name + "_lFinger6J2"};
parentConstraint DSN_lFinger6J2 {$name + "_lFinger6J2"}; 

select {$name + "_lFinger6J2"};
joint -n {$name + "_lFinger6J3"};
parentConstraint DSN_lFinger6J3 {$name + "_lFinger6J3"};

select {$name + "_lFinger6J3"};
joint -n {$name + "_lFinger6JTip"};
parentConstraint DSN_lFinger6JTip {$name + "_lFinger6JTip"};
parent {$name + "_lFinger6J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger7J1`)
{
select -cl;
joint -n {$name + "_lFinger7J1"};
parentConstraint DSN_lFinger7J1 {$name + "_lFinger7J1"};

select {$name + "_lFinger7J1"};
joint -n {$name + "_lFinger7J2"};
parentConstraint DSN_lFinger7J2 {$name + "_lFinger7J2"};

select {$name + "_lFinger7J2"};
joint -n {$name + "_lFinger7J3"};
parentConstraint DSN_lFinger7J3 {$name + "_lFinger7J3"};

select {$name + "_lFinger7J3"};
joint -n {$name + "_lFinger7JTip"};
parentConstraint DSN_lFinger7JTip {$name + "_lFinger7JTip"};
parent {$name + "_lFinger7J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger8J1`)
{
select -cl;
joint -n {$name + "_lFinger8J1"};
parentConstraint DSN_lFinger8J1 {$name + "_lFinger8J1"};

select {$name + "_lFinger8J1"};
joint -n {$name + "_lFinger8J2"};
parentConstraint DSN_lFinger8J2 {$name + "_lFinger8J2"};

select {$name + "_lFinger8J2"};
joint -n {$name + "_lFinger8J3"};
parentConstraint DSN_lFinger8J3 {$name + "_lFinger8J3"};

select {$name + "_lFinger8J3"};
joint -n {$name + "_lFinger8JTip"};
parentConstraint DSN_lFinger8JTip {$name + "_lFinger8JTip"};
parent {$name + "_lFinger8J1"} {$name + "_lWristJ"};
}

if (`objExists DSN_lFinger9J1`)
{
select -cl;
joint -n {$name + "_lFinger9J1"};
parentConstraint DSN_lFinger9J1 {$name + "_lFinger9J1"};

select {$name + "_lFinger9J1"};
joint -n {$name + "_lFinger9J2"};
parentConstraint DSN_lFinger9J2 {$name + "_lFinger9J2"};

select {$name + "_lFinger9J2"};
joint -n {$name + "_lFinger9J3"};
parentConstraint DSN_lFinger9J3 {$name + "_lFinger9J3"};

select {$name + "_lFinger9J3"};
joint -n {$name + "_lFinger9JTip"};
parentConstraint DSN_lFinger9JTip {$name + "_lFinger9JTip"};
parent {$name + "_lFinger9J1"} {$name + "_lWristJ"};
}

//LEFT HAND JOINT
select {$name + "_lWristJ"};
joint -n {$name + "_lPalmJ"};
	select {$name + "_lWristJ"} {$name + "_lFinger1J1"};
if (`objExists ($name + "_lFinger2J1")`)
	{select -add {$name + "_lFinger2J1"};}
if (`objExists ($name + "_lFinger3J1")`)
	{select -add {$name + "_lFinger3J1"};}
if (`objExists ($name + "_lFinger4J1")`)
	{select -add {$name + "_lFinger4J1"};}
if (`objExists ($name + "_lFinger5J1")`)
	{select -add {$name + "_lFinger5J1"};}
if (`objExists ($name + "_lFinger6J1")`)
	{select -add {$name + "_lFinger6J1"};}
if (`objExists ($name + "_lFinger7J1")`)
	{select -add {$name + "_lFinger7J1"};}
if (`objExists ($name + "_lFinger8J1")`)
	{select -add {$name + "_lFinger8J1"};}
if (`objExists ($name + "_lFinger9J1")`)
	{select -add {$name + "_lFinger9J1"};}
select -add {$name + "_lPalmJ"};
pointConstraint -skip y -skip z;
$lFingers = size (`ls -sl`);
select -d {$name + "_lWristJ"};
$lFirstFingers = `ls -sl`;
setAttr {$name + "_lPalmJ_pointConstraint1." + $name + "_lWristJW0"} ($lFingers - 1);
delete {$name + "_lPalmJ_pointConstraint1"};
parent $lFirstFingers {$name + "_lPalmJ"};
select -hi $lFirstFingers;
$lFingerJoints = `ls -sl`;
delete -constraints $lFingerJoints;
makeIdentity -apply true -r 1 {$name + "_lPalmJ"};

//LEFT FOREARM JOINT
select -cl;
joint -n {$name + "_lForearmJ"};
pointConstraint {$name + "_lWristJ"} {$name + "_lElbowJ"} {$name + "_lForearmJ"};
delete {$name + "_lForearmJ_pointConstraint1"} ;
parent {$name + "_lForearmJ"} {$name + "_lElbowJ"};

//////////////////////RIGHT ARM//////////////////////
select {$name + "_Spine04J"};
joint -n {$name + "_rClavicleJ"};
pointConstraint DSN_rClavicle {$name + "_rClavicleJ"};

select {$name + "_rClavicleJ"};
joint -n {$name + "_rShoulderJ"};
pointConstraint DSN_rShoulder {$name + "_rShoulderJ"};

select {$name + "_rShoulderJ"};
joint -n {$name + "_rElbowJ"};
pointConstraint DSN_rElbow {$name + "_rElbowJ"};

select {$name + "_rElbowJ"};
joint -n {$name + "_rWristJ"};
pointConstraint DSN_rWrist {$name + "_rWristJ"};
$rWristJRotation = `xform -q -ro DSN_rWrist`;
setAttr {$name + "_rWristJ.jointOrientX"} ($rWristJRotation[0] - 180);
setAttr {$name + "_rWristJ.jointOrientY"} $rWristJRotation[1];
setAttr {$name + "_rWristJ.jointOrientZ"} $rWristJRotation[2];

select {$name + "_rElbowJ"};
joint -n {$name + "_rWristJDummy"};
pointConstraint DSN_rWrist {$name + "_rWristJDummy"};
setAttr {$name + "_rWristJDummy.jointOrientX"} ($rWristJRotation[0] - 180);
setAttr {$name + "_rWristJDummy.jointOrientY"} $rWristJRotation[1];
setAttr {$name + "_rWristJDummy.jointOrientZ"} $rWristJRotation[2];


//RIGHT THUMB
if (`objExists DSN_rThumbJ1`)
{
select -cl;
joint -n {$name + "_rThumbJ1"};
parentConstraint DSN_rThumbJ1 {$name + "_rThumbJ1"};

select {$name + "_rThumbJ1"};
joint -n {$name + "_rThumbJ2"};
parentConstraint DSN_rThumbJ2 {$name + "_rThumbJ2"};

select {$name + "_rThumbJ2"};
joint -n {$name + "_rThumbJ3"};
parentConstraint DSN_rThumbJ3 {$name + "_rThumbJ3"};

select {$name + "_rThumbJ3"};
joint -n {$name + "_rThumbJTip"};
parentConstraint DSN_rThumbJTip {$name + "_rThumbJTip"};
parent {$name + "_rThumbJ1"} {$name + "_rWristJ"};
}

//RIGHT FINGERS
if (`objExists DSN_rFinger1J1`)
{
select -cl;
joint -n {$name + "_rFinger1J1"};
parentConstraint DSN_rFinger1J1 {$name + "_rFinger1J1"};

select {$name + "_rFinger1J1"};
joint -n {$name + "_rFinger1J2"};
parentConstraint DSN_rFinger1J2 {$name + "_rFinger1J2"};

select {$name + "_rFinger1J2"};
joint -n {$name + "_rFinger1J3"};
parentConstraint DSN_rFinger1J3 {$name + "_rFinger1J3"};

select {$name + "_rFinger1J3"};
joint -n {$name + "_rFinger1JTip"};
parentConstraint DSN_rFinger1JTip {$name + "_rFinger1JTip"};
parent {$name + "_rFinger1J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger2J1`)
{
select -cl;
joint -n {$name + "_rFinger2J1"};
parentConstraint DSN_rFinger2J1 {$name + "_rFinger2J1"};

select {$name + "_rFinger2J1"};
joint -n {$name + "_rFinger2J2"};
parentConstraint DSN_rFinger2J2 {$name + "_rFinger2J2"};

select {$name + "_rFinger2J2"};
joint -n {$name + "_rFinger2J3"};
parentConstraint DSN_rFinger2J3 {$name + "_rFinger2J3"};

select {$name + "_rFinger2J3"};
joint -n {$name + "_rFinger2JTip"};
parentConstraint DSN_rFinger2JTip {$name + "_rFinger2JTip"};
parent {$name + "_rFinger2J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger3J1`)
{
select -cl;
joint -n {$name + "_rFinger3J1"};
parentConstraint DSN_rFinger3J1 {$name + "_rFinger3J1"};

select {$name + "_rFinger3J1"};
joint -n {$name + "_rFinger3J2"};
parentConstraint DSN_rFinger3J2 {$name + "_rFinger3J2"}; 

select {$name + "_rFinger3J2"};
joint -n {$name + "_rFinger3J3"};
parentConstraint DSN_rFinger3J3 {$name + "_rFinger3J3"};

select {$name + "_rFinger3J3"};
joint -n {$name + "_rFinger3JTip"};
parentConstraint DSN_rFinger3JTip {$name + "_rFinger3JTip"};
parent {$name + "_rFinger3J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger4J1`)
{
select -cl;
joint -n {$name + "_rFinger4J1"};
parentConstraint DSN_rFinger4J1 {$name + "_rFinger4J1"};

select {$name + "_rFinger4J1"};
joint -n {$name + "_rFinger4J2"};
parentConstraint DSN_rFinger4J2 {$name + "_rFinger4J2"};

select {$name + "_rFinger4J2"};
joint -n {$name + "_rFinger4J3"};
parentConstraint DSN_rFinger4J3 {$name + "_rFinger4J3"};

select {$name + "_rFinger4J3"};
joint -n {$name + "_rFinger4JTip"};
parentConstraint DSN_rFinger4JTip {$name + "_rFinger4JTip"};
parent {$name + "_rFinger4J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger5J1`)
{
select -cl;
joint -n {$name + "_rFinger5J1"};
parentConstraint DSN_rFinger5J1 {$name + "_rFinger5J1"};

select {$name + "_rFinger5J1"};
joint -n {$name + "_rFinger5J2"};
parentConstraint DSN_rFinger5J2 {$name + "_rFinger5J2"}; 

select {$name + "_rFinger5J2"};
joint -n {$name + "_rFinger5J3"};
parentConstraint DSN_rFinger5J3 {$name + "_rFinger5J3"};

select {$name + "_rFinger5J3"};
joint -n {$name + "_rFinger5JTip"};
parentConstraint DSN_rFinger5JTip {$name + "_rFinger5JTip"};
parent {$name + "_rFinger5J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger6J1`)
{
select -cl;
joint -n {$name + "_rFinger6J1"};
parentConstraint DSN_rFinger6J1 {$name + "_rFinger6J1"};

select {$name + "_rFinger6J1"};
joint -n {$name + "_rFinger6J2"};
parentConstraint DSN_rFinger6J2 {$name + "_rFinger6J2"}; 

select {$name + "_rFinger6J2"};
joint -n {$name + "_rFinger6J3"};
parentConstraint DSN_rFinger6J3 {$name + "_rFinger6J3"};

select {$name + "_rFinger6J3"};
joint -n {$name + "_rFinger6JTip"};
parentConstraint DSN_rFinger6JTip {$name + "_rFinger6JTip"};
parent {$name + "_rFinger6J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger7J1`)
{
select -cl;
joint -n {$name + "_rFinger7J1"};
parentConstraint DSN_rFinger7J1 {$name + "_rFinger7J1"};

select {$name + "_rFinger7J1"};
joint -n {$name + "_rFinger7J2"};
parentConstraint DSN_rFinger7J2 {$name + "_rFinger7J2"};

select {$name + "_rFinger7J2"};
joint -n {$name + "_rFinger7J3"};
parentConstraint DSN_rFinger7J3 {$name + "_rFinger7J3"};

select {$name + "_rFinger7J3"};
joint -n {$name + "_rFinger7JTip"};
parentConstraint DSN_rFinger7JTip {$name + "_rFinger7JTip"};
parent {$name + "_rFinger7J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger8J1`)
{
select -cl;
joint -n {$name + "_rFinger8J1"};
parentConstraint DSN_rFinger8J1 {$name + "_rFinger8J1"};

select {$name + "_rFinger8J1"};
joint -n {$name + "_rFinger8J2"};
parentConstraint DSN_rFinger8J2 {$name + "_rFinger8J2"};

select {$name + "_rFinger8J2"};
joint -n {$name + "_rFinger8J3"};
parentConstraint DSN_rFinger8J3 {$name + "_rFinger8J3"};

select {$name + "_rFinger8J3"};
joint -n {$name + "_rFinger8JTip"};
parentConstraint DSN_rFinger8JTip {$name + "_rFinger8JTip"};
parent {$name + "_rFinger8J1"} {$name + "_rWristJ"};
}

if (`objExists DSN_rFinger9J1`)
{
select -cl;
joint -n {$name + "_rFinger9J1"};
parentConstraint DSN_rFinger9J1 {$name + "_rFinger9J1"};

select {$name + "_rFinger9J1"};
joint -n {$name + "_rFinger9J2"};
parentConstraint DSN_rFinger9J2 {$name + "_rFinger9J2"};

select {$name + "_rFinger9J2"};
joint -n {$name + "_rFinger9J3"};
parentConstraint DSN_rFinger9J3 {$name + "_rFinger9J3"};

select {$name + "_rFinger9J3"};
joint -n {$name + "_rFinger9JTip"};
parentConstraint DSN_rFinger9JTip {$name + "_rFinger9JTip"};
parent {$name + "_rFinger9J1"} {$name + "_rWristJ"};
}

//RIGHT HAND JOINT
select {$name + "_rWristJ"};
joint -n {$name + "_rPalmJ"};
	select {$name + "_rWristJ"} {$name + "_rFinger1J1"};
if (`objExists ($name + "_rFinger2J1")`)
	{select -add {$name + "_rFinger2J1"};}
if (`objExists ($name + "_rFinger3J1")`)
	{select -add {$name + "_rFinger3J1"};}
if (`objExists ($name + "_rFinger4J1")`)
	{select -add {$name + "_rFinger4J1"};}
if (`objExists ($name + "_rFinger5J1")`)
	{select -add {$name + "_rFinger5J1"};}
if (`objExists ($name + "_rFinger6J1")`)
	{select -add {$name + "_rFinger6J1"};}
if (`objExists ($name + "_rFinger7J1")`)
	{select -add {$name + "_rFinger7J1"};}
if (`objExists ($name + "_rFinger8J1")`)
	{select -add {$name + "_rFinger8J1"};}
if (`objExists ($name + "_rFinger9J1")`)
	{select -add {$name + "_rFinger9J1"};}
select -add {$name + "_rPalmJ"};
pointConstraint -skip y -skip z;
$rFingers = size (`ls -sl`);
select -d {$name + "_rWristJ"};
$rFirstFingers = `ls -sl`;
setAttr {$name + "_rPalmJ_pointConstraint1." + $name + "_rWristJW0"} ($rFingers - 1);
delete {$name + "_rPalmJ_pointConstraint1"};
parent $rFirstFingers {$name + "_rPalmJ"};
select -hi $rFirstFingers;
$rFingerJoints = `ls -sl`;
delete -constraints $rFingerJoints;
makeIdentity -apply true -r 1 {$name + "_rPalmJ"};

//RIGHT FOREARM JOINT
select -cl;
joint -n {$name + "_rForearmJ"};
pointConstraint {$name + "_rWristJ"} {$name + "_rElbowJ"} {$name + "_rForearmJ"};
delete {$name + "_rForearmJ_pointConstraint1"} ;
parent {$name + "_rForearmJ"} {$name + "_rElbowJ"};

///////////////////////////LEFT LEG/////////////////////////
select {$name + "_ROOTJ"};
joint -n {$name + "_lHipJ"};
pointConstraint DSN_lHip {$name + "_lHipJ"};

select {$name + "_lHipJ"};
joint -n {$name + "_lKneeJ"};
pointConstraint DSN_lKnee {$name + "_lKneeJ"};

select {$name + "_lKneeJ"};
joint -n {$name + "_lAnkleJ"};
pointConstraint DSN_lAnkle {$name + "_lAnkleJ"};

select -cl;
joint -n {$name + "_lBallJ"};
select -add {$name + "_lAnkleJ"};
parent;
pointConstraint DSN_lBall {$name + "_lBallJ"};

select {$name + "_lBallJ"};
joint -n {$name + "_lToeJ"};
pointConstraint DSN_lToe {$name + "_lToeJ"};

///////////////////////////RIGHT LEG/////////////////////////
select {$name + "_ROOTJ"};
joint -n {$name + "_rHipJ"};
pointConstraint DSN_rHip {$name + "_rHipJ"};

select {$name + "_rHipJ"};
joint -n {$name + "_rKneeJ"};
pointConstraint DSN_rKnee {$name + "_rKneeJ"};

select {$name + "_rKneeJ"};
joint -n {$name + "_rAnkleJ"};
pointConstraint DSN_rAnkle {$name + "_rAnkleJ"};

select -cl;
joint -n {$name + "_rBallJ"};
select -add {$name + "_rAnkleJ"};
parent;
pointConstraint DSN_rBall {$name + "_rBallJ"};

select {$name + "_rBallJ"};
joint -n {$name + "_rToeJ"};
pointConstraint DSN_rToe {$name + "_rToeJ"};


//GET ATTRIBUTES OF WRIST ROTATIONS
$lWristRotation = `xform -q -ro DSN_lWrist`;
$rWristRotation = `xform -q -ro DSN_rWrist`;

//DELETE ALL CONSTRAINTS
select {$name + "_ROOTJ"};
select -hi;
$allJoints = `ls -sl`;
delete -constraints $allJoints;

parent -w {$name + "_lWristJ"};
makeIdentity -apply true -t 1 -r 1 -s 1;
parent -w {$name + "_rWristJ"};
makeIdentity -apply true -t 1 -r 1 -s 1;
parent -w {$name + "_Neck02J"};

/////////ORIENT JOINTS////////////
select {$name + "_ROOTJ"};
joint -e -oj xyz -secondaryAxisOrient yup -ch -zso;
joint -e -oj none -secondaryAxisOrient yup -zso;

//CENTER JOINTS
select {$name + "_Spine01J"} {$name + "_Spine02J"} {$name + "_Spine03J"} {$name + "_Neck01J"} {$name + "_HeadJ"};
joint -e -oj xyz -secondaryAxisOrient zdown -zso;

//ELBOWS
select {$name + "_lElbowJ"} {$name + "_rElbowJ"};
joint -e -oj xyz -zso;
$lElbowOrient = `getAttr {$name + "_lElbowJ.jointOrient"}`;
setAttr {$name + "_lElbowJ.jointOrientX"} ($lElbowOrient[0] - 90);
$rElbowOrient = `getAttr {$name + "_rElbowJ.jointOrient"}`;
setAttr {$name + "_rElbowJ.jointOrientX"} ($rElbowOrient[0] + 90);

//HANDS
select {$name + "_lPalmJ"} {$name + "_rPalmJ"};
joint -e -oj none -secondaryAxisOrient yup -zso;

//SPINE
select {$name + "_Spine04J"} {$name + "_lForearmJ"} {$name + "_rForearmJ"} {$name + "_lAnkleJ"} {$name + "_rAnkleJ"} {$name + "_Neck02J"};
joint -e -oj none -secondaryAxisOrient yup -zso;

//HIPS
select {$name + "_lHipJ"} {$name + "_lKneeJ"} {$name + "_rHipJ"} {$name + "_rKneeJ"};
joint -e -oj xyz -secondaryAxisOrient zup -zso;
joint -e -oj xyz -secondaryAxisOrient zup -zso;

spaceLocator -n {$name + "_lLegOrientLctr"};
parentConstraint DSN_lKnee {$name + "_lLegOrientLctr"};
delete {$name + "_lLegOrientLctr_parentConstraint1"};
$lKneeLength = `xform -q -t {$name + "_lKneeJ"}`;
$lAnkleLength = `xform -q -t {$name + "_lAnkleJ"}`;
$lLegLength[0] = (($lKneeLength[0] + $lAnkleLength[0]) /-3.5);
move -r -os 0 0 ($lLegLength[0] * -2) {$name + "_lLegOrientLctr"};

aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType"scene"
-skip y -skip z {$name + "_lLegOrientLctr"} {$name + "_lHipJ"};
delete {$name + "_lHipJ_aimConstraint1"};
$lHipRotate = `getAttr {$name + "_lHipJ.rotateX"}`;
setAttr {$name + "_lHipJ.rotateX"} 0;

aimConstraint -aimVector 0 1 0 -upVector 0 0 1 -worldUpType "none"
-skip y -skip z {$name + "_lLegOrientLctr"} {$name + "_lKneeJ"};
delete {$name + "_lKneeJ_aimConstraint1"};
$lKneeRotate = `getAttr {$name + "_lKneeJ.rotateX"}`;
setAttr {$name + "_lKneeJ.rotateX"} 0;

parent -w {$name + "_lKneeJ"};
parent -w {$name + "_lAnkleJ"};
$lKneeJOrient = `getAttr  {$name + "_lKneeJ.jointOrientX"} `;
$lHipJOrient = `getAttr  {$name + "_lHipJ.jointOrientX"} `;
setAttr {$name + "_lHipJ.jointOrientX"} ($lHipJOrient + $lHipRotate);
setAttr {$name + "_lKneeJ.jointOrientX"} ($lKneeJOrient + $lKneeRotate);

parent {$name + "_lKneeJ"} {$name + "_lHipJ"};
parent {$name + "_lAnkleJ"} {$name + "_lKneeJ"};
delete {$name + "_lLegOrientLctr"};

///////////////////ORIENT BALL JOINT////////////////////////////////
select {$name + "_lAnkleJ"} {$name + "_rAnkleJ"};
joint -e -oj xyz -secondaryAxisOrient yup -ch -zso;

///////////////////SET JOINT ORIENTATIONS///////////////////
setAttr {$name + "_lWristJ.rotateOrder"} 1;
setAttr {$name + "_lWristJDummy.rotateOrder"} 1;
setAttr {$name + "_lForearmJ.rotateOrder"} 1;


setAttr {$name + "_rWristJ.rotateOrder"} 1;
setAttr {$name + "_rWristJDummy.rotateOrder"} 1;
setAttr {$name + "_rForearmJ.rotateOrder"} 1;

//////////////////MIRROR RIGHT JOINTS TO PROPER BEHAVIOUR//////////////////

$rClavicleOrient = `getAttr {$name + "_rClavicleJ.jointOrient"}`;
setAttr {$name + "_rClavicleJ.jointOrientX"} ($rClavicleOrient[0] * -1);
setAttr {$name + "_rClavicleJ.jointOrientY"} ($rClavicleOrient[1] * -1);
setAttr {$name + "_rClavicleJ.jointOrientZ"} ($rClavicleOrient[2] - 180);

$rHipOrient = `getAttr {$name + "_rHipJ.jointOrient"}`;
setAttr {$name + "_rHipJ.jointOrientX"} ($rHipOrient[0] * -1);
setAttr {$name + "_rHipJ.jointOrientY"} ($rHipOrient[1] * -1);
setAttr {$name + "_rHipJ.jointOrientZ"} ($rHipOrient[2] + 180);

select -hi {$name + "_rShoulderJ"} {$name + "_rKneeJ"};
$reOrientJoints = `ls -sl`;
string $currentJoint;
for ($currentJoint in $reOrientJoints)
{
	$currentOrient = `getAttr {$currentJoint + ".jointOrient"}`;
	$currentPos = `getAttr {$currentJoint + ".tx"}`;
	setAttr {$currentJoint + ".jointOrientX"} ($currentOrient[0] * -1);
	setAttr {$currentJoint + ".jointOrientY"} ($currentOrient[1] * -1);
	setAttr {$currentJoint + ".tx"} ($currentPos * -1);
}

//FIX WRIST ORIENTATIONS
orientConstraint {$name + "_lWristJ"} {$name + "_lWristJDummy"};
delete {$name + "_lWristJDummy_orientConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lWristJDummy"};

orientConstraint {$name + "_rWristJ"} {$name + "_rWristJDummy"};
delete {$name + "_rWristJDummy_orientConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rWristJDummy"};
 
spaceLocator -n {$name + "_rLegOrientLctr"};
parentConstraint DSN_rKnee {$name + "_rLegOrientLctr"};
delete {$name + "_rLegOrientLctr_parentConstraint1"};
$rKneeLength = `xform -q -t {$name + "_rKneeJ"}`;
$rAnkleLength = `xform -q -t {$name + "_rAnkleJ"}`;
$rLegLength[0] = (($rKneeLength[0] + $rAnkleLength[0]) /-3.5);
move -r -os 0 0 ($rLegLength[0] * -2) {$name + "_rLegOrientLctr"};

aimConstraint -aimVector 0 1 0 -upVector 1 0 0 -worldUpType "scene" -skip y -skip z {$name + "_rLegOrientLctr"} {$name + "_rHipJ"};
delete {$name + "_rHipJ_aimConstraint1"};
$rHipRotate = `getAttr {$name + "_rHipJ.rotateX"}`;
setAttr {$name + "_rHipJ.rotateX"} 0;

aimConstraint -aimVector 0 1 0 -upVector 1 0 0 -worldUpType "none" -skip y -skip z {$name + "_rLegOrientLctr"} {$name + "_rKneeJ"};
delete {$name + "_rKneeJ_aimConstraint1"};
$rKneeRotate = `getAttr {$name + "_rKneeJ.rotateX"}`;
setAttr {$name + "_rKneeJ.rotateX"} 0;

parent -w {$name + "_rKneeJ"};
parent -w {$name + "_rAnkleJ"};
$rKneeJOrient = `getAttr  {$name + "_rKneeJ.jointOrientX"} `;
$rHipJOrient = `getAttr  {$name + "_rHipJ.jointOrientX"} `;
setAttr {$name + "_rHipJ.jointOrientX"} ($rHipJOrient + $rHipRotate);
setAttr {$name + "_rKneeJ.jointOrientX"} ($rKneeJOrient + $rKneeRotate);

parent {$name + "_rKneeJ"} {$name + "_rHipJ"};
parent {$name + "_rAnkleJ"} {$name + "_rKneeJ"};
delete {$name + "_rLegOrientLctr"};

//SEPARATE WRIST FROM ARM//////////////////////////////////////
//LEFT WRIST
group -em -n {$name + "_lWristJG1"};
pointConstraint {$name + "_lWristJDummy"} {$name + "_lWristJG1"};
orientConstraint {$name + "_lWristJ"} {$name + "_lWristJG1"};
delete {$name + "_lWristJG1_orientConstraint1"};
group -em -n {$name + "_lWristJG2"} ;
pointConstraint {$name + "_lElbowJ"} {$name + "_lWristJG2"};
delete {$name + "_lWristJG2_pointConstraint1"} ;
parentConstraint -mo {$name + "_lElbowJ"} {$name + "_lWristJG2"};
parent {$name + "_lWristJG1"} {$name + "_lWristJG2"};
parent {$name + "_lWristJ"} {$name + "_lWristJG1"};

//RIGHT WRIST
group -em -n {$name + "_rWristJG1"};
pointConstraint {$name + "_rWristJDummy"} {$name + "_rWristJG1"};
orientConstraint {$name + "_rWristJ"} {$name + "_rWristJG1"};
delete {$name + "_rWristJG1_orientConstraint1"};
group -em -n {$name + "_rWristJG2"};
pointConstraint {$name + "_rElbowJ"} {$name + "_rWristJG2"};
delete {$name + "_rWristJG2_pointConstraint1"};
parentConstraint -mo {$name + "_rElbowJ"} {$name + "_rWristJG2"};
parent {$name + "_rWristJG1"} {$name + "_rWristJG2"};
parent {$name + "_rWristJ"} {$name + "_rWristJG1"};

////////////////////IK/FK JOINTS////////////////////////////////////
//LEFT ARM FK
select {$name + "_lShoulderJ"};
duplicate -rr -n {$name + "_lShoulderJFK"};
pickWalk -d down;
rename {$name + "_lElbowJFK"};
pickWalk -d down;
rename {$name + "_lWristJFK"};
pickWalk -d right;
doDelete;

select -cl;
group -em -n {$name + "_lArmIKFKG"};
select -add {$name + "_lClavicleJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1 ;
parent -w;
parentConstraint -mo {$name + "_lClavicleJ"} {$name + "_lArmIKFKG"};
parent {$name + "_lShoulderJFK"} {$name + "_lArmIKFKG"};


//LEFT ARM IK
select {$name + "_lShoulderJFK"};
duplicate -rr -n {$name + "_lShoulderJIK"};
pickWalk -d down;
rename {$name + "_lElbowJIK"};
setAttr {$name + "_lElbowJIK.preferredAngleY"} -1;
pickWalk -d down;
rename {$name + "_lWristJIK"};

//RIGHT ARM FK
select {$name + "_rShoulderJ"};
duplicate -rr -n {$name + "_rShoulderJFK"};
pickWalk -d down;
rename {$name + "_rElbowJFK"};
pickWalk -d down;
rename {$name + "_rWristJFK"};
pickWalk -d right;
doDelete;

select -cl;
group -em -n {$name + "_rArmIKFKG"};
select -add {$name + "_rClavicleJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1 ;
parent -w;
parentConstraint -mo {$name + "_rClavicleJ"} {$name + "_rArmIKFKG"};
parent {$name + "_rShoulderJFK"} {$name + "_rArmIKFKG"};

//RIGHT ARM IK
select {$name + "_rShoulderJFK"};
duplicate -rr -n {$name + "_rShoulderJIK"};
pickWalk -d down;
rename {$name + "_rElbowJIK"};
setAttr {$name + "_rElbowJIK.preferredAngleY"} -1;
pickWalk -d down;
rename {$name + "_rWristJIK"};

//LEFT LEG JFK
select {$name + "_lHipJ"};
duplicate -rr -n {$name + "_lHipJFK"};
pickWalk -d down;
rename {$name + "_lKneeJFK"};
pickWalk -d down;
rename {$name + "_lAnkleJFK"};
pickWalk -d down;
rename {$name + "_lBallJFK"};
pickWalk -d down;
rename {$name + "_lToeJFK"};
select -cl;
group -em -n {$name + "_lLegIKFKG"};
select -add {$name + "_ROOTJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1 ;
parent -w;
parentConstraint -mo {$name + "_ROOTJ"} {$name + "_lLegIKFKG"};
parent {$name + "_lHipJFK"} {$name + "_lLegIKFKG"};

//LEFT LEG IK
select {$name + "_lHipJFK"};
duplicate -rr -n {$name + "_lHipJIK"};
pickWalk -d down;
rename {$name + "_lKneeJIK"};
setAttr {$name + "_lKneeJIK.preferredAngleZ"} -1;
pickWalk -d down;
rename {$name + "_lAnkleJIK"};
pickWalk -d down;
rename {$name + "_lBallJIK"};
pickWalk -d down;
rename {$name + "_lToeJIK"};

//RIGHT LEG FK
select {$name + "_rHipJ"};
duplicate -rr -n {$name + "_rHipJFK"};
pickWalk -d down;
rename {$name + "_rKneeJFK"};
pickWalk -d down;
rename {$name + "_rAnkleJFK"};
pickWalk -d down;
rename {$name + "_rBallJFK"};
pickWalk -d down;
rename {$name + "_rToeJFK"};
select -cl;
group -em -n {$name + "_rLegIKFKG"};
select -add {$name + "_ROOTJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1 ;
parent -w;
parentConstraint -mo {$name + "_ROOTJ"} {$name + "_rLegIKFKG"};
parent {$name + "_rHipJFK"} {$name + "_rLegIKFKG"};

//RIGHT LEG IK
select {$name + "_rHipJFK"};
duplicate -rr -n {$name + "_rHipJIK"};
pickWalk -d down;
rename {$name + "_rKneeJIK"};
setAttr {$name + "_rKneeJIK.preferredAngleZ"} -1;
pickWalk -d down;
rename {$name + "_rAnkleJIK"};
pickWalk -d down;
rename {$name + "_rBallJIK"};
pickWalk -d down;
rename {$name + "_rToeJIK"};

//JOINT SIZE
select -hi {$name + "_lWristJ"} {$name + "_rWristJ"};
$fingerJoints = `ls -sl`;
string $currentJoint;
for ($currentJoint in $fingerJoints)
	{setAttr {$currentJoint + ".radius"} .5;}

///////////////////////////////////////TOES///////////////////////////////////////
//LEFT TOES
if (`objExists DSN_lToe01J1`)
{
setAttr {$name + "_lToeJ.v"} 0;
select -cl;
joint -n {$name + "_lToe01J1"}; setAttr {$name + "_lToe01J1.radius"} .5;
pointConstraint DSN_lToe01J1 {$name + "_lToe01J1"};
delete {$name + "_lToe01J1_pointConstraint1"};

select {$name + "_lToe01J1"};
joint -n {$name + "_lToe01J2"}; setAttr {$name + "_lToe01J2.radius"} .5;
pointConstraint DSN_lToe01J2 {$name + "_lToe01J2"};
delete {$name + "_lToe01J2_pointConstraint1"};

select {$name + "_lToe01J2"};
joint -n {$name + "_lToe01JTip"}; setAttr {$name + "_lToe01JTip.radius"} .5;
pointConstraint DSN_lToe01JTip {$name + "_lToe01JTip"};
delete {$name + "_lToe01JTip_pointConstraint1"};
parent {$name + "_lToe01J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe02J1`)
{
select -cl;
joint -n {$name + "_lToe02J1"}; setAttr {$name + "_lToe02J1.radius"} .5;
pointConstraint DSN_lToe02J1 {$name + "_lToe02J1"};
delete {$name + "_lToe02J1_pointConstraint1"};

select {$name + "_lToe02J1"};
joint -n {$name + "_lToe02J2"}; setAttr {$name + "_lToe02J2.radius"} .5;
pointConstraint DSN_lToe02J2 {$name + "_lToe02J2"};
delete {$name + "_lToe02J2_pointConstraint1"};

select {$name + "_lToe02J2"};
joint -n {$name + "_lToe02J3"}; setAttr {$name + "_lToe02J3.radius"} .5;
pointConstraint DSN_lToe02J3 {$name + "_lToe02J3"};
delete {$name + "_lToe02J3_pointConstraint1"};

select {$name + "_lToe02J3"};
joint -n {$name + "_lToe02JTip"}; setAttr {$name + "_lToe02JTip.radius"} .5;
pointConstraint DSN_lToe02JTip {$name + "_lToe02JTip"};
delete {$name + "_lToe02JTip_pointConstraint1"};
parent {$name + "_lToe02J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe03J1`)
{
select -cl;
joint -n {$name + "_lToe03J1"}; setAttr {$name + "_lToe03J1.radius"} .5;
pointConstraint DSN_lToe03J1 {$name + "_lToe03J1"};
delete {$name + "_lToe03J1_pointConstraint1"};

select {$name + "_lToe03J1"};
joint -n {$name + "_lToe03J2"}; setAttr {$name + "_lToe03J2.radius"} .5;
pointConstraint DSN_lToe03J2 {$name + "_lToe03J2"};
delete {$name + "_lToe03J2_pointConstraint1"};

select {$name + "_lToe03J2"};
joint -n {$name + "_lToe03J3"}; setAttr {$name + "_lToe03J3.radius"} .5;
pointConstraint DSN_lToe03J3 {$name + "_lToe03J3"};
delete {$name + "_lToe03J3_pointConstraint1"};

select {$name + "_lToe03J3"};
joint -n {$name + "_lToe03JTip"}; setAttr {$name + "_lToe03JTip.radius"} .5;
pointConstraint DSN_lToe03JTip {$name + "_lToe03JTip"};
delete {$name + "_lToe03JTip_pointConstraint1"};
parent {$name + "_lToe03J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe04J1`)
{
select -cl;
joint -n {$name + "_lToe04J1"}; setAttr {$name + "_lToe04J1.radius"} .5;
pointConstraint DSN_lToe04J1 {$name + "_lToe04J1"};
delete {$name + "_lToe04J1_pointConstraint1"};

select {$name + "_lToe04J1"};
joint -n {$name + "_lToe04J2"}; setAttr {$name + "_lToe04J2.radius"} .5;
pointConstraint DSN_lToe04J2 {$name + "_lToe04J2"};
delete {$name + "_lToe04J2_pointConstraint1"};

select {$name + "_lToe04J2"};
joint -n {$name + "_lToe04J3"}; setAttr {$name + "_lToe04J3.radius"} .5;
pointConstraint DSN_lToe04J3 {$name + "_lToe04J3"};
delete {$name + "_lToe04J3_pointConstraint1"};

select {$name + "_lToe04J3"};
joint -n {$name + "_lToe04JTip"}; setAttr {$name + "_lToe04JTip.radius"} .5;
pointConstraint DSN_lToe04JTip {$name + "_lToe04JTip"};
delete {$name + "_lToe04JTip_pointConstraint1"};
parent {$name + "_lToe04J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe05J1`)
{
select -cl;
joint -n {$name + "_lToe05J1"}; setAttr {$name + "_lToe05J1.radius"} .5;
pointConstraint DSN_lToe05J1 {$name + "_lToe05J1"};
delete {$name + "_lToe05J1_pointConstraint1"};

select {$name + "_lToe05J1"};
joint -n {$name + "_lToe05J2"}; setAttr {$name + "_lToe05J2.radius"} .5;
pointConstraint DSN_lToe05J2 {$name + "_lToe05J2"};
delete {$name + "_lToe05J2_pointConstraint1"};

select {$name + "_lToe05J2"};
joint -n {$name + "_lToe05J3"}; setAttr {$name + "_lToe05J3.radius"} .5;
pointConstraint DSN_lToe05J3 {$name + "_lToe05J3"};
delete {$name + "_lToe05J3_pointConstraint1"};

select {$name + "_lToe05J3"};
joint -n {$name + "_lToe05JTip"}; setAttr {$name + "_lToe05JTip.radius"} .5;
pointConstraint DSN_lToe05JTip {$name + "_lToe05JTip"};
delete {$name + "_lToe05JTip_pointConstraint1"};
parent {$name + "_lToe05J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe06J1`)
{
select -cl;
joint -n {$name + "_lToe06J1"}; setAttr {$name + "_lToe06J1.radius"} .5;
pointConstraint DSN_lToe06J1 {$name + "_lToe06J1"};
delete {$name + "_lToe06J1_pointConstraint1"};

select {$name + "_lToe06J1"};
joint -n {$name + "_lToe06J2"}; setAttr {$name + "_lToe06J2.radius"} .5;
select DSN_lToe06J2 {$name + "_lToe06J2"};
pointConstraint; 
delete {$name + "_lToe06J2_pointConstraint1"};

select {$name + "_lToe06J2"};
joint -n {$name + "_lToe06J3"}; setAttr {$name + "_lToe06J3.radius"} .5;
pointConstraint DSN_lToe06J3 {$name + "_lToe06J3"};
delete {$name + "_lToe06J3_pointConstraint1"};

select {$name + "_lToe06J3"};
joint -n {$name + "_lToe06JTip"}; setAttr {$name + "_lToe06JTip.radius"} .5;
pointConstraint DSN_lToe06JTip {$name + "_lToe06JTip"};
delete {$name + "_lToe06JTip_pointConstraint1"};
parent {$name + "_lToe06J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe07J1`)
{
select -cl;
joint -n {$name + "_lToe07J1"}; setAttr {$name + "_lToe07J1.radius"} .5;
pointConstraint DSN_lToe07J1 {$name + "_lToe07J1"};
delete {$name + "_lToe07J1_pointConstraint1"};

select {$name + "_lToe07J1"};
joint -n {$name + "_lToe07J2"}; setAttr {$name + "_lToe07J2.radius"} .5;
pointConstraint DSN_lToe07J2 {$name + "_lToe07J2"};
delete {$name + "_lToe07J2_pointConstraint1"};

select {$name + "_lToe07J2"};
joint -n {$name + "_lToe07J3"}; setAttr {$name + "_lToe07J3.radius"} .5;
pointConstraint DSN_lToe07J3 {$name + "_lToe07J3"};
delete {$name + "_lToe07J3_pointConstraint1"};

select {$name + "_lToe07J3"};
joint -n {$name + "_lToe07JTip"}; setAttr {$name + "_lToe07JTip.radius"} .5;
pointConstraint DSN_lToe07JTip {$name + "_lToe07JTip"};
delete {$name + "_lToe07JTip_pointConstraint1"};
parent {$name + "_lToe07J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe08J1`)
{
select -cl;
joint -n {$name + "_lToe08J1"}; setAttr {$name + "_lToe08J1.radius"} .5;
pointConstraint DSN_lToe08J1 {$name + "_lToe08J1"};
delete {$name + "_lToe08J1_pointConstraint1"};

select {$name + "_lToe08J1"};
joint -n {$name + "_lToe08J2"}; setAttr {$name + "_lToe08J2.radius"} .5;
select DSN_lToe08J2 {$name + "_lToe08J2"};
pointConstraint;
delete {$name + "_lToe08J2_pointConstraint1"};

select {$name + "_lToe08J2"};
joint -n {$name + "_lToe08J3"}; setAttr {$name + "_lToe08J3.radius"} .5;
pointConstraint DSN_lToe08J3 {$name + "_lToe08J3"};
delete {$name + "_lToe08J3_pointConstraint1"};

select {$name + "_lToe08J3"};
joint -n {$name + "_lToe08JTip"}; setAttr {$name + "_lToe08JTip.radius"} .5;
pointConstraint DSN_lToe08JTip {$name + "_lToe08JTip"};
delete {$name + "_lToe08JTip_pointConstraint1"};
parent {$name + "_lToe08J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe09J1`)
{
select -cl;
joint -n {$name + "_lToe09J1"}; setAttr {$name + "_lToe09J1.radius"} .5;
pointConstraint DSN_lToe09J1 {$name + "_lToe09J1"};
delete {$name + "_lToe09J1_pointConstraint1"};

select {$name + "_lToe09J1"};
joint -n {$name + "_lToe09J2"}; setAttr {$name + "_lToe09J2.radius"} .5;
pointConstraint DSN_lToe09J2 {$name + "_lToe09J2"};
delete {$name + "_lToe09J2_pointConstraint1"};

select {$name + "_lToe09J2"};
joint -n {$name + "_lToe09J3"}; setAttr {$name + "_lToe09J3.radius"} .5;
pointConstraint DSN_lToe09J3 {$name + "_lToe09J3"};
delete {$name + "_lToe09J3_pointConstraint1"};

select {$name + "_lToe09J3"};
joint -n {$name + "_lToe09JTip"}; setAttr {$name + "_lToe09JTip.radius"} .5;
pointConstraint DSN_lToe09JTip {$name + "_lToe09JTip"};
delete {$name + "_lToe09JTip_pointConstraint1"};
parent {$name + "_lToe09J1"} {$name + "_lBallJ"};
}

if (`objExists DSN_lToe10J1`)
{
select -cl;
joint -n {$name + "_lToe10J1"}; setAttr {$name + "_lToe10J1.radius"} .5;
pointConstraint DSN_lToe10J1 {$name + "_lToe10J1"};
delete {$name + "_lToe10J1_pointConstraint1"};

select {$name + "_lToe10J1"};
joint -n {$name + "_lToe10J2"}; setAttr {$name + "_lToe10J2.radius"} .5;
pointConstraint DSN_lToe10J2 {$name + "_lToe10J2"};
delete {$name + "_lToe10J2_pointConstraint1"};

select {$name + "_lToe10J2"};
joint -n {$name + "_lToe10J3"}; setAttr {$name + "_lToe10J3.radius"} .5;
pointConstraint DSN_lToe10J3 {$name + "_lToe10J3"};
delete {$name + "_lToe10J3_pointConstraint1"};

select {$name + "_lToe10J3"};
joint -n {$name + "_lToe10JTip"}; setAttr {$name + "_lToe10JTip.radius"} .5;
pointConstraint DSN_lToe10JTip {$name + "_lToe10JTip"};
delete {$name + "_lToe10JTip_pointConstraint1"};
parent {$name + "_lToe10J1"} {$name + "_lBallJ"};
}

//RIGHT TOES
if (`objExists DSN_rToe01J1`)
{
setAttr {$name + "_rToeJ.v"} 0;
select -cl;
joint -n {$name + "_rToe01J1"}; setAttr {$name + "_rToe01J1.radius"} .5;
pointConstraint DSN_rToe01J1 {$name + "_rToe01J1"};
delete {$name + "_rToe01J1_pointConstraint1"};

select {$name + "_rToe01J1"};
joint -n {$name + "_rToe01J2"}; setAttr {$name + "_rToe01J2.radius"} .5;
pointConstraint DSN_rToe01J2 {$name + "_rToe01J2"};
delete {$name + "_rToe01J2_pointConstraint1"};

select {$name + "_rToe01J2"};
joint -n {$name + "_rToe01JTip"}; setAttr {$name + "_rToe01JTip.radius"} .5;
pointConstraint DSN_rToe01JTip {$name + "_rToe01JTip"};
delete {$name + "_rToe01JTip_pointConstraint1"};
parent {$name + "_rToe01J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe02J1`)
{
select -cl;
joint -n {$name + "_rToe02J1"}; setAttr {$name + "_rToe02J1.radius"} .5;
pointConstraint DSN_rToe02J1 {$name + "_rToe02J1"};
delete {$name + "_rToe02J1_pointConstraint1"};

select {$name + "_rToe02J1"};
joint -n {$name + "_rToe02J2"}; setAttr {$name + "_rToe02J2.radius"} .5;
pointConstraint DSN_rToe02J2 {$name + "_rToe02J2"};
delete {$name + "_rToe02J2_pointConstraint1"};

select {$name + "_rToe02J2"};
joint -n {$name + "_rToe02J3"}; setAttr {$name + "_rToe02J3.radius"} .5;
pointConstraint DSN_rToe02J3 {$name + "_rToe02J3"};
delete {$name + "_rToe02J3_pointConstraint1"};

select {$name + "_rToe02J3"};
joint -n {$name + "_rToe02JTip"}; setAttr {$name + "_rToe02JTip.radius"} .5;
pointConstraint DSN_rToe02JTip {$name + "_rToe02JTip"};
delete {$name + "_rToe02JTip_pointConstraint1"};
parent {$name + "_rToe02J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe03J1`)
{
select -cl;
joint -n {$name + "_rToe03J1"}; setAttr {$name + "_rToe03J1.radius"} .5;
pointConstraint DSN_rToe03J1 {$name + "_rToe03J1"};
delete {$name + "_rToe03J1_pointConstraint1"};

select {$name + "_rToe03J1"};
joint -n {$name + "_rToe03J2"}; setAttr {$name + "_rToe03J2.radius"} .5;
pointConstraint DSN_rToe03J2 {$name + "_rToe03J2"};
delete {$name + "_rToe03J2_pointConstraint1"};

select {$name + "_rToe03J2"};
joint -n {$name + "_rToe03J3"}; setAttr {$name + "_rToe03J3.radius"} .5;
pointConstraint DSN_rToe03J3 {$name + "_rToe03J3"};
delete {$name + "_rToe03J3_pointConstraint1"};

select {$name + "_rToe03J3"};
joint -n {$name + "_rToe03JTip"}; setAttr {$name + "_rToe03JTip.radius"} .5;
pointConstraint DSN_rToe03JTip {$name + "_rToe03JTip"};
delete {$name + "_rToe03JTip_pointConstraint1"};
parent {$name + "_rToe03J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe04J1`)
{
select -cl;
joint -n {$name + "_rToe04J1"}; setAttr {$name + "_rToe04J1.radius"} .5;
pointConstraint DSN_rToe04J1 {$name + "_rToe04J1"};
delete {$name + "_rToe04J1_pointConstraint1"};

select {$name + "_rToe04J1"};
joint -n {$name + "_rToe04J2"}; setAttr {$name + "_rToe04J2.radius"} .5;
pointConstraint DSN_rToe04J2 {$name + "_rToe04J2"};
delete {$name + "_rToe04J2_pointConstraint1"};

select {$name + "_rToe04J2"};
joint -n {$name + "_rToe04J3"}; setAttr {$name + "_rToe04J3.radius"} .5;
pointConstraint DSN_rToe04J3 {$name + "_rToe04J3"};
delete {$name + "_rToe04J3_pointConstraint1"};

select {$name + "_rToe04J3"};
joint -n {$name + "_rToe04JTip"}; setAttr {$name + "_rToe04JTip.radius"} .5;
pointConstraint DSN_rToe04JTip {$name + "_rToe04JTip"};
delete {$name + "_rToe04JTip_pointConstraint1"};
parent {$name + "_rToe04J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe05J1`)
{
select -cl;
joint -n {$name + "_rToe05J1"}; setAttr {$name + "_rToe05J1.radius"} .5;
pointConstraint DSN_rToe05J1 {$name + "_rToe05J1"};
delete {$name + "_rToe05J1_pointConstraint1"};

select {$name + "_rToe05J1"};
joint -n {$name + "_rToe05J2"}; setAttr {$name + "_rToe05J2.radius"} .5;
pointConstraint DSN_rToe05J2 {$name + "_rToe05J2"};
delete {$name + "_rToe05J2_pointConstraint1"};

select {$name + "_rToe05J2"};
joint -n {$name + "_rToe05J3"}; setAttr {$name + "_rToe05J3.radius"} .5;
pointConstraint DSN_rToe05J3 {$name + "_rToe05J3"};
delete {$name + "_rToe05J3_pointConstraint1"};

select {$name + "_rToe05J3"};
joint -n {$name + "_rToe05JTip"}; setAttr {$name + "_rToe05JTip.radius"} .5;
pointConstraint DSN_rToe05JTip {$name + "_rToe05JTip"};
delete {$name + "_rToe05JTip_pointConstraint1"};
parent {$name + "_rToe05J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe06J1`)
{
select -cl;
joint -n {$name + "_rToe06J1"}; setAttr {$name + "_rToe06J1.radius"} .5;
pointConstraint DSN_rToe06J1 {$name + "_rToe06J1"};
delete {$name + "_rToe06J1_pointConstraint1"};

select {$name + "_rToe06J1"};
joint -n {$name + "_rToe06J2"}; setAttr {$name + "_rToe06J2.radius"} .5;
select DSN_rToe06J2 {$name + "_rToe06J2"};
pointConstraint; 
delete {$name + "_rToe06J2_pointConstraint1"};

select {$name + "_rToe06J2"};
joint -n {$name + "_rToe06J3"}; setAttr {$name + "_rToe06J3.radius"} .5;
pointConstraint DSN_rToe06J3 {$name + "_rToe06J3"};
delete {$name + "_rToe06J3_pointConstraint1"};

select {$name + "_rToe06J3"};
joint -n {$name + "_rToe06JTip"}; setAttr {$name + "_rToe06JTip.radius"} .5;
pointConstraint DSN_rToe06JTip {$name + "_rToe06JTip"};
delete {$name + "_rToe06JTip_pointConstraint1"};
parent {$name + "_rToe06J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe07J1`)
{
select -cl;
joint -n {$name + "_rToe07J1"}; setAttr {$name + "_rToe07J1.radius"} .5;
pointConstraint DSN_rToe07J1 {$name + "_rToe07J1"};
delete {$name + "_rToe07J1_pointConstraint1"};

select {$name + "_rToe07J1"};
joint -n {$name + "_rToe07J2"}; setAttr {$name + "_rToe07J2.radius"} .5;
pointConstraint DSN_rToe07J2 {$name + "_rToe07J2"};
delete {$name + "_rToe07J2_pointConstraint1"};

select {$name + "_rToe07J2"};
joint -n {$name + "_rToe07J3"}; setAttr {$name + "_rToe07J3.radius"} .5;
pointConstraint DSN_rToe07J3 {$name + "_rToe07J3"};
delete {$name + "_rToe07J3_pointConstraint1"};

select {$name + "_rToe07J3"};
joint -n {$name + "_rToe07JTip"}; setAttr {$name + "_rToe07JTip.radius"} .5;
pointConstraint DSN_rToe07JTip {$name + "_rToe07JTip"};
delete {$name + "_rToe07JTip_pointConstraint1"};
parent {$name + "_rToe07J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe08J1`)
{
select -cl;
joint -n {$name + "_rToe08J1"}; setAttr {$name + "_rToe08J1.radius"} .5;
pointConstraint DSN_rToe08J1 {$name + "_rToe08J1"};
delete {$name + "_rToe08J1_pointConstraint1"};

select {$name + "_rToe08J1"};
joint -n {$name + "_rToe08J2"}; setAttr {$name + "_rToe08J2.radius"} .5;
select DSN_rToe08J2 {$name + "_rToe08J2"};
pointConstraint;
delete {$name + "_rToe08J2_pointConstraint1"};

select {$name + "_rToe08J2"};
joint -n {$name + "_rToe08J3"}; setAttr {$name + "_rToe08J3.radius"} .5;
pointConstraint DSN_rToe08J3 {$name + "_rToe08J3"};
delete {$name + "_rToe08J3_pointConstraint1"};

select {$name + "_rToe08J3"};
joint -n {$name + "_rToe08JTip"}; setAttr {$name + "_rToe08JTip.radius"} .5;
pointConstraint DSN_rToe08JTip {$name + "_rToe08JTip"};
delete {$name + "_rToe08JTip_pointConstraint1"};
parent {$name + "_rToe08J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe09J1`)
{
select -cl;
joint -n {$name + "_rToe09J1"}; setAttr {$name + "_rToe09J1.radius"} .5;
pointConstraint DSN_rToe09J1 {$name + "_rToe09J1"};
delete {$name + "_rToe09J1_pointConstraint1"};

select {$name + "_rToe09J1"};
joint -n {$name + "_rToe09J2"}; setAttr {$name + "_rToe09J2.radius"} .5;
pointConstraint DSN_rToe09J2 {$name + "_rToe09J2"};
delete {$name + "_rToe09J2_pointConstraint1"};

select {$name + "_rToe09J2"};
joint -n {$name + "_rToe09J3"}; setAttr {$name + "_rToe09J3.radius"} .5;
pointConstraint DSN_rToe09J3 {$name + "_rToe09J3"};
delete {$name + "_rToe09J3_pointConstraint1"};

select {$name + "_rToe09J3"};
joint -n {$name + "_rToe09JTip"}; setAttr {$name + "_rToe09JTip.radius"} .5;
pointConstraint DSN_rToe09JTip {$name + "_rToe09JTip"};
delete {$name + "_rToe09JTip_pointConstraint1"};
parent {$name + "_rToe09J1"} {$name + "_rBallJ"};
}

if (`objExists DSN_rToe10J1`)
{
select -cl;
joint -n {$name + "_rToe10J1"}; setAttr {$name + "_rToe10J1.radius"} .5;
pointConstraint DSN_rToe10J1 {$name + "_rToe10J1"};
delete {$name + "_rToe10J1_pointConstraint1"};

select {$name + "_rToe10J1"};
joint -n {$name + "_rToe10J2"}; setAttr {$name + "_rToe10J2.radius"} .5;
pointConstraint DSN_rToe10J2 {$name + "_rToe10J2"};
delete {$name + "_rToe10J2_pointConstraint1"};

select {$name + "_rToe10J2"};
joint -n {$name + "_rToe10J3"}; setAttr {$name + "_rToe10J3.radius"} .5;
pointConstraint DSN_rToe10J3 {$name + "_rToe10J3"};
delete {$name + "_rToe10J3_pointConstraint1"};

select {$name + "_rToe10J3"};
joint -n {$name + "_rToe10JTip"}; setAttr {$name + "_rToe10JTip.radius"} .5;
pointConstraint DSN_rToe10JTip {$name + "_rToe10JTip"};
delete {$name + "_rToe10JTip_pointConstraint1"};
parent {$name + "_rToe10J1"} {$name + "_rBallJ"};
}

//GENERATE CONTROLS
rename "DSN_MAIN" {$name + "_MainC"};
rename "DSN_Outer1Shape" {$name + "_Outer1Shape"};
rename "DSN_Outer2Shape" {$name + "_Outer2Shape"};
rename "DSN_Outer3Shape" {$name + "_Outer3Shape"};
rename "DSN_Outer4Shape" {$name + "_Outer4Shape"};
rename "DSN_Arrow1Shape" {$name + "_Arrow1Shape"};
rename "DSN_Arrow2Shape" {$name + "_Arrow2Shape"};
rename "DSN_Arrow3Shape" {$name + "_Arrow3Shape"};
rename "DSN_Arrow4Shape" {$name + "_Arrow4Shape"};
circle -n {$name + "_ROOTC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1.25 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
group -n {$name + "_ROOTCG"};
parent {$name + "_ROOTCG"} {$name + "_ROOTJ"};
makeIdentity -apply false -t 1 -s 1;
parent -w {$name + "_ROOTCG"};
delete -ch {$name + "_ROOTC"};
$Spine01Length = `xform -q -t {$name + "_Spine02J"}`;
$Spine02Length = `xform -q -t {$name + "_Spine03J"}`;
$Spine03Length = `xform -q -t {$name + "_Spine04J"}`;
$Spine04Length = `xform -q -t {$name + "_Neck01J"}`;
$NeckLength = `getAttr {$name + "_HeadJ.tx"}`;
$Scale[0] = (($Spine01Length[1] + $Spine02Length[0] + $Spine03Length[0] + $Spine04Length[0] + $NeckLength) / 5);
setAttr ({$name + "_ROOTCG.scale"}, ($Scale[0]*4), ($Scale[0]*3.5), ($Scale[0]*3.5));
//INCREDIBLES RELEASE DATE!
setAttr {$name + "_MainC.identification"} 1105;
makeIdentity -apply true -t 1 -r 1 -s 1;


//MAIN HIP CONTROL
circle -n {$name + "_MainHipC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
move -r 0 -0.95 0 {$name + "_MainHipC.cv[1]"} {$name + "_MainHipC.cv[5]"};
move -r -os -wd 0 -0.4 0 {$name + "_MainHipC.cv[3]"} {$name + "_MainHipC.cv[7]"};
group -n {$name + "_MainHipCG"} {$name + "_MainHipC"};
select -add {$name + "_ROOTJ"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;
setAttr ({$name + "_MainHipCG.scale"}, ($Scale[0]*3), ($Scale[0]*2.75), ($Scale[0]*2.75));
makeIdentity -apply true -t 1 -r 1 -s 1;


//FK SPINE CONTROLS
circle -n {$name + "_Spine01FKC"} -c 0 0 0 -nr 0 0 1 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
move -r -os -wd 0 0 -2.4 {$name + "_Spine01FKC.cv[1]"} {$name + "_Spine01FKC.cv[5]"};
move -r -os -wd 0 0 -2.25  {$name + "_Spine01FKC.cv[0]"} {$name + "_Spine01FKC.cv[2]"} {$name + "_Spine01FKC.cv[4]"} {$name + "_Spine01FKC.cv[6]"} ;
move -r -os -wd 0 0 -1.8 {$name + "_Spine01FKC.cv[3]"} {$name + "_Spine01FKC.cv[7]"} ;
select {$name + "_Spine01FKC"};
delete -ch;
group -n {$name + "_Spine01FKCG"};
select -add {$name + "_Spine01J"};
parent;
makeIdentity -apply false -t 1 -s 1;

setAttr ({$name + "_Spine01FKCG.scale"}, ($Scale[0]*1.75), ($Scale[0]*0.45), ($Scale[0]*1.2));
select {$name + "_Spine01FKCG"};
makeIdentity -apply true -t 1 -s 1;


select {$name + "_Spine01FKCG"};
duplicate -rr -n {$name + "_Spine02FKCG"};
select -add {$name + "_Spine02J"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_Spine02FKC"};

select {$name + "_Spine01FKCG"};
duplicate -n {$name + "_Spine03FKCG"};
select -add {$name + "_Spine03J"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_Spine03FKC"};

select {$name + "_Spine01FKCG"};
duplicate -n {$name + "_Spine04FKCG"};
select -add {$name + "_Spine04J"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_Spine04FKC"};

select {$name + "_Spine01FKCG"};
duplicate -n {$name + "_Neck01CG"};
select -add {$name + "_Neck01J"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;
scale -r 0.5 1.5 1;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_Neck01C"};
scale -r 1 0.25 1  {$name + "_Neck01C.cv[1]"} {$name + "_Neck01C.cv[5]"} ;

parent -w {$name + "_Spine01FKCG"};

//IK SPINE CONTROLS
curve -n {$name + "_SpineTopIKC"} -d 1 -p 0 0 2.5 -p -1.5 0 1 -p -3 0 1 -p -3 0 -1 -p 3 0 -1 -p 3 0 1 -p 1.5 0 1 -p 0 0 2.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;
pickWalk -d down;
rename {$name + "_SpineTopIKCShape"};
delete -ch;
setAttr {$name + "_SpineTopIKC.sx"} ($Scale[0]*1);
setAttr {$name + "_SpineTopIKC.sz"} ($Scale[0]*1.2);
select {$name + "_SpineTopIKC"};
makeIdentity -apply true -t 1 -s 1;
group -n {$name + "_SpineTopIKCG"}; xform -os -piv 0 0 0;

duplicate -n {$name + "_SpineMidIKCG"};
pickWalk -d down;
rename {$name + "_SpineMidIKC"};
group -n {$name + "_SpineMidIKCG2"};


//CONSTRAIN TO FK CONTROLS
parentConstraint {$name + "_Spine02FKC"} {$name + "_SpineMidIKCG"};
parentConstraint {$name + "_Spine04FKC"} {$name + "_SpineTopIKCG"};



//////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////RIBBON SPINE////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
//GET SPINE LENGTH
spaceLocator -n {$name + "_spineStartLctr"};
duplicate -n {$name + "_spineEndLctr"};
select -add {$name + "_spineStartLctr"};
parent;
pointConstraint {$name + "_ROOTC"} {$name + "_spineStartLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none"
{$name + "_Spine04FKC"} {$name + "_spineStartLctr"};
pointConstraint {$name + "_Spine04FKC"} {$name + "_spineEndLctr"};

//SPINE START POSITION
nurbsPlane -n {$name + "_ribbon"} -p 0 0 0 -ax 0 0 1 -w 1 -lr 3 -d 3 -u 1 -v 3 -ch 1;
rebuildSurface -ch 1 -rpo 1 -rt 0 -end 1 -kr 2 -kcp 0 -kc 0 -su 1 -du 1 -sv 2 -dv 3 -tol 0.01 -fr 0  -dir 0 {$name + "_ribbon"};
delete -ch;

//RIBBON BLENDSHAPE
select {$name + "_ribbon"};
duplicate -rr -n {$name + "_ribbonBlend"};
select {$name + "_ribbonBlend.cv[1][3:5]"} ;
newCluster " -envelope 1";
rename {$name + "_ribbonBlend_lTopCluster"};
move  0 0 0 {$name + "_ribbonBlend_lTopCluster.scalePivot"} {$name + "_ribbonBlend_lTopCluster.rotatePivot"} ;
select {$name + "_ribbonBlend.cv[0][3:5]"} ;
newCluster " -envelope 1";
rename {$name + "_ribbonBlend_rTopCluster"};
move 0 0 0 {$name + "_ribbonBlend_rTopCluster.scalePivot"} {$name + "_ribbonBlend_rTopCluster.rotatePivot"} ;

select {$name + "_ribbonBlend.cv[1][0:2]"} ;
newCluster " -envelope 1";
rename {$name + "_ribbonBlend_lBtmCluster"};
move 0 0 0 {$name + "_ribbonBlend_lBtmCluster.scalePivot"} {$name + "_ribbonBlend_lBtmCluster.rotatePivot"} ;
select {$name + "_ribbonBlend.cv[0][0:2]"} ;
newCluster " -envelope 1";
rename {$name + "_ribbonBlend_rBtmCluster"};
move 0 0 0 {$name + "_ribbonBlend_rBtmCluster.scalePivot"} {$name + "_ribbonBlend_rBtmCluster.rotatePivot"} ;

percent -v 0.1 ($name + "_ribbonBlend_rTopClusterCluster") {$name + "_ribbonBlend.cv[0][5]"} ;
percent -v 0.25 ($name + "_ribbonBlend_rTopClusterCluster") {$name + "_ribbonBlend.cv[0][4]"} ;
percent -v 0.1 ($name + "_ribbonBlend_lTopClusterCluster") {$name + "_ribbonBlend.cv[1][5]"} ;
percent -v 0.25 ($name + "_ribbonBlend_lTopClusterCluster") {$name + "_ribbonBlend.cv[1][4]"} ;

percent -v 0.1 ($name + "_ribbonBlend_rBtmClusterCluster") {$name + "_ribbonBlend.cv[0][0]"} ;
percent -v 0.1 ($name + "_ribbonBlend_lBtmClusterCluster") {$name + "_ribbonBlend.cv[1][0]"} ;
percent -v 0.25 ($name + "_ribbonBlend_rBtmClusterCluster") {$name + "_ribbonBlend.cv[0][1]"} ;
percent -v 0.25 ($name + "_ribbonBlend_lBtmClusterCluster") {$name + "_ribbonBlend.cv[1][1]"} ;

select {$name + "_ribbonBlend"} {$name + "_ribbon"} ;
blendShape -n {$name + "_ribbonBlendShape"} -tc 0;
setAttr {$name + "_ribbonBlendShape1." + $name + "_ribbonBlend"} 1;

group -n {$name + "_ribbonBlend_lClusterG"} {$name + "_ribbonBlend_lTopCluster"} {$name + "_ribbonBlend_lBtmCluster"};xform -os -piv 0 0 0;
group -n {$name + "_ribbonBlend_rClusterG"} {$name + "_ribbonBlend_rTopCluster"} {$name + "_ribbonBlend_rBtmCluster"};xform -os -piv 0 0 0;


//HAIR
select {$name + "_ribbon"};
createHair 1 3 10 0 0 0 0 5 0 2 1 1;
pickWalk -d up;
string $hairSystem[] =`ls -sl`;
delete $hairSystem[0] {$hairSystem[0] + "OutputCurves"};
select {$hairSystem[0] + "Follicles"};
rename {$hairSystem[0] + "Follicles"} {$name + "_hairSystemFollicles"};
pickWalk -d down;
rename {$name + "_spine01F"};
pickWalk -d right;
rename {$name + "_spine02F"};
pickWalk -d right;
rename {$name + "_spine03F"};
select {$name + "_spine01F"} {$name + "_spine02F"} {$name + "_spine03F"};
pickWalk -d down;
pickWalk -d right;
delete;

select -cl;
joint -n {$name + "_spine01J"};
parentConstraint {$name + "_spine01F"} {$name + "_spine01J"};
select -cl;
joint -n {$name + "_spine02J"};
parentConstraint {$name + "_spine02F"} {$name + "_spine02J"};
select -cl;
joint -n {$name + "_spine03J"};
parentConstraint {$name + "_spine03F"} {$name + "_spine03J"};


select {$name + "_spine01J"} {$name + "_spine02J"} {$name + "_spine03J"};



string $selectedList[] = `ls -sl`;

string $currentObject;

for ($currentObject in $selectedList)
	
{
setAttr {$currentObject + ".tx"} 0;
setAttr {$currentObject + ".ty"} 0;
setAttr {$currentObject + ".tz"} 0;
setAttr {$currentObject + ".radius"} 1;
}

select -cl;
joint -n {$name + "_SpineTopJIK"} -p 0 2 0 ;

select -cl;
joint -n {$name + "_spineBtm01JIK"} -p 0 -2 0 ;

select -cl;
joint -n {$name + "_spineMidJIK"} -p 0 0 0 ;

select {$name + "_SpineTopJIK"} {$name + "_spineBtm01JIK"} {$name + "_spineMidJIK"};
string $selectedList[] = `ls -sl`;

string $currentObject;

for ($currentObject in $selectedList)
	
{
setAttr {$currentObject + ".radius"} .5;
}

select {$name + "_ribbon"} {$name + "_SpineTopJIK"} {$name + "_spineBtm01JIK"} {$name + "_spineMidJIK"};
newSkinCluster "-n ribbonSkinClstr -toSelectedBones -ignoreHierarchy -mi 5 -dr 10 -rui true";
rename ribbonSkinClstr {$name + "_ribbonSkinClstr"};
//delete bindPose1;

//WEIGHTS
skinPercent -tv {$name + "_spineMidJIK"} 0.125 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[0:1][5]"};
skinPercent -tv {$name + "_spineMidJIK"} 0.375 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[0:1][4]"};
skinPercent -tv {$name + "_SpineTopJIK"} 0.100 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[0:1][3]"};
skinPercent -tv {$name + "_spineBtm01JIK"} 0.1 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[0:1][2]"};
skinPercent -tv {$name + "_spineMidJIK"} 0.375 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[1][1]"} {$name + "_ribbon.cv[0][1]"};
skinPercent -tv {$name + "_spineMidJIK"} 0.125 ($name + "_ribbonSkinClstr") {$name + "_ribbon.cv[1][0]"} {$name + "_ribbon.cv[0][0]"};

//GROUP AND SCALE
group -n {$name + "_ribbonSpineG"} {$name + "_spineBtm01JIK"} {$name + "_spineMidJIK"} {$name + "_SpineTopJIK"};
$spineLength = `xform -q -t {$name + "_spineEndLctr"}`;
setAttr ({$name + "_ribbonSpineG.scale"}, ($spineLength[1] / 4), ($spineLength[1] / 4), ($spineLength[1] / 4));


//CONNECT TO RIG
parentConstraint {$name + "_SpineTopIKC"} {$name + "_SpineTopJIK"} ;

parentConstraint {$name + "_SpineMidIKC"} {$name + "_spineMidJIK"} ;

parentConstraint {$name + "_MainHipC"} {$name + "_spineBtm01JIK"} ;

//CREATE CURVE FOR SPINE LENGTH
$ROOT_Pos = `xform -q -ws -t {$name + "_ROOTJ"}`;
$spine01_Pos = `xform -q -ws -t {$name + "_spine01J"}`;
$spineMidJIK_Pos = `xform -q -ws -t {$name + "_spineMidJIK"}`;
$spine03_Pos = `xform -q -ws -t {$name + "_spine03J"}`;
$spine04_Pos = `xform -q -ws -t {$name + "_SpineTopJIK"}`;

curve -n {$name + "_spineLengthC"} -d 3
-p $ROOT_Pos[0] $ROOT_Pos[1] $ROOT_Pos[2]
-p (( $spineMidJIK_Pos[0] - $ROOT_Pos[0]) /3.4 + $ROOT_Pos[0])
(( $spineMidJIK_Pos[1] - $ROOT_Pos[1]) /3.4 + $ROOT_Pos[1])
(( $spineMidJIK_Pos[2] - $ROOT_Pos[2]) /3.4 + $ROOT_Pos[2])

-p (( $spineMidJIK_Pos[0] - $ROOT_Pos[0]) /1.35 + $ROOT_Pos[0])
(( $spineMidJIK_Pos[1] - $ROOT_Pos[1]) /1.35 + $ROOT_Pos[1])
(( $spineMidJIK_Pos[2] - $ROOT_Pos[2]) /1.35 + $ROOT_Pos[2])

-p (($spine04_Pos[0] - $spineMidJIK_Pos[0]) /3.7 + $spineMidJIK_Pos[0])
(($spine04_Pos[1] - $spineMidJIK_Pos[1]) /3.7 + $spineMidJIK_Pos[1])
(($spine04_Pos[2] - $spineMidJIK_Pos[2]) /3.7 + $spineMidJIK_Pos[2])

-p (($spine04_Pos[0] - $spineMidJIK_Pos[0]) /1.4 + $spineMidJIK_Pos[0])
(($spine04_Pos[1] - $spineMidJIK_Pos[1]) /1.4 + $spineMidJIK_Pos[1])
(($spine04_Pos[2] - $spineMidJIK_Pos[2]) /1.4 + $spineMidJIK_Pos[2])
-p $spine04_Pos[0] $spine04_Pos[1] $spine04_Pos[2]
-k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 3 -k 3;
//-k 0 -k 0 -k 0 -k 1 -k 2 -k 2 -k 2 ;
pickWalk -d down;
rename {$name + "_spineLengthCShape"};
select {$name + "_spineLengthC"};
arclen -ch 1;
rename "curveInfo1" {$name + "spineLengthInfo"};


//ATTACH CURVE TO RIG
select {$name + "_spineLengthC.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_spineLengthClstr01"};

select {$name + "_spineLengthC.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_spineLengthClstr02"};

select {$name + "_spineLengthC.cv[4:5]"} ;
newCluster " -envelope 1";
rename {$name + "_spineLengthClstr03"};

connectAttr -f {$name + "_MainHipC.matrix"} {$name + "_spineLengthClstr01Shape.weightedNode"};
setAttr {$name + "_spineLengthClstr01Cluster.relative"} 0;
parent {$name + "_spineLengthClstr01"} {$name + "_MainHipC"};
setAttr {$name + "_spineLengthClstr01.v"} 0;

connectAttr -f {$name + "_SpineMidIKC.matrix"} {$name + "_spineLengthClstr02Shape.weightedNode"};
setAttr {$name + "_spineLengthClstr02Cluster.relative"} 0;
parent {$name + "_spineLengthClstr02"} {$name + "_SpineMidIKC"};
setAttr {$name + "_spineLengthClstr02.v"} 0;

connectAttr -f {$name + "_SpineTopIKC.matrix"} {$name + "_spineLengthClstr03Shape.weightedNode"};
setAttr {$name + "_spineLengthClstr03Cluster.relative"} 0;
parent {$name + "_spineLengthClstr03"} {$name + "_SpineTopIKC"};
setAttr {$name + "_spineLengthClstr03.v"} 0;

//SCALE

shadingNode -asUtility multiplyDivide -n {$name + "HierarchyCompensate_MD"};
setAttr {$name + "HierarchyCompensate_MD.operation"} 2;
connectAttr -f {$name + "spineLengthInfo.arcLength"} {$name + "HierarchyCompensate_MD.input1X"};
connectAttr -f {$name + "_MainC.scaleY"} {$name + "HierarchyCompensate_MD.input2X"};

shadingNode -asUtility multiplyDivide -n {$name + "SpineLengthRatio_MD"};
connectAttr -f {$name + "HierarchyCompensate_MD.outputX"} {$name + "SpineLengthRatio_MD.input1X"};
setAttr {$name + "SpineLengthRatio_MD.operation"} 2;

float $SpineLengthValue = `getAttr {$name + "spineLengthInfo.arcLength"}`;
setAttr {$name + "SpineLengthRatio_MD.input2X"} $SpineLengthValue;

connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_spine01J.scaleY"};
connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_spine02J.scaleY"};
connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_spine03J.scaleY"};

connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_SpineTopJIK.scaleY"};
connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_spineMidJIK.scaleY"};
connectAttr -f {$name + "SpineLengthRatio_MD.outputX"} {$name + "_spineBtm01JIK.scaleY"};


//INVERSE SCALE
shadingNode -asUtility multiplyDivide -n {$name + "SpineLengthRatioInverse_MD"};
connectAttr -f {$name + "HierarchyCompensate_MD.outputX"} {$name + "SpineLengthRatioInverse_MD.input2X"};
setAttr {$name + "SpineLengthRatioInverse_MD.operation"} 2;

float $SpineLengthValue = `getAttr {$name + "spineLengthInfo.arcLength"}`;
setAttr {$name + "SpineLengthRatioInverse_MD.input1X"} $SpineLengthValue;

connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine01J.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine01J.scaleZ"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine02J.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine02J.scaleZ"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine03J.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spine03J.scaleZ"};

connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_SpineTopJIK.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_SpineTopJIK.scaleZ"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spineMidJIK.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spineMidJIK.scaleZ"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spineBtm01JIK.scaleX"};
connectAttr -f {$name + "SpineLengthRatioInverse_MD.outputX"} {$name + "_spineBtm01JIK.scaleZ"};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		//HEAD CONTROL
curve -n {$name + "_HeadC"} -d 1 -p 0 -5 0 -p -2 -3 0 -p -1 -3 0 -p -1 -1 0 -p -3 -1 0 -p -3 -2 0
-p -5 0 0 -p -3 2 0 -p -3 1 0 -p -1 1 0 -p -1 3 0 -p -2 3 0 -p 0 5 0 -p 2 3 0
-p 1 3 0 -p 1 1 0 -p 3 1 0 -p 3 2 0 -p 5 0 0 -p 3 -2 0 -p 3 -1 0 -p 1 -1 0	
-p 1 -3 0 -p 2 -3 0 -p 0 -5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9
-k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22
-k 23 -k 24 ;
move -r 0 0 0.95 {$name + "_HeadC.cv[12]"}  {$name + "_HeadC.cv[0]"} {$name + "_HeadC.cv[24]"} {$name + "_HeadC.cv[18]"} {$name + "_HeadC.cv[6]"} ;
move -r 0 0 -0.65 {$name + "_HeadC.cv[3]"} {$name + "_HeadC.cv[9]"} {$name + "_HeadC.cv[15]"} {$name + "_HeadC.cv[21]"} ;
select {$name + "_HeadC"};
rotate 90 0 0 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
group -n {$name + "_HeadCG"};
select -add {$name + "_HeadTipJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
$HeadJointLoc = `xform -ws -q -t {$name + "_HeadJ"}`;
$Neck01JointLoc = `xform -ws -q -t {$name + "_Neck01J"}`;

$HeadTipJointLoc = `xform -q -t {$name + "_HeadTipJ"}`;
setAttr {$name + "_HeadC.ty"} ($HeadTipJointLoc[0] / 5);
setAttr ({$name + "_HeadC.scale"}, ($HeadTipJointLoc[0]/8), ($HeadTipJointLoc[0]/8), ($HeadTipJointLoc[0]/8));

makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_HeadC"};

move $HeadJointLoc[0] $HeadJointLoc[1] $HeadJointLoc[2] {$name + "_HeadC.scalePivot"} {$name + "_HeadC.rotatePivot"} ;
move $HeadJointLoc[0] $HeadJointLoc[1] $HeadJointLoc[2] {$name + "_HeadCG.scalePivot"} {$name + "_HeadCG.rotatePivot"} ;

group -n {$name + "_HeadCG2"} {$name + "_HeadCG"};
move $HeadJointLoc[0] $HeadJointLoc[1] $HeadJointLoc[2] {$name + "_HeadCG2.scalePivot"} {$name + "_HeadCG2.rotatePivot"} ;

//JAW CONTROL
circle -n {$name + "_JawC"};
scale -r 1 0.5 1;
move -r -os -wd 0 0 1.2 {$name + "_JawC.cv[1]"} {$name + "_JawC.cv[5]"};
move -r -os -wd 0 0 0.58 {$name + "_JawC.cv[0]"} {$name + "_JawC.cv[2]"} {$name + "_JawC.cv[4]"} {$name + "_JawC.cv[6]"};
select {$name + "_JawC"} ;
rotate -r -os 35 0 0 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
group -n {$name + "_JawCG"};
select -add {$name + "_JawTipJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
$JawLength = `xform -q -t {$name + "_JawTipJ"}`;
setAttr ({$name + "_JawC.scale"}, ($JawLength[0] * 0.75), ($JawLength[0] * 0.75), ($JawLength[0] * 0.75));

makeIdentity -apply true -t 1 -r 1 -s 1;
delete -ch;

$JawLoc = `xform -ws -q -rp {$name + "_JawJ"}`;
$HeadLoc = `xform -ws -q -rp {$name + "_HeadJ"}`;
move $JawLoc[0] $JawLoc[1] $JawLoc[2] {$name + "_JawC.scalePivot"} {$name + "_JawC.rotatePivot"};
move $HeadLoc[0] $HeadLoc[1] $HeadLoc[2] {$name + "_JawCG.scalePivot"} {$name + "_JawCG.rotatePivot"};

//EYE IK CONTROL
circle -n{$name + "_EyeAimC"};
scale -r 1.4 0.75 1;
duplicate -n {$name + "_lEyeAimC"};
select {$name + "_lEyeAimC.cv[1:5]"} ;
move -x 0.1;
scale -r -p 0cm 0cm 0cm 1 0.95 1 ;
select {$name + "_lEyeAimC.cv[0:7]"} ;
scale -r -p 0cm 0cm 0cm 0.85 0.85 0.85 ;
select {$name + "_lEyeAimC"};
duplicate -n {$name + "_rEyeAimC"};
setAttr {$name + "_rEyeAimC.scaleX"} -1.4;
select -add {$name + "_lEyeAimC"};
makeIdentity -apply true -t 1 -r 1 -s 1;
select -add{$name + "_EyeAimC"};
delete -ch;
parent;
group -n{$name + "_EyeAimCG"} {$name + "_EyeAimC"};
pointConstraint {$name + "_lEyeJ"} {$name + "_rEyeJ"}{$name + "_EyeAimCG"} ;
delete{$name + "_EyeAimCG_pointConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1{$name + "_EyeAimCG"};
$lEyeLoc = `xform -q -ws -t {$name + "_lEyeJ"}`;
$rEyeLoc = `xform -q -ws -t {$name + "_rEyeJ"}`;
setAttr ({$name + "_EyeAimCG.scale"}, (($lEyeLoc[0]-$rEyeLoc[0])/1.25), (($lEyeLoc[0]-$rEyeLoc[0])/1.25), (($lEyeLoc[0]-$rEyeLoc[0])/1.25));
setAttr ({$name + "_EyeAimCG.translate"}, 0, 0, (($lEyeLoc[0]-$rEyeLoc[0])*4));
makeIdentity -apply true -t 1 -r 1 -s 1;

aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType"objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} {$name + "_lEyeJ"} {$name + "_rEyeJ"}{$name + "_EyeAimC"};

move -r $rEyeLoc[0] 0 0 {$name + "_rEyeAimC.scalePivot"} {$name + "_rEyeAimC.rotatePivot"} ;
move -r $lEyeLoc[0] 0 0 {$name + "_lEyeAimC.scalePivot"} {$name + "_lEyeAimC.rotatePivot"} ;
setAttr {$name + "_rEyeAimC.scaleX"} -1;
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rEyeAimC"};
setAttr {$name + "_rEyeAimC.scaleX"} -1;

//NECK SPLINE
parent -w {$name + "_HeadJ"};
$Neck01Loc = `xform -q -ws -rp {$name + "_Neck01J"}`;
$Neck02Loc = `xform -q -ws -rp {$name + "_Neck02J"}`;
$HeadLoc = `xform -q -ws -rp {$name + "_HeadJ"}`;
curve -n {$name + "_NeckCurve"} -d 1
-p $Neck01Loc[0] $Neck01Loc[1] $Neck01Loc[2]
-p $Neck02Loc[0] $Neck02Loc[1] $Neck02Loc[2]
-p $HeadLoc[0] $HeadLoc[1] $HeadLoc[2]
-k 0 -k 1 -k 2 ;

rebuildCurve -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 1 -d 3 -tol 0.01 {$name + "_NeckCurve"};

select {$name + "_NeckCurve.cv[0:1]"} ;
newCluster " -envelope 1";
rename {$name + "_NeckBtmClstr"};
group -n {$name + "_NeckBtmClstrG"}; xform -os -piv $Neck01Loc[0] $Neck01Loc[1] $Neck01Loc[2];
parentConstraint -mo {$name + "_Neck01J"} {$name + "_NeckBtmClstrG"};

select {$name + "_NeckCurve.cv[2:3]"} ;
newCluster " -envelope 1";
rename {$name + "_HeadClstr"};
group -n {$name + "_HeadClstrG"}; xform -os -piv $HeadLoc[0] $HeadLoc[1] $HeadLoc[2];
parentConstraint -mo {$name + "_HeadJ"} {$name + "_HeadClstrG"};

spaceLocator -n {$name + "_NeckLengthAimLctr"};
spaceLocator -n {$name + "_NeckLengthTargetLctr"};
parent {$name + "_NeckLengthTargetLctr"} {$name + "_NeckLengthAimLctr"};
pointConstraint {$name + "_Neck01C"} {$name + "_NeckLengthAimLctr"} ;
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 1 0 -upVector 1 0 0 -worldUpType "none" {$name + "_HeadC"} {$name + "_NeckLengthAimLctr"};
pointConstraint {$name + "_HeadC"} {$name + "_NeckLengthTargetLctr"} ;

shadingNode -n {$name + "_NeckLength_MD"} -asUtility multiplyDivide;
setAttr {$name + "_NeckLength_MD.operation"} 2;
$NeckLength = `getAttr {$name + "_NeckLengthTargetLctr.ty"}`;
setAttr {$name + "_NeckLength_MD.input2X"} $NeckLength;
connectAttr -force {$name + "_NeckLengthTargetLctr.translateY"} {$name + "_NeckLength_MD.input1X"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_NeckBtmClstrG.scaleX"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_NeckBtmClstrG.scaleY"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_NeckBtmClstrG.scaleZ"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_HeadClstrG.scaleX"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_HeadClstrG.scaleY"};
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_HeadClstrG.scaleZ"};

connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_Neck02J.scaleY"};

shadingNode -n {$name + "_NeckLengthInv_MD"} -asUtility multiplyDivide;
setAttr {$name + "_NeckLengthInv_MD.operation"} 2;
setAttr {$name + "_NeckLengthInv_MD.input1X"} 1;
connectAttr -force {$name + "_NeckLength_MD.outputX"} {$name + "_NeckLengthInv_MD.input2X"};
connectAttr -force {$name + "_NeckLengthInv_MD.outputX"} {$name + "_Neck02J.scaleX"};
connectAttr -force {$name + "_NeckLengthInv_MD.outputX"} {$name + "_Neck02J.scaleZ"};

spaceLocator -n {$name + "_NeckUpLctr"};
pointConstraint {$name + "_Neck02J"} {$name + "_NeckUpLctr"};
delete {$name + "_NeckUpLctr_pointConstraint1"};
move -r 0 0 ($NeckLength*1);
parentConstraint -mo {$name + "_Neck01J"} {$name + "_HeadJ"} {$name + "_NeckUpLctr"};

nurbsSquare -n {$name + "_Neck02CG"} -c 0 0 0 -nr 0 1 0 -sl1 ($NeckLength*2) -sl2 ($NeckLength*2) -sps 1 -d 3 -ch 1 ;
parent -r -s {"right" + $name + "_Neck02CGShape"} {"bottom" + $name + "_Neck02CGShape"} {"left" + $name + "_Neck02CGShape"} {"top" + $name + "_Neck02CG"} ;
rename {"top" + $name + "_Neck02CG"} {$name + "_Neck02C"};
delete {"left" + $name + "_Neck02CG"} {"bottom" + $name + "_Neck02CG"} {"right" + $name + "_Neck02CG"} ;
makeIdentity -apply true -t 1 -r 1 -s 1;
delete -ch {$name + "_Neck02C"};

connectAttr -f {$name + "_MainC.scale"} {$name + "_Neck02C.scale"};
pathAnimation -n {$name + "_NeckMP"} -fractionMode true -follow true -followAxis y -upAxis z -worldUpType "object"
-worldUpObject {$name + "_NeckUpLctr"} -inverseUp false -inverseFront false -bank false
-startTimeU `playbackOptions -query -minTime` -endTimeU  `playbackOptions -query -maxTime` {$name + "_Neck02CG"} {$name + "_NeckCurve"};
cutKey -cl -t ":" -f ":" -at "u" {$name + "_NeckMP"};
setAttr {$name + "_NeckMP.uValue "}.5;

parentConstraint {$name + "_Neck02C"} {$name + "_Neck02J"};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////LEFT CONTROLS/////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//LEFT CLAVICLE CONTROL
circle -n {$name + "_lClavicleC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
move -r 1.35 2 0 {$name + "_lClavicleC.cv[3]"} {$name + "_lClavicleC.cv[7]"} ;
move -r 0.5 1.25 0 {$name + "_lClavicleC.cv[2]"} {$name + "_lClavicleC.cv[4]"} {$name + "_lClavicleC.cv[0]"} {$name + "_lClavicleC.cv[6]"} ;
select {$name + "_lClavicleC"};
group -n {$name + "_lClavicleCG"};
select -add {$name + "_lClavicleJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
$lClavicleLength = `xform -q -t {$name + "_lClavicleJ"}`;
$lShoulderLength = `xform -q -t {$name + "_lShoulderJ"}`;

spaceLocator -n {$name + "_Spine04Lctr"} -p 0 0 0;
spaceLocator -n {$name + "_lClavicleLctr"} -p 0 0 0;
pointConstraint {$name + "_Spine04J"} {$name + "_Spine04Lctr"};

pointConstraint {$name + "_lClavicleJ"} {$name + "_lClavicleLctr"};

aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "scene"
{$name + "_lClavicleJ"} {$name + "_Spine04Lctr"};
parent {$name + "_lClavicleLctr"} {$name + "_Spine04Lctr"};
$lClavicleLength = `xform -q -t {$name + "_lClavicleLctr"}`;

setAttr ({$name + "_lClavicleCG.scale"}, (($lClavicleLength[0]) * 0.65), (($lClavicleLength[0]) * 0.8), (($lClavicleLength[0])*1.25));

delete {$name + "_Spine04Lctr"};

parent -w {$name + "_lClavicleCG"};
makeIdentity -apply true -t 1 -s 1 {$name + "_lClavicleCG"};

//LEFT SHOULDER FK CONTROL
circle -n {$name + "_lShoulderFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lShoulderFKCG"};
select -add {$name + "_lShoulderJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
$lElbowLength = `xform -q -t {$name + "_lElbowJ"}`;
$lWristLength = `xform -q -t {$name + "_lWristJDummy"}`;
$lArmLength[0] = (($lElbowLength[0] + $lWristLength[0]) /2);
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lShoulderFKC"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lShoulderFKC"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lShoulderFKC"};

setAttr ({$name + "_lShoulderFKC.scale"}, ($lArmLength[0]/2), ($lArmLength[0]/2), ($lArmLength[0]/2));
makeIdentity -apply true -s 1 {$name + "_lShoulderFKCG"};
parent -w {$name + "_lShoulderFKCG"};

//LEFT ELBOW FK CONTROL
select {$name + "_lShoulderFKCG"};
duplicate -n {$name + "_lElbowFKCG"};
select -add {$name + "_lElbowJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lElbowFKC"};

//LEFT WRIST FK CONTROL
select {$name + "_lShoulderFKCG"};
duplicate -n {$name + "_lWristFKCG"};
select -add {$name + "_lWristJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
scale -r 0.85 0.85 0.85 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lWristFKC"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lWristFKC"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lWristFKC"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lWristFKC"};

//DETACH FK ARM JOINTS FOR SCALE COMPENSATION
parent -w {$name + "_lElbowJFK"} {$name + "_lWristJFK"};
group -n {$name + "_lWristJFKG1"} {$name + "_lWristJFK"};
group -n {$name + "_lWristJFKG2"} {$name + "_lWristJFKG1"};
$lWristLocation = `xform -q -ws -t {$name + "_lWristJ"}`;
move $lWristLocation[0] $lWristLocation[1] $lWristLocation[2] {$name + "_lWristJFKG2.scalePivot"} {$name + "_lWristJFKG2.rotatePivot"} ;
pointConstraint {$name + "_lWristFKC"} {$name + "_lWristJFKG1"};
parentConstraint -mo {$name + "_lElbowJFK"} {$name + "_lWristJFKG2"};

group -n {$name + "_lElbowJFKG1"} {$name + "_lElbowJFK"};
group -n {$name + "_lElbowJFKG2"} {$name + "_lElbowJFKG1"};
$lElbowLocation = `xform -q -ws -t {$name + "_lElbowJ"}`;
move $lElbowLocation[0] $lElbowLocation[1] $lElbowLocation[2] {$name + "_lElbowJFKG2.scalePivot"} {$name + "_lElbowJFKG2.rotatePivot"} ;
pointConstraint {$name + "_lElbowFKC"} {$name + "_lElbowJFKG1"};
parentConstraint -mo {$name + "_lShoulderJFK"} {$name + "_lElbowJFKG2"};

//LEFT WRIST IK CONTROL
circle  -n {$name + "_lWristIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 16 -ch 1;
move -r -1.083809 0 0 {$name + "_lWristIKC.cv[12]"} ;
move -r 0 0 0.292629 {$name + "_lWristIKC.cv[13]"} ;
move -r -0.769505 0 -0.130057 {$name + "_lWristIKC.cv[11]"} ;
move -r 0.379333 0 -0.303467 {$name + "_lWristIKC.cv[10]"} ;
move -r 0.541905 0 0 {$name + "_lWristIKC.cv[9]"} ;
move -r -0.834533 0 0 {$name + "_lWristIKC.cv[13]"} ;
move -r 0.346819 0 0.693638 {$name + "_lWristIKC.cv[14]"} ;
move -r 0.357657 0 0 {$name + "_lWristIKC.cv[15]"} ;
move -r 0.2276 0 -0.0216761 {$name + "_lWristIKC.cv[13]"} ;
move -r 0.0216762 0 0.0867047 {$name + "_lWristIKC.cv[7]"} ;
move -r 0.0325143 0 0.0758667 {$name + "_lWristIKC.cv[6]"} ;
move -r 0 0 0.2276 {$name + "_lWristIKC.cv[14]"} ;
move -r 0.173409 0 0.140895 {$name + "_lWristIKC.cv[15]"} ;
move -r 0.270952 0 0.0216762 {$name + "_lWristIKC.cv[0]"} ;
move -r -0.0325143 0 0.0325143 {$name + "_lWristIKC.cv[15]"} ;
move -r -0.0108381 0 -0.173409 {$name + "_lWristIKC.cv[14]"} ;
move -r 0.0975428 0 0.0325143 {$name + "_lWristIKC.cv[0]"} ;
move -r 0.162571 0 0.0216762 {$name + "_lWristIKC.cv[1]"} ;
move -r -0.173409 0 0.119219 {$name + "_lWristIKC.cv[13]"} ;
move -r 0 0 0.0216762 {$name + "_lWristIKC.cv[12]"} ;
move -r -0.0758667 0 0.0867047 {$name + "_lWristIKC.cv[14]"} ;
move -r 0.119219 0 0.520228 {$name + "_lWristIKC.cv[15]"} ;
move -r 0.325143 0 0.140895 {$name + "_lWristIKC.cv[0]"} ;
move -r 0.238438 0 -0.0758667 {$name + "_lWristIKC.cv[1]"} ;
move -r 0.108381 0 -0.0325143 {$name + "_lWristIKC.cv[2]"} ;
move -r 0.0758667 0 0.0541905 {$name + "_lWristIKC.cv[1]"} ;
move -r -0.0141441 0 0 {$name + "_lWristIKC.cv[11:13]"} ;
move -r -0.339459 0 -0.0565766 {$name + "_lWristIKC.cv[10]"} ;
move -r 0.141441 0 -0.113153 {$name + "_lWristIKC.cv[9]"} ;
move -r 0.381892 0 0.099009 {$name + "_lWristIKC.cv[8]"} ;
move -r 0.183874 0 0.155586 {$name + "_lWristIKC.cv[7]"} ;
move -r 0 0 0.0565766 {$name + "_lWristIKC.cv[6]"} ;
move -r 0.127297 0 0.0707207 {$name + "_lWristIKC.cv[0]"} ;
move -r 0.226306 0 -0.0707207 {$name + "_lWristIKC.cv[1]"} ;
move -r 0.155586 0 -0.0707207 {$name + "_lWristIKC.cv[2]"} ;
move -r 0 0 0.247523 {$name + "_lWristIKC.cv[6:14]"} ;
move -r 0 0 0.247523 {$name + "_lWristIKC.cv[5]"} ;
move -r 0 0 0.066006 {$name + "_lWristIKC.cv[4]"} ;
move -r 0 0 0.066006 {$name + "_lWristIKC.cv[1]"} ;
move -r 0 0 0.132012 {$name + "_lWristIKC.cv[8:10]"} ;
move -r -0.0165015 0 0.0825075 {$name + "_lWristIKC.cv[9]"} ;
move -r -0.0825075 0 0.0165015 {$name + "_lWristIKC.cv[8]"} ;
move -r 0.132012 0 0 {$name + "_lWristIKC.cv[15]"} ;
move -r -0.099009 0 0 {$name + "_lWristIKC.cv[9]"} ;
move -r 0.568042 -0.00947902 -0.182223 {$name + "_lWristIKC.cv[0:15]"} ;
move -r 0.4561 0 0 {$name + "_lWristIKC.cv[0:15]"} ;
move -r -os -wd 0 0 0.3 {$name + "_lWristIKC.cv[0:15]"} ;

group -n {$name + "_lWristIKCG"} {$name + "_lWristIKC"};
select -add {$name + "_lWristJ"};
parent;
makeIdentity -apply false -t 1 -s 1;
parent -w;

spaceLocator -n {$name + "_lHandSizeLctr"} -p 0 0 0;
spaceLocator -n {$name + "_lHandAimLctr"} -p 0 0 0;
parent {$name + "_lHandSizeLctr"} {$name + "_lHandAimLctr"};
pointConstraint {$name + "_lWristIKCG"} {$name + "_lHandAimLctr"};
select {$name + "_lFinger1JTip"};
if (`objExists ($name + "_lFinger2J1")`)
{select -add {$name + "_lFinger2JTip"};}
if (`objExists ($name + "_lFinger3J1")`)
{select -add {$name + "_lFinger3JTip"};}
if (`objExists ($name + "_lFinger4J1")`)
{select -add {$name + "_lFinger4JTip"};}
if (`objExists ($name + "_lFinger5J1")`)
{select -add {$name + "_lFinger5JTip"};}
if (`objExists ($name + "_lFinger6J1")`)
{select -add {$name + "_lFinger6JTip"};}
if (`objExists ($name + "_lFinger7J1")`)
{select -add {$name + "_lFinger7JTip"};}
if (`objExists ($name + "_lFinger8J1")`)
{select -add {$name + "_lFinger8JTip"};}
if (`objExists ($name + "_lFinger9J1")`)
{select -add {$name + "_lFinger9JTip"};}
select -add {$name + "_lHandAimLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none"; 
delete {$name + "_lHandAimLctr_pointConstraint1"};
delete {$name + "_lHandAimLctr_aimConstraint1"};
select {$name + "_lFinger1JTip"};
if (`objExists ($name + "_lFinger2J1")`)
{select -add {$name + "_lFinger2JTip"};}
if (`objExists ($name + "_lFinger3J1")`)
{select -add {$name + "_lFinger3JTip"};}
if (`objExists ($name + "_lFinger4J1")`)
{select -add {$name + "_lFinger4JTip"};}
if (`objExists ($name + "_lFinger5J1")`)
{select -add {$name + "_lFinger5JTip"};}
if (`objExists ($name + "_lFinger6J1")`)
{select -add {$name + "_lFinger6JTip"};}
if (`objExists ($name + "_lFinger7J1")`)
{select -add {$name + "_lFinger7JTip"};}
if (`objExists ($name + "_lFinger8J1")`)
{select -add {$name + "_lFinger8JTip"};}
if (`objExists ($name + "_lFinger9J1")`)
{select -add {$name + "_lFinger9JTip"};}
select -add {$name + "_lHandSizeLctr"};
pointConstraint -offset 0 0 0 -skip y -skip z -weight 1;
$lHandSize = `xform -q -t {$name + "_lHandSizeLctr"}`;

setAttr ({$name + "_lWristIKCG.scale"}, ($lHandSize[0]*.58), ($lHandSize[0]*.58), ($lHandSize[0]*.58));
setAttr ({$name + "_lWristIKCG.rotate"}, $lWristRotation[0], $lWristRotation[1], $lWristRotation[2]);

select -cl;
delete {$name + "_lHandAimLctr"};
makeIdentity -apply true -t 1 -s 1 {$name + "_lWristIKCG"};
delete -ch {$name + "_lWristIKCG"};

//LEFT ELBOW IK CONTROL
curve -n {$name + "_lElbowIKC"} -d 1 -p 0 -5 0 -p -2 -3 0 -p -1 -3 0 -p -1 -1 0 -p -3 -1 0 -p -3 -2 0
-p -5 0 0 -p -3 2 0 -p -3 1 0 -p -1 1 0 -p -1 3 0 -p -2 3 0 -p 0 5 0 -p 2 3 0
-p 1 3 0 -p 1 1 0 -p 3 1 0 -p 3 2 0 -p 5 0 0 -p 3 -2 0 -p 3 -1 0 -p 1 -1 0	
-p 1 -3 0 -p 2 -3 0 -p 0 -5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9
-k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22
-k 23 -k 24 ;

move -r 0 0 0.95 {$name + "_lElbowIKC.cv[12]"}  {$name + "_lElbowIKC.cv[0]"} {$name + "_lElbowIKC.cv[24]"} {$name + "_lElbowIKC.cv[18]"} {$name + "_lElbowIKC.cv[6]"} ;
move -r 0 0 -0.65 {$name + "_lElbowIKC.cv[3]"} {$name + "_lElbowIKC.cv[9]"} {$name + "_lElbowIKC.cv[15]"} {$name + "_lElbowIKC.cv[21]"} ;
select {$name + "_lElbowIKC"};
group -n {$name + "_lElbowIKCG"};
parentConstraint DSN_lElbow {$name + "_lElbowIKCG"};
delete {$name + "_lElbowIKCG_parentConstraint1"};
setAttr ({$name + "_lElbowIKC.scale"}, ($lArmLength[0] / 14), ($lArmLength[0] / 14), ($lArmLength[0] / 14));
setAttr {$name + "_lElbowIKC.tz"} ($lArmLength[0] * -2);

makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lElbowIKC"};

//LEFT ELBOW AIM LOCATOR
spaceLocator -n {$name + "_lElbowIKC_TargetLctr"};
pointConstraint {$name + "_lElbowJ"} {$name + "_lElbowIKC_TargetLctr"};
delete {$name + "_lElbowIKC_TargetLctr_pointConstraint1"};
pointConstraint -mo {$name + "_lShoulderJIK"} {$name + "_lWristJIK"} {$name + "_lElbowIKC_TargetLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" {$name + "_lElbowIKC_TargetLctr"} {$name + "_lElbowIKC"};

//IK SCALE

//CREATE DUMMY WRIST JOINT
select {$name + "_lWristJIK"};
duplicate -n {$name + "_lWristJIKDummy"};
parent -w;
group -n {$name + "_lWristJIKDummyG1"};
group -n {$name + "_lWristJIKDummyG2"};

move $lElbowLocation[0] $lElbowLocation[1] $lElbowLocation[2] {$name + "_lWristJIKDummyG2.scalePivot"} {$name + "_lWristJIKDummyG2.rotatePivot"} ;
pointConstraint {$name + "_lWristJIK"} {$name + "_lWristJIKDummyG1"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_lWristIKC"} {$name + "_lWristJIKDummy"};
setAttr {$name + "_lWristJIKDummy_parentConstraint1.interpType"} 2;
parentConstraint -mo {$name + "_lElbowJIK"} {$name + "_lWristJIKDummyG2"};

//NODES
spaceLocator -n {$name + "_lArmLengthOriginLctr"};
pointConstraint {$name + "_lShoulderJIK"} {$name + "_lArmLengthOriginLctr"};

spaceLocator -n {$name + "_lArmLengthEndLctr"};
parent {$name + "_lArmLengthEndLctr"} {$name + "_lArmLengthOriginLctr"};

pointConstraint {$name + "_lWristIKC"} {$name + "_lArmLengthEndLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lWristIKC"} {$name + "_lArmLengthOriginLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_lArmLength_MD"};
setAttr {$name + "_lArmLength_MD.operation"} 2;
connectAttr -f {$name + "_lArmLengthEndLctr.translateX"} {$name + "_lArmLength_MD.input1X"};
setAttr {$name + "_lArmLength_MD.input2X"} ($lArmLength[0]*2);

shadingNode -asUtility condition -n {$name + "_lArmLength_Condition"};
connectAttr -f {$name + "_lArmLength_MD.outputX"} {$name + "_lArmLength_Condition.firstTerm"};
setAttr {$name + "_lArmLength_Condition.secondTerm"} 1;
setAttr {$name + "_lArmLength_Condition.operation"} 2;
connectAttr -f {$name + "_lArmLength_MD.outputX"} {$name + "_lArmLength_Condition.colorIfTrueR"};

shadingNode -asUtility blendColors -n {$name + "_lArmLength_Blnd"};
connectAttr -f {$name + "_lArmLength_Condition.outColorR"} {$name + "_lArmLength_Blnd.color1R"};
setAttr {$name + "_lArmLength_Blnd.color2"} -type double3 1 0 1 ;

//LEFT ARM IK LOCK

//LEFT IK LOCK LOCATORS
spaceLocator -n {$name + "_lShoulderIKLockLctr"};
spaceLocator -n {$name + "_lElbowIKLockLctr"};
spaceLocator -n {$name + "_lWristIKLockLctr"};
parent {$name + "_lElbowIKLockLctr"} {$name + "_lShoulderIKLockLctr"};
parent {$name + "_lWristIKLockLctr"} {$name + "_lElbowIKLockLctr"};
pointConstraint {$name + "_lShoulderJIK"} {$name + "_lShoulderIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lElbowIKC"} {$name + "_lShoulderIKLockLctr"};
pointConstraint {$name + "_lElbowIKC"} {$name + "_lElbowIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lWristIKC"} {$name + "_lElbowIKLockLctr"};
pointConstraint {$name + "_lWristIKC"} {$name + "_lWristIKLockLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_lShoulderLockLength_MD"};
setAttr {$name + "_lShoulderLockLength_MD.operation"} 2;
connectAttr -f {$name + "_lElbowIKLockLctr.translateX"} {$name + "_lShoulderLockLength_MD.input1X"};
setAttr {$name + "_lShoulderLockLength_MD.input2X"} $lElbowLength[0];

shadingNode -asUtility multiplyDivide -n {$name + "_lElbowLockLength_MD"};
setAttr {$name + "_lElbowLockLength_MD.operation"} 2;
connectAttr -f {$name + "_lWristIKLockLctr.translateX"} {$name + "_lElbowLockLength_MD.input1X"};
setAttr {$name + "_lElbowLockLength_MD.input2X"} $lWristLength[0];

shadingNode -asUtility blendColors -n {$name + "_lShoulderLock_Blnd"};
connectAttr -f {$name + "_lShoulderLockLength_MD.outputX"} {$name + "_lShoulderLock_Blnd.color1R"};
connectAttr -f {$name + "_lArmLength_Blnd.outputR"} {$name + "_lShoulderLock_Blnd.color2R"};

shadingNode -asUtility blendColors -n {$name + "_lElbowLock_Blnd"};
connectAttr -f {$name + "_lElbowLockLength_MD.outputX"} {$name + "_lElbowLock_Blnd.color1R"};
connectAttr -f {$name + "_lArmLength_Blnd.outputR"} {$name + "_lElbowLock_Blnd.color2R"};

//ADD STRETCH TO LEFT IK WRIST CONTROL
addAttr -ln "Stretch"  -at double  -min 0 -max 1 -dv 0 {$name + "_lWristIKC"};
setAttr -e-k true {$name + "_lWristIKC.Stretch"};
connectAttr -f {$name + "_lWristIKC.Stretch"} {$name + "_lArmLength_Blnd.blender"};

//ADD ELBOW LOCK TO LEFT IK WRIST CONTROL
addAttr -ln "ElbowLock"  -at double  -min 0 -max 1 -dv 0 {$name + "_lWristIKC"};
setAttr -e-k true {$name + "_lWristIKC.ElbowLock"};
connectAttr -f {$name + "_lWristIKC.ElbowLock"} {$name + "_lShoulderLock_Blnd.blender"};
connectAttr -f {$name + "_lWristIKC.ElbowLock"} {$name + "_lElbowLock_Blnd.blender"};

connectAttr -f {$name + "_lShoulderLock_Blnd.outputR"} {$name + "_lShoulderJIK.scaleX"};
connectAttr -f {$name + "_lElbowLock_Blnd.outputR"} {$name + "_lElbowJIK.scaleX"};

//ADD DYNAMIC PARENTING CHANNELS
addAttr -ln "DynamicParenting"  -at double  -min 1 -max 1 -dv 1 {$name + "_lWristIKC"};
setAttr -e-keyable true {$name + "_lWristIKC.DynamicParenting"};
setAttr -lock true {$name + "_lWristIKC.DynamicParenting"};
addAttr -ln "Hips"  -at double  -min 0 -max 1 -dv 0 {$name + "_lWristIKC"};
setAttr -e-keyable true {$name + "_lWristIKC.Hips"};
addAttr -ln "Chest"  -at double  -min 0 -max 1 -dv 0 {$name + "_lWristIKC"};
setAttr -e-keyable true {$name + "_lWristIKC.Chest"};
addAttr -ln "Head"  -at double  -min 0 -max 1 -dv 0 {$name + "_lWristIKC"};
setAttr -e-keyable true {$name + "_lWristIKC.Head"};

//////////////////////////////////LEFT HAND IKFK SWITCH CONTROL///////////////////////////////////////////
curve -n {$name + "_lArmSwitchC"} -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2
-p 2 0 -2 -p 0 0 0 -p 0 2 -2 -p 0 1 -2 -p 0 1 -5 -p 0 -1 -5 -p 0 -1 -2
-p 0 -2 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10
-k 11 -k 12 -k 13 -k 14 ;
move -r -os -wd 0 0 -8 ;
group -n {$name + "_lArmSwitchCG"}; xform -os -piv 0 0 0;
scale -r 0.2 0.2 0.2 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
pointConstraint {$name + "_lWristJ"} {$name + "_lArmSwitchCG"};
delete {$name + "_lArmSwitchCG_pointConstraint1"};
parent {$name + "_lArmSwitchCG"} {$name + "_lWristIKCG"};
makeIdentity -apply false -r 1 {$name + "_lArmSwitchCG"};
parent -w {$name + "_lArmSwitchCG"};

setAttr ({$name + "_lArmSwitchCG.scale"}, ($lArmLength[0] / 3.5), ($lArmLength[0] / 3.5), ($lArmLength[0] / 3.5));
makeIdentity -apply true -t 1 -s 1;

addAttr -ln "SwitchIkFk"  -at double  -min 0 -max 1 -dv 1 {$name + "_lArmSwitchC"};
setAttr -e-k true {$name + "_lArmSwitchC.SwitchIkFk"};
addAttr -ln "AutoVolume"  -at double  -min 0 -max 1 -dv 1 {$name + "_lArmSwitchC"};
setAttr -e-k true {$name + "_lArmSwitchC.AutoVolume"};

parentConstraint -mo {$name + "_lWristJ"} {$name + "_lArmSwitchCG"};

//////////////////////////////////LEFT PALM CONTROL/////////////////////////////

curve -n {$name + "_lPalmC"} -d 1 -p 0 0.5 0.5 -p 0 0.5 -0.5 -p 0 -0.5 -0.5 -p 0 -0.5 0.5 -p 0 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 ;
setAttr {$name + "_lPalmC.rotateOrder"} 1;
group -n {$name + "_lPalmCG"} {$name + "_lPalmC"};
parent {$name + "_lPalmCG"} {$name + "_lWristJG1"};

parentConstraint {$name + "_lPalmJ"} {$name + "_lPalmCG"};
delete {$name + "_lPalmCG_parentConstraint1"};
$lHandSize2 = `getAttr {$name + "_lPalmJ.translateX"}`;
scale 1 ($lHandSize2*3) ($lHandSize2*1.2) {$name + "_lPalmCG"};
makeIdentity -apply true -t 1 -s 1 {$name + "_lPalmCG"};

parent -w {$name + "_lPalmCG"};
scaleConstraint {$name + "_lWristJG1"} {$name + "_lPalmC"};
parentConstraint -mo {$name + "_lWristJ"} {$name + "_lPalmCG"};
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lPalmJ"};

/////////////////////////////////////LEFT THUMB/////////////////////////////////
select {$name + "_lFinger1JTip"};
if (`objExists ($name + "_lThumbJ1")`)
{select -add {$name + "_lThumbJ1"};}
if (`objExists ($name + "_lFinger2JTip")`)
{select -add {$name + "_lFinger2JTip"};}
if (`objExists ($name + "_lFinger3JTip")`)
{select -add {$name + "_lFinger3JTip"};}
if (`objExists ($name + "_lFinger4JTip")`)
{select -add {$name + "_lFinger4JTip"};}
if (`objExists ($name + "_lFinger5JTip")`)
{select -add {$name + "_lFinger5JTip"};}
if (`objExists ($name + "_lFinger6JTip")`)
{select -add {$name + "_lFinger6JTip"};}
if (`objExists ($name + "_lFinger7JTip")`)
{select -add {$name + "_lFinger7JTip"};}
if (`objExists ($name + "_lFinger8JTip")`)
{select -add {$name + "_lFinger8JTip"};}
if (`objExists ($name + "_lFinger9JTip")`)
{select -add {$name + "_lFinger9JTip"};}

joint -e -oj xyz -secondaryAxisOrient yup -ch -zso;

if (`objExists ($name + "_lThumbJ1")`)
{
circle -n {$name + "_lThumbJ1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lThumbJ1CG"};
select -add {$name + "_lThumbJ1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lThumbJ2Length = `xform -q -t {$name + "_lThumbJ2"}`;
$lThumbJ3Length = `xform -q -t {$name + "_lThumbJ3"}`;
$JointLength[0] = (($lThumbJ2Length[0] + $lThumbJ3Length[0]) /2);
setAttr ({$name + "_lThumbJ1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 1.1));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lThumbJ1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lThumbJ1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lThumbJ1C"};
makeIdentity -apply true -s 1 {$name + "_lThumbJ1CG"};
parent {$name + "_lThumbJ1CG"} {$name + "_lWristJG1"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lThumbJ1 DSN_lThumbJ2 {$name + "_lThumbJ1CG"};
delete {$name + "_lThumbJ1CG_aimConstraint1"};

//THUMB 2
select {$name + "_lThumbJ1CG"};
duplicate -n {$name + "_lThumbJ2CG"};
select -add {$name + "_lThumbJ2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lThumbJ2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lThumbJ2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lThumbJ2 DSN_lThumbJ3 {$name + "_lThumbJ2CG"};
delete {$name + "_lThumbJ2CG_aimConstraint1"};

//THUMB 3
select {$name + "_lThumbJ1CG"};
duplicate -n {$name + "_lThumbJ3CG"};
select -add {$name + "_lThumbJ3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lThumbJ3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lThumbJ3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lThumbJ3 DSN_lThumbJTip {$name + "_lThumbJ3CG"};
delete {$name + "_lThumbJ3CG_aimConstraint1"};

parentConstraint -mo {$name + "_lThumbJ1C"} {$name + "_lThumbJ2CG"};
parentConstraint -mo {$name + "_lThumbJ2C"} {$name + "_lThumbJ3CG"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ2C.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ3C.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ1.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ2.scale"};
connectAttr -f {$name + "_lThumbJ1C.scale"} {$name + "_lThumbJ3.scale"};
}

///////////////////////////////////////LEFT FINGER 1/////////////////////////////////////
if (`objExists ($name + "_lFinger1J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger1J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger1J1CG"};
select -add {$name + "_lFinger1J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger1J2Length = `xform -q -t {$name + "_lFinger1J2"}`;
$lFinger1J3Length = `xform -q -t {$name + "_lFinger1J3"}`;
$JointLength[0] = (($lFinger1J2Length[0] + $lFinger1J3Length[0]) /2);
setAttr ({$name + "_lFinger1J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger1J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger1J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger1J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger1J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger1J1 DSN_lFinger1J2 {$name + "_lFinger1J1CG"};
delete {$name + "_lFinger1J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_lFinger1J1CG"};
duplicate -n {$name + "_lFinger1J2CG"};
select -add {$name + "_lFinger1J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger1J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger1J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger1J2 DSN_lFinger1J3 {$name + "_lFinger1J2CG"};
delete {$name + "_lFinger1J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger1J1CG"};
duplicate -n {$name + "_lFinger1J3CG"};
select -add {$name + "_lFinger1J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger1J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger1J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger1J3 DSN_lFinger1JTip {$name + "_lFinger1J3CG"};
delete {$name + "_lFinger1J3CG_aimConstraint1"};

parent {$name + "_lFinger1J1CG"} {$name + "_lFinger1J2CG"} {$name + "_lFinger1J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J2C.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J3C.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J1.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J2.scale"};
connectAttr -f {$name + "_lFinger1J1C.scale"} {$name + "_lFinger1J3.scale"};
}

///////////////////////////////////////LEFT FINGER 2/////////////////////////////////////
if (`objExists ($name + "_lFinger2J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger2J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger2J1CG"};
select -add {$name + "_lFinger2J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger2J2Length = `xform -q -t {$name + "_lFinger2J2"}`;
$lFinger2J3Length = `xform -q -t {$name + "_lFinger2J3"}`;
$JointLength[0] = (($lFinger2J2Length[0] + $lFinger2J3Length[0]) /2);
setAttr ({$name + "_lFinger2J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger2J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger2J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger2J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger2J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger2J1 DSN_lFinger2J2 {$name + "_lFinger2J1CG"};
delete {$name + "_lFinger2J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger2J1CG"};
duplicate -n {$name + "_lFinger2J2CG"};
select -add {$name + "_lFinger2J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger2J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger2J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger2J2 DSN_lFinger2J3 {$name + "_lFinger2J2CG"};
delete {$name + "_lFinger2J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger2J1CG"};
duplicate -n {$name + "_lFinger2J3CG"};
select -add {$name + "_lFinger2J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger2J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger2J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger2J3 DSN_lFinger2JTip {$name + "_lFinger2J3CG"};
delete {$name + "_lFinger2J3CG_aimConstraint1"};

parent {$name + "_lFinger2J1CG"} {$name + "_lFinger2J2CG"} {$name + "_lFinger2J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J2C.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J3C.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J1.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J2.scale"};
connectAttr -f {$name + "_lFinger2J1C.scale"} {$name + "_lFinger2J3.scale"};
}

///////////////////////////////////////LEFT FINGER 3/////////////////////////////////////
if (`objExists ($name + "_lFinger3J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger3J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger3J1CG"};
select -add {$name + "_lFinger3J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger3J2Length = `xform -q -t {$name + "_lFinger3J2"}`;
$lFinger3J3Length = `xform -q -t {$name + "_lFinger3J3"}`;
$JointLength[0] = (($lFinger3J2Length[0] + $lFinger3J3Length[0]) /2);
setAttr ({$name + "_lFinger3J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger3J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger3J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger3J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger3J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger3J1 DSN_lFinger3J2 {$name + "_lFinger3J1CG"};
delete {$name + "_lFinger3J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger3J1CG"};
duplicate -n {$name + "_lFinger3J2CG"};
select -add {$name + "_lFinger3J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger3J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger3J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger3J2 DSN_lFinger3J3 {$name + "_lFinger3J2CG"};
delete {$name + "_lFinger3J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger3J1CG"};
duplicate -n {$name + "_lFinger3J3CG"};
select -add {$name + "_lFinger3J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger3J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger3J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger3J3 DSN_lFinger3JTip {$name + "_lFinger3J3CG"};
delete {$name + "_lFinger3J3CG_aimConstraint1"};

parent {$name + "_lFinger3J1CG"} {$name + "_lFinger3J2CG"} {$name + "_lFinger3J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J2C.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J3C.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J1.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J2.scale"};
connectAttr -f {$name + "_lFinger3J1C.scale"} {$name + "_lFinger3J3.scale"};
}

///////////////////////////////////////LEFT FINGER 4/////////////////////////////////////
if (`objExists ($name + "_lFinger4J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger4J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger4J1CG"};
select -add {$name + "_lFinger4J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger4J2Length = `xform -q -t {$name + "_lFinger4J2"}`;
$lFinger4J3Length = `xform -q -t {$name + "_lFinger4J3"}`;
$JointLength[0] = (($lFinger4J2Length[0] + $lFinger4J3Length[0]) /2);
setAttr ({$name + "_lFinger4J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger4J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger4J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger4J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger4J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger4J1 DSN_lFinger4J2 {$name + "_lFinger4J1CG"};
delete {$name + "_lFinger4J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger4J1CG"};
duplicate -n {$name + "_lFinger4J2CG"};
select -add {$name + "_lFinger4J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger4J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger4J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger4J2 DSN_lFinger4J3 {$name + "_lFinger4J2CG"};
delete {$name + "_lFinger4J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger4J1CG"};
duplicate -n {$name + "_lFinger4J3CG"};
select -add {$name + "_lFinger4J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger4J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger4J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger4J3 DSN_lFinger4JTip {$name + "_lFinger4J3CG"};
delete {$name + "_lFinger4J3CG_aimConstraint1"};

parent {$name + "_lFinger4J1CG"} {$name + "_lFinger4J2CG"} {$name + "_lFinger4J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J2C.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J3C.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J1.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J2.scale"};
connectAttr -f {$name + "_lFinger4J1C.scale"} {$name + "_lFinger4J3.scale"};
}

///////////////////////////////////////LEFT FINGER 5/////////////////////////////////////
if (`objExists ($name + "_lFinger5J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger5J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger5J1CG"};
select -add {$name + "_lFinger5J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger5J2Length = `xform -q -t {$name + "_lFinger5J2"}`;
$lFinger5J3Length = `xform -q -t {$name + "_lFinger5J3"}`;
$JointLength[0] = (($lFinger5J2Length[0] + $lFinger5J3Length[0]) /2);
setAttr ({$name + "_lFinger5J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger5J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger5J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger5J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger5J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger5J1 DSN_lFinger5J2 {$name + "_lFinger5J1CG"};
delete {$name + "_lFinger5J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger5J1CG"};
duplicate -n {$name + "_lFinger5J2CG"};
select -add {$name + "_lFinger5J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger5J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger5J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger5J2 DSN_lFinger5J3 {$name + "_lFinger5J2CG"};
delete {$name + "_lFinger5J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger5J1CG"};
duplicate -n {$name + "_lFinger5J3CG"};
select -add {$name + "_lFinger5J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger5J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger5J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger5J3 DSN_lFinger5JTip {$name + "_lFinger5J3CG"};
delete {$name + "_lFinger5J3CG_aimConstraint1"};

parent {$name + "_lFinger5J1CG"} {$name + "_lFinger5J2CG"} {$name + "_lFinger5J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J2C.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J3C.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J1.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J2.scale"};
connectAttr -f {$name + "_lFinger5J1C.scale"} {$name + "_lFinger5J3.scale"};
}

///////////////////////////////////////LEFT FINGER 6/////////////////////////////////////
if (`objExists ($name + "_lFinger6J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger6J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger6J1CG"};
select -add {$name + "_lFinger6J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger6J2Length = `xform -q -t {$name + "_lFinger6J2"}`;
$lFinger6J3Length = `xform -q -t {$name + "_lFinger6J3"}`;
$JointLength[0] = (($lFinger6J2Length[0] + $lFinger6J3Length[0]) /2);
setAttr ({$name + "_lFinger6J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger6J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger6J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger6J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger6J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger6J1 DSN_lFinger6J2 {$name + "_lFinger6J1CG"};
delete {$name + "_lFinger6J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger6J1CG"};
duplicate -n {$name + "_lFinger6J2CG"};
select -add {$name + "_lFinger6J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger6J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger6J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger6J2 DSN_lFinger6J3 {$name + "_lFinger6J2CG"};
delete {$name + "_lFinger6J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger6J1CG"};
duplicate -n {$name + "_lFinger6J3CG"};
select -add {$name + "_lFinger6J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger6J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger6J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger6J3 DSN_lFinger6JTip {$name + "_lFinger6J3CG"};
delete {$name + "_lFinger6J3CG_aimConstraint1"};

parent {$name + "_lFinger6J1CG"} {$name + "_lFinger6J2CG"} {$name + "_lFinger6J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J2C.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J3C.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J1.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J2.scale"};
connectAttr -f {$name + "_lFinger6J1C.scale"} {$name + "_lFinger6J3.scale"};
}

///////////////////////////////////////LEFT FINGER 7/////////////////////////////////////
if (`objExists ($name + "_lFinger7J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger7J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger7J1CG"};
select -add {$name + "_lFinger7J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger7J2Length = `xform -q -t {$name + "_lFinger7J2"}`;
$lFinger7J3Length = `xform -q -t {$name + "_lFinger7J3"}`;
$JointLength[0] = (($lFinger7J2Length[0] + $lFinger7J3Length[0]) /2);
setAttr ({$name + "_lFinger7J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger7J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger7J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger7J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger7J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger7J1 DSN_lFinger7J2 {$name + "_lFinger7J1CG"};
delete {$name + "_lFinger7J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger7J1CG"};
duplicate -n {$name + "_lFinger7J2CG"};
select -add {$name + "_lFinger7J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger7J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger7J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger7J2 DSN_lFinger7J3 {$name + "_lFinger7J2CG"};
delete {$name + "_lFinger7J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger7J1CG"};
duplicate -n {$name + "_lFinger7J3CG"};
select -add {$name + "_lFinger7J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger7J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger7J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger7J3 DSN_lFinger7JTip {$name + "_lFinger7J3CG"};
delete {$name + "_lFinger7J3CG_aimConstraint1"};

parent {$name + "_lFinger7J1CG"} {$name + "_lFinger7J2CG"} {$name + "_lFinger7J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J2C.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J3C.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J1.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J2.scale"};
connectAttr -f {$name + "_lFinger7J1C.scale"} {$name + "_lFinger7J3.scale"};
}

///////////////////////////////////////LEFT FINGER 8/////////////////////////////////////
if (`objExists ($name + "_lFinger8J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger8J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger8J1CG"};
select -add {$name + "_lFinger8J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger8J2Length = `xform -q -t {$name + "_lFinger8J2"}`;
$lFinger8J3Length = `xform -q -t {$name + "_lFinger8J3"}`;
$JointLength[0] = (($lFinger8J2Length[0] + $lFinger8J3Length[0]) /2);
setAttr ({$name + "_lFinger8J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger8J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger8J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger8J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger8J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger8J1 DSN_lFinger8J2 {$name + "_lFinger8J1CG"};
delete {$name + "_lFinger8J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger8J1CG"};
duplicate -n {$name + "_lFinger8J2CG"};
select -add {$name + "_lFinger8J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger8J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger8J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger8J2 DSN_lFinger8J3 {$name + "_lFinger8J2CG"};
delete {$name + "_lFinger8J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger8J1CG"};
duplicate -n {$name + "_lFinger8J3CG"};
select -add {$name + "_lFinger8J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger8J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger8J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger8J3 DSN_lFinger8JTip {$name + "_lFinger8J3CG"};
delete {$name + "_lFinger8J3CG_aimConstraint1"};

parent {$name + "_lFinger8J1CG"} {$name + "_lFinger8J2CG"} {$name + "_lFinger8J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J2C.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J3C.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J1.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J2.scale"};
connectAttr -f {$name + "_lFinger8J1C.scale"} {$name + "_lFinger8J3.scale"};
}

///////////////////////////////////////LEFT FINGER 9/////////////////////////////////////
if (`objExists ($name + "_lFinger9J1")`)
{
//JOINT 1
circle -n {$name + "_lFinger9J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lFinger9J1CG"};
select -add {$name + "_lFinger9J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$lFinger9J2Length = `xform -q -t {$name + "_lFinger9J2"}`;
$lFinger9J3Length = `xform -q -t {$name + "_lFinger9J3"}`;
$JointLength[0] = (($lFinger9J2Length[0] + $lFinger9J3Length[0]) /2);
setAttr ({$name + "_lFinger9J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_lFinger9J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_lFinger9J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_lFinger9J1C"};
makeIdentity -apply true -s 1 {$name + "_lFinger9J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger9J1 DSN_lFinger9J2 {$name + "_lFinger9J1CG"};
delete {$name + "_lFinger9J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_lFinger9J1CG"};
duplicate -n {$name + "_lFinger9J2CG"};
select -add {$name + "_lFinger9J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger9J2CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger9J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger9J2 DSN_lFinger9J3 {$name + "_lFinger9J2CG"};
delete {$name + "_lFinger9J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_lFinger9J1CG"};
duplicate -n {$name + "_lFinger9J3CG"};
select -add {$name + "_lFinger9J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_lFinger9J3CG"} {$name + "_lWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lFinger9J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lFinger9J3 DSN_lFinger9JTip {$name + "_lFinger9J3CG"};
delete {$name + "_lFinger9J3CG_aimConstraint1"};

parent {$name + "_lFinger9J1CG"} {$name + "_lFinger9J2CG"} {$name + "_lFinger9J3CG"} {$name + "_lPalmC"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J2C.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J3C.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J1.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J2.scale"};
connectAttr -f {$name + "_lFinger9J1C.scale"} {$name + "_lFinger9J3.scale"};
}


/////////////////////////////////////LEFT LEG/////////////////////////////////////

//LEFT LEG FK CONTROL

circle -n {$name + "_lHipFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lHipFKCG"};
setAttr {$name + "_lHipFKCG.rotateOrder"} 1;
parent {$name + "_lHipFKCG"} {$name + "_lHipJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_lHipFKCG"};
parent -w {$name + "_lHipFKCG"};
$lAnkle = `xform -q -t {$name + "_lAnkleJ"}`;
$lKnee = `xform -q -t {$name + "_lKneeJ"}`;
$JointLength[0] = (($lKnee[0] + $lAnkle[0]) /2);

setAttr ({$name + "_lHipFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));

//LEFT KNEE FK CONTROL
circle -n {$name + "_lKneeFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lKneeFKCG"};
setAttr {$name + "_lKneeFKCG.rotateOrder"} 1;
parent {$name + "_lKneeFKCG"} {$name + "_lKneeJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_lKneeFKCG"};
parent -w {$name + "_lKneeFKCG"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip x -skip y DSN_lKneeLctr {$name + "_lKneeFKCG"};
delete {$name + "_lKneeFKCG_aimConstraint1"};
$lAnkle = `xform -q -t {$name + "_lAnkleJ"}`;
$lKnee = `xform -q -t {$name + "_lKneeJ"}`;
$JointLength[0] = (($lKnee[0] + $lAnkle[0]) /2);

setAttr ({$name + "_lKneeFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));


//LEFT ANKLE FK CONTROL
circle -n {$name + "_lAnkleFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lAnkleFKCG"};
setAttr {$name + "_lAnkleFKCG.rotateOrder"} 1;
parent {$name + "_lAnkleFKCG"} {$name + "_lAnkleJ"};
makeIdentity -apply false -t 1 -s 1 {$name + "_lAnkleFKCG"};
parent -w {$name + "_lAnkleFKCG"};
setAttr {$name + "_lAnkleFKCG.rotateX"} 90;
setAttr {$name + "_lAnkleFKCG.rotateY"} -90;
aimConstraint -aimVector 0 1 0 -upVector -1 0 0 -worldUpType "scene" -skip x -skip y {$name + "_lBallJ"} {$name + "_lToeJ"} {$name + "_lAnkleFKCG"};
delete {$name + "_lAnkleFKCG_aimConstraint1"};
$lAnkle = `xform -q -t {$name + "_lAnkleJ"}`;
$lKnee = `xform -q -t {$name + "_lKneeJ"}`;
$JointLength[0] = (($lKnee[0] + $lAnkle[0]) /2);

setAttr ({$name + "_lAnkleFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lAnkleFKC"};

//LEFT BALL FK CONTROL
circle -n {$name + "_lBallFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lBallFKCG"};
setAttr {$name + "_lBallFKCG.rotateOrder"} 1;
parent {$name + "_lBallFKCG"} {$name + "_lBallJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_lBallFKCG"};
parent -w {$name + "_lBallFKCG"};
$lAnkle = `xform -q -t {$name + "_lAnkleJ"}`;
$lKnee = `xform -q -t {$name + "_lKneeJ"}`;
$JointLength[0] = (($lKnee[0] + $lAnkle[0]) /2);

setAttr ({$name + "_lBallFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));

//DETACH FK LEG JOINTS FOR SCALE COMPENSATION
parent -w {$name + "_lKneeJFK"} {$name + "_lAnkleJFK"};
group -n {$name + "_lAnkleJFKG1"} {$name + "_lAnkleJFK"};
group -n {$name + "_lAnkleJFKG2"} {$name + "_lAnkleJFKG1"};
$lAnkleLocation = `xform -q -ws -t {$name + "_lAnkleJ"}`;
move $lAnkleLocation[0] $lAnkleLocation[1] $lAnkleLocation[2] {$name + "_lAnkleJFKG1.scalePivot"} {$name + "_lAnkleJFKG1.rotatePivot"} ;
$lKneeLocation = `xform -q -ws -t {$name + "_lKneeJ"}`;
move $lKneeLocation[0] $lKneeLocation[1] $lKneeLocation[2] {$name + "_lAnkleJFKG2.scalePivot"} {$name + "_lAnkleJFKG2.rotatePivot"} ;
pointConstraint {$name + "_lAnkleFKC"} {$name + "_lAnkleJFKG1"};
parentConstraint -mo {$name + "_lKneeJFK"} {$name + "_lAnkleJFKG2"};

group -n {$name + "_lKneeJFKG1"} {$name + "_lKneeJFK"};
group -n {$name + "_lKneeJFKG2"} {$name + "_lKneeJFKG1"};
$lHipLocation = `xform -q -ws -t {$name + "_lHipJ"}`;
move $lKneeLocation[0] $lKneeLocation[1] $lKneeLocation[2] {$name + "_lKneeJFKG1.scalePivot"} {$name + "_lKneeJFKG1.rotatePivot"} ;
move $lHipLocation[0] $lHipLocation[1] $lHipLocation[2] {$name + "_lKneeJFKG2.scalePivot"} {$name + "_lKneeJFKG2.rotatePivot"} ;
pointConstraint {$name + "_lKneeFKC"} {$name + "_lKneeJFKG1"};
parentConstraint -mo {$name + "_lHipJFK"} {$name + "_lKneeJFKG2"};


		//LEFT KNEE IK CONTROL
curve -n {$name + "_lKneeIKC"} -d 1 -p 0 -5 0 -p -2 -3 0 -p -1 -3 0 -p -1 -1 0 -p -3 -1 0 -p -3 -2 0
-p -5 0 0 -p -3 2 0 -p -3 1 0 -p -1 1 0 -p -1 3 0 -p -2 3 0 -p 0 5 0 -p 2 3 0
-p 1 3 0 -p 1 1 0 -p 3 1 0 -p 3 2 0 -p 5 0 0 -p 3 -2 0 -p 3 -1 0 -p 1 -1 0	
-p 1 -3 0 -p 2 -3 0 -p 0 -5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9
-k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22
-k 23 -k 24 ;

move -r 0 0 0.95 {$name + "_lKneeIKC.cv[12]"}  {$name + "_lKneeIKC.cv[0]"} {$name + "_lKneeIKC.cv[24]"} {$name + "_lKneeIKC.cv[18]"} {$name + "_lKneeIKC.cv[6]"} ;
move -r 0 0 -0.65 {$name + "_lKneeIKC.cv[3]"} {$name + "_lKneeIKC.cv[9]"} {$name + "_lKneeIKC.cv[15]"} {$name + "_lKneeIKC.cv[21]"} ;

select {$name + "_lKneeIKC"};
group -n {$name + "_lKneeIKCG"};
parentConstraint DSN_lKnee {$name + "_lKneeIKCG"};
delete {$name + "_lKneeIKCG_parentConstraint1"};
$lKneeLength = `xform -q -t {$name + "_lKneeJ"}`;
$lAnkleLength = `xform -q -t {$name + "_lAnkleJ"}`;
$lLegLength[0] = (($lKneeLength[0] + $lAnkleLength[0]) /-3.5);
setAttr {$name + "_lKneeIKC.tz"} ($lLegLength[0] * -2);
setAttr ({$name + "_lKneeIKC.scale"}, ($lLegLength[0] / 14), ($lLegLength[0] / 14), ($lLegLength[0] / 14));
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lKneeIKC"};

//LEFT KNEE AIM LOCATOR
spaceLocator -n {$name + "_lKneeIKC_TargetLctr"};
pointConstraint {$name + "_lKneeJ"} {$name + "_lKneeIKC_TargetLctr"};
delete {$name + "_lKneeIKC_TargetLctr_pointConstraint1"};
pointConstraint -mo {$name + "_lHipJIK"} {$name + "_lAnkleJIK"} {$name + "_lKneeIKC_TargetLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "scene" {$name + "_lKneeIKC_TargetLctr"} {$name + "_lKneeIKC"};

//LEFT CONTROLS
	//LEFT IK//
		//LEFT FOOT IK CONTROL
circle  -n {$name + "_lFootIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 2.5 -d 3 -ut 0 -tol 0.01 -s 16 -ch 1;
move -r -0.203244 0 0.472547  {$name + "_lFootIKC.cv[1]"} ;
move -r 0.108438 0 0.70882 {$name + "_lFootIKC.cv[2]"} ;
move -r 0.892819 0 1.009532 {$name + "_lFootIKC.cv[3]"} ;
move -r 2.01238 0 0.902135 {$name + "_lFootIKC.cv[4]"} ;
move -r 2.200896 0 0.601079 {$name + "_lFootIKC.cv[5]"} ;
move -r 1.450752 0 0.3308 {$name + "_lFootIKC.cv[6]"} ;
move -r 0.406025 0 0.214794 {$name + "_lFootIKC.cv[7]"} ;
move -r -0.0357198 0 0.902544 {$name + "_lFootIKC.cv[8]"} ;
move -r -0.085452 0 0.808986 {$name + "_lFootIKC.cv[9]"} ;
move -r -0.39679 0 0.70882 {$name + "_lFootIKC.cv[10]"} ;
move -r -0.649352 0 0.590683 {$name + "_lFootIKC.cv[11]"} ;
move -r -0.986916 0 0.590683 {$name + "_lFootIKC.cv[12]"} ;
move -r -1.629254 0 0.579944 {$name + "_lFootIKC.cv[13]"} ;
move -r -1.472333 0 0.590683 {$name + "_lFootIKC.cv[14]"} ;
move -r -0.7637 0 0.590683 {$name + "_lFootIKC.cv[15]"} ;
move -r -0.353831 0 0.440328 {$name + "_lFootIKC.cv[0]"} ;
move -r -os -wd 0 0.333 0 {$name + "_lFootIKC.cv[4:5]"} {$name + "_lFootIKC.cv[13:14]"} ;
move -r -os -wd 0 0 1 {$name + "_lFootIKC.cv[0:15]"} ;
move -r 0 0 -0.2 {$name + "_lFootIKC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lFootIKC"};
delete -ch {$name + "_lFootIKC"};
group -n {$name + "_lFootIKCG"} {$name + "_lFootIKC"}; xform -os -piv 0 0 0;
setAttr {$name + "_lFootIKC.rotateOrder"} 1;

		//LEFT TOE CONTROL
circle -n {$name + "_lToeIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
makeIdentity -apply true -t 1 -r 1 -s 1;
delete -ch;
move -r -0.25107 1.330277 2.206782 {$name + "_lToeIKC.cv[1]"} ;
move -r 0.254402 1.084741 1.162191 {$name + "_lToeIKC.cv[0]"} ;
move -r 0.0513063 0.450871 -0.204969 {$name + "_lToeIKC.cv[7]"} ;
move -r 0.187803 0.259426 -0.108661 {$name + "_lToeIKC.cv[6]"} ;
move -r -0.276837 0.154413 0.307813 {$name + "_lToeIKC.cv[5]"} ;
move -r -0.395115 0.259426 -0.0326967 {$name + "_lToeIKC.cv[4]"} ;
move -r 0.00260226 0.47359 -0.204969 {$name + "_lToeIKC.cv[3]"} ;
move -r -0.369241 1.189888 1.331089 {$name + "_lToeIKC.cv[2]"} ;
move -r -os -wd 0 0 0.9 {$name + "_lToeIKC.cv[0:7]"} ;
move -r -.001 0 1.85 {$name + "_lToeIKC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lToeIKC"};
group -n {$name + "_lToeIKCG"} {$name + "_lToeIKC"};
select -add {$name + "_lFootIKCG"};
parent;


pointConstraint -offset 0 0 0 -skip y -weight 1 {$name + "_lAnkleJ"} {$name + "_lFootIKCG"};
delete {$name + "_lFootIKCG_pointConstraint1"};
pointConstraint -skip x -skip z -weight 1 {$name + "_lBallJ"} {$name + "_lFootIKCG"};
delete {$name + "_lFootIKCG_pointConstraint1"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "none"
-skip x -skip z {$name + "_lToeJ"} {$name + "_lBallJ"} {$name + "_lFootIKCG"};
delete {$name + "_lFootIKCG_aimConstraint1"};
$lAnklePosition = `xform -ws -q -rp {$name + "_lAnkleJ"}`;
$lBallLocation = `xform  -q -t {$name + "_lBallJ"}`;
$lToeLocation = `xform -q -t {$name + "_lToeJ"}`;
setAttr ({$name + "_lFootIKCG.scale"}, (($lBallLocation[0]+$lToeLocation[0])/3.5), (($lBallLocation[0]+$lToeLocation[0])/3.5), (($lBallLocation[0]+$lToeLocation[0])/3.5));
makeIdentity -apply true -t 1 -s 1 {$name + "_lFootIKCG"};


//MOVE TOE CTRL PIVOT
$limbJointLoc = `xform -ws -q -t {$name + "_lToeJ"}`;
move $limbJointLoc[0]  $limbJointLoc[1] $limbJointLoc[2] {$name + "_lToeIKC.scalePivot"} {$name + "_lToeIKC.rotatePivot"} ;
move $lAnklePosition[0] $lAnklePosition[1] $lAnklePosition[2] {$name + "_lFootIKC.scalePivot"} {$name + "_lFootIKC.rotatePivot"} ;

makeIdentity -apply true -t 1 -s 1 {$name + "_lHipFKCG"};

///////////////////////////////////////LEFT TOES/////////////////////////////////////
if (`objExists ($name + "_lToe01J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe01J1"};}
if (`objExists ($name + "_lToe02J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe02J1"};}
if (`objExists ($name + "_lToe03J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe03J1"};}
if (`objExists ($name + "_lToe04J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe04J1"};}
if (`objExists ($name + "_lToe05J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe05J1"};}
if (`objExists ($name + "_lToe06J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe06J1"};}
if (`objExists ($name + "_lToe07J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe07J1"};}
if (`objExists ($name + "_lToe08J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe08J1"};}
if (`objExists ($name + "_lToe09J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe09J1"};}
if (`objExists ($name + "_lToe10J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_lToe10J1"};}


///////////////////////////////////////LEFT TOE 1/////////////////////////////////////
if (`objExists ($name + "_lToe01J1")`)
{
//JOINT 1
circle -n {$name + "_lToe01J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe01J1CG"};
select -add {$name + "_lToe01J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe01J2Length = `xform -q -t {$name + "_lToe01J2"}`;
$lToe01JTipLength = `xform -q -t {$name + "_lToe01JTip"}`;
$JointLength[0] = (($lToe01J2Length[0] + $lToe01JTipLength[0]) /2);
setAttr ({$name + "_lToe01J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe01J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe01J1 DSN_lToe01J2 {$name + "_lToe01J1CG"};
delete {$name + "_lToe01J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe01J1C"} {$name + "_lToe01J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe01J1CG"};

//JOINT 2
select {$name + "_lToe01J1CG"};
duplicate -n {$name + "_lToe01J2CG"};
select -add {$name + "_lToe01J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe01J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe01J2 DSN_lToe01JTip {$name + "_lToe01J2CG"};
delete {$name + "_lToe01J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe01J2C"} {$name + "_lToe01J2"};
parentConstraint -mo {$name + "_lToe01J1C"} {$name + "_lToe01J2CG"};
}

///////////////////////////////////////LEFT TOE 2/////////////////////////////////////
if (`objExists ($name + "_lToe02J1")`)
{
//JOINT 1
circle -n {$name + "_lToe02J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe02J1CG"};
select -add {$name + "_lToe02J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe02J2Length = `xform -q -t {$name + "_lToe02J2"}`;
$lToe02J3Length = `xform -q -t {$name + "_lToe02J3"}`;
$JointLength[0] = (($lToe02J2Length[0] + $lToe02J3Length[0]) /2);
setAttr ({$name + "_lToe02J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe02J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe02J1 DSN_lToe02J2 {$name + "_lToe02J1CG"};
delete {$name + "_lToe02J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe02J1C"} {$name + "_lToe02J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe02J1CG"};

//JOINT 2
select {$name + "_lToe02J1CG"};
duplicate -n {$name + "_lToe02J2CG"};
select -add {$name + "_lToe02J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe02J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe02J2 DSN_lToe02J3 {$name + "_lToe02J2CG"};
delete {$name + "_lToe02J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe02J2C"} {$name + "_lToe02J2"};
parentConstraint -mo {$name + "_lToe02J1C"} {$name + "_lToe02J2CG"};

//JOINT 3
select {$name + "_lToe02J1CG"};
duplicate -n {$name + "_lToe02J3CG"};
select -add {$name + "_lToe02J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe02J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe02J3 DSN_lToe02JTip {$name + "_lToe02J3CG"};
delete {$name + "_lToe02J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe02J3C"} {$name + "_lToe02J3"};
parentConstraint -mo {$name + "_lToe02J2C"} {$name + "_lToe02J3CG"};
}

///////////////////////////////////////LEFT TOE 3/////////////////////////////////////
if (`objExists ($name + "_lToe03J1")`)
{
//JOINT 1
circle -n {$name + "_lToe03J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe03J1CG"};
select -add {$name + "_lToe03J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe03J2Length = `xform -q -t {$name + "_lToe03J2"}`;
$lToe03J3Length = `xform -q -t {$name + "_lToe03J3"}`;
$JointLength[0] = (($lToe03J2Length[0] + $lToe03J3Length[0]) /2);
setAttr ({$name + "_lToe03J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe03J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe03J1 DSN_lToe03J2 {$name + "_lToe03J1CG"};
delete {$name + "_lToe03J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe03J1C"} {$name + "_lToe03J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe03J1CG"};

//JOINT 2
select {$name + "_lToe03J1CG"};
duplicate -n {$name + "_lToe03J2CG"};
select -add {$name + "_lToe03J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe03J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe03J2 DSN_lToe03J3 {$name + "_lToe03J2CG"};
delete {$name + "_lToe03J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe03J2C"} {$name + "_lToe03J2"};
parentConstraint -mo {$name + "_lToe03J1C"} {$name + "_lToe03J2CG"};

//JOINT 3
select {$name + "_lToe03J1CG"};
duplicate -n {$name + "_lToe03J3CG"};
select -add {$name + "_lToe03J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe03J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe03J3 DSN_lToe03JTip {$name + "_lToe03J3CG"};
delete {$name + "_lToe03J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe03J3C"} {$name + "_lToe03J3"};
parentConstraint -mo {$name + "_lToe03J2C"} {$name + "_lToe03J3CG"};
}

///////////////////////////////////////LEFT TOE 4/////////////////////////////////////
if (`objExists ($name + "_lToe04J1")`)
{
//JOINT 1
circle -n {$name + "_lToe04J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe04J1CG"};
select -add {$name + "_lToe04J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe04J2Length = `xform -q -t {$name + "_lToe04J2"}`;
$lToe04J3Length = `xform -q -t {$name + "_lToe04J3"}`;
$JointLength[0] = (($lToe04J2Length[0] + $lToe04J3Length[0]) /2);
setAttr ({$name + "_lToe04J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe04J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe04J1 DSN_lToe04J2 {$name + "_lToe04J1CG"};
delete {$name + "_lToe04J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe04J1C"} {$name + "_lToe04J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe04J1CG"};

//JOINT 2
select {$name + "_lToe04J1CG"};
duplicate -n {$name + "_lToe04J2CG"};
select -add {$name + "_lToe04J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe04J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe04J2 DSN_lToe04J3 {$name + "_lToe04J2CG"};
delete {$name + "_lToe04J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe04J2C"} {$name + "_lToe04J2"};
parentConstraint -mo {$name + "_lToe04J1C"} {$name + "_lToe04J2CG"};

//JOINT 3
select {$name + "_lToe04J1CG"};
duplicate -n {$name + "_lToe04J3CG"};
select -add {$name + "_lToe04J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe04J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe04J3 DSN_lToe04JTip {$name + "_lToe04J3CG"};
delete {$name + "_lToe04J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe04J3C"} {$name + "_lToe04J3"};
parentConstraint -mo {$name + "_lToe04J2C"} {$name + "_lToe04J3CG"};
}

///////////////////////////////////////LEFT TOE 5/////////////////////////////////////
if (`objExists ($name + "_lToe05J1")`)
{
//JOINT 1
circle -n {$name + "_lToe05J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe05J1CG"};
select -add {$name + "_lToe05J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe05J2Length = `xform -q -t {$name + "_lToe05J2"}`;
$lToe05J3Length = `xform -q -t {$name + "_lToe05J3"}`;
$JointLength[0] = (($lToe05J2Length[0] + $lToe05J3Length[0]) /2);
setAttr ({$name + "_lToe05J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe05J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe05J1 DSN_lToe05J2 {$name + "_lToe05J1CG"};
delete {$name + "_lToe05J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe05J1C"} {$name + "_lToe05J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe05J1CG"};

//JOINT 2
select {$name + "_lToe05J1CG"};
duplicate -n {$name + "_lToe05J2CG"};
select -add {$name + "_lToe05J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe05J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe05J2 DSN_lToe05J3 {$name + "_lToe05J2CG"};
delete {$name + "_lToe05J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe05J2C"} {$name + "_lToe05J2"};
parentConstraint -mo {$name + "_lToe05J1C"} {$name + "_lToe05J2CG"};

//JOINT 3
select {$name + "_lToe05J1CG"};
duplicate -n {$name + "_lToe05J3CG"};
select -add {$name + "_lToe05J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe05J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe05J3 DSN_lToe05JTip {$name + "_lToe05J3CG"};
delete {$name + "_lToe05J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe05J3C"} {$name + "_lToe05J3"};
parentConstraint -mo {$name + "_lToe05J2C"} {$name + "_lToe05J3CG"};
}

///////////////////////////////////////LEFT TOE 6/////////////////////////////////////
if (`objExists ($name + "_lToe06J1")`)
{
//JOINT 1
circle -n {$name + "_lToe06J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe06J1CG"};
select -add {$name + "_lToe06J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe06J2Length = `xform -q -t {$name + "_lToe06J2"}`;
$lToe06J3Length = `xform -q -t {$name + "_lToe06J3"}`;
$JointLength[0] = (($lToe06J2Length[0] + $lToe06J3Length[0]) /2);
setAttr ({$name + "_lToe06J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe06J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe06J1 DSN_lToe06J2 {$name + "_lToe06J1CG"};
delete {$name + "_lToe06J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe06J1C"} {$name + "_lToe06J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe06J1CG"};

//JOINT 2
select {$name + "_lToe06J1CG"};
duplicate -n {$name + "_lToe06J2CG"};
select -add {$name + "_lToe06J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe06J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe06J2 DSN_lToe06J3 {$name + "_lToe06J2CG"};
delete {$name + "_lToe06J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe06J2C"} {$name + "_lToe06J2"};
parentConstraint -mo {$name + "_lToe06J1C"} {$name + "_lToe06J2CG"};

//JOINT 3
select {$name + "_lToe06J1CG"};
duplicate -n {$name + "_lToe06J3CG"};
select -add {$name + "_lToe06J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe06J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe06J3 DSN_lToe06JTip {$name + "_lToe06J3CG"};
delete {$name + "_lToe06J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe06J3C"} {$name + "_lToe06J3"};
parentConstraint -mo {$name + "_lToe06J2C"} {$name + "_lToe06J3CG"};
}

///////////////////////////////////////LEFT TOE 7/////////////////////////////////////
if (`objExists ($name + "_lToe07J1")`)
{
//JOINT 1
circle -n {$name + "_lToe07J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe07J1CG"};
select -add {$name + "_lToe07J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe07J2Length = `xform -q -t {$name + "_lToe07J2"}`;
$lToe07J3Length = `xform -q -t {$name + "_lToe07J3"}`;
$JointLength[0] = (($lToe07J2Length[0] + $lToe07J3Length[0]) /2);
setAttr ({$name + "_lToe07J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe07J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe07J1 DSN_lToe07J2 {$name + "_lToe07J1CG"};
delete {$name + "_lToe07J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe07J1C"} {$name + "_lToe07J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe07J1CG"};

//JOINT 2
select {$name + "_lToe07J1CG"};
duplicate -n {$name + "_lToe07J2CG"};
select -add {$name + "_lToe07J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe07J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe07J2 DSN_lToe07J3 {$name + "_lToe07J2CG"};
delete {$name + "_lToe07J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe07J2C"} {$name + "_lToe07J2"};
parentConstraint -mo {$name + "_lToe07J1C"} {$name + "_lToe07J2CG"};

//JOINT 3
select {$name + "_lToe07J1CG"};
duplicate -n {$name + "_lToe07J3CG"};
select -add {$name + "_lToe07J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe07J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe07J3 DSN_lToe07JTip {$name + "_lToe07J3CG"};
delete {$name + "_lToe07J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe07J3C"} {$name + "_lToe07J3"};
parentConstraint -mo {$name + "_lToe07J2C"} {$name + "_lToe07J3CG"};
}

///////////////////////////////////////LEFT TOE 8/////////////////////////////////////
if (`objExists ($name + "_lToe08J1")`)
{
//JOINT 1
circle -n {$name + "_lToe08J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe08J1CG"};
select -add {$name + "_lToe08J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe08J2Length = `xform -q -t {$name + "_lToe08J2"}`;
$lToe08J3Length = `xform -q -t {$name + "_lToe08J3"}`;
$JointLength[0] = (($lToe08J2Length[0] + $lToe08J3Length[0]) /2);
setAttr ({$name + "_lToe08J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe08J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe08J1 DSN_lToe08J2 {$name + "_lToe08J1CG"};
delete {$name + "_lToe08J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe08J1C"} {$name + "_lToe08J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe08J1CG"};

//JOINT 2
select {$name + "_lToe08J1CG"};
duplicate -n {$name + "_lToe08J2CG"};
select -add {$name + "_lToe08J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe08J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe08J2 DSN_lToe08J3 {$name + "_lToe08J2CG"};
delete {$name + "_lToe08J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe08J2C"} {$name + "_lToe08J2"};
parentConstraint -mo {$name + "_lToe08J1C"} {$name + "_lToe08J2CG"};

//JOINT 3
select {$name + "_lToe08J1CG"};
duplicate -n {$name + "_lToe08J3CG"};
select -add {$name + "_lToe08J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe08J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe08J3 DSN_lToe08JTip {$name + "_lToe08J3CG"};
delete {$name + "_lToe08J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe08J3C"} {$name + "_lToe08J3"};
parentConstraint -mo {$name + "_lToe08J2C"} {$name + "_lToe08J3CG"};
}

///////////////////////////////////////LEFT TOE 9/////////////////////////////////////
if (`objExists ($name + "_lToe09J1")`)
{
//JOINT 1
circle -n {$name + "_lToe09J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe09J1CG"};
select -add {$name + "_lToe09J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe09J2Length = `xform -q -t {$name + "_lToe09J2"}`;
$lToe09J3Length = `xform -q -t {$name + "_lToe09J3"}`;
$JointLength[0] = (($lToe09J2Length[0] + $lToe09J3Length[0]) /2);
setAttr ({$name + "_lToe09J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe09J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe09J1 DSN_lToe09J2 {$name + "_lToe09J1CG"};
delete {$name + "_lToe09J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe09J1C"} {$name + "_lToe09J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe09J1CG"};

//JOINT 2
select {$name + "_lToe09J1CG"};
duplicate -n {$name + "_lToe09J2CG"};
select -add {$name + "_lToe09J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe09J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe09J2 DSN_lToe09J3 {$name + "_lToe09J2CG"};
delete {$name + "_lToe09J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe09J2C"} {$name + "_lToe09J2"};
parentConstraint -mo {$name + "_lToe09J1C"} {$name + "_lToe09J2CG"};

//JOINT 3
select {$name + "_lToe09J1CG"};
duplicate -n {$name + "_lToe09J3CG"};
select -add {$name + "_lToe09J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe09J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe09J3 DSN_lToe09JTip {$name + "_lToe09J3CG"};
delete {$name + "_lToe09J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe09J3C"} {$name + "_lToe09J3"};
parentConstraint -mo {$name + "_lToe09J2C"} {$name + "_lToe09J3CG"};
}

///////////////////////////////////////LEFT TOE 10/////////////////////////////////////
if (`objExists ($name + "_lToe10J1")`)
{
//JOINT 1
circle -n {$name + "_lToe10J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_lToe10J1CG"};
select -add {$name + "_lToe10J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$lToe10J2Length = `xform -q -t {$name + "_lToe10J2"}`;
$lToe10J3Length = `xform -q -t {$name + "_lToe10J3"}`;
$JointLength[0] = (($lToe10J2Length[0] + $lToe10J3Length[0]) /2);
setAttr ({$name + "_lToe10J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_lToe10J1CG"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe10J1 DSN_lToe10J2 {$name + "_lToe10J1CG"};
delete {$name + "_lToe10J1CG_aimConstraint1"};
parentConstraint {$name + "_lToe10J1C"} {$name + "_lToe10J1"};
parentConstraint -mo {$name + "_lBallJ"} {$name + "_lToe10J1CG"};

//JOINT 2
select {$name + "_lToe10J1CG"};
duplicate -n {$name + "_lToe10J2CG"};
select -add {$name + "_lToe10J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe10J2C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe10J2 DSN_lToe10J3 {$name + "_lToe10J2CG"};
delete {$name + "_lToe10J2CG_aimConstraint1"};
parentConstraint {$name + "_lToe10J2C"} {$name + "_lToe10J2"};
parentConstraint -mo {$name + "_lToe10J1C"} {$name + "_lToe10J2CG"};

//JOINT 3
select {$name + "_lToe10J1CG"};
duplicate -n {$name + "_lToe10J3CG"};
select -add {$name + "_lToe10J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_lToe10J3C"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_lToe10J3 DSN_lToe10JTip {$name + "_lToe10J3CG"};
delete {$name + "_lToe10J3CG_aimConstraint1"};
parentConstraint {$name + "_lToe10J3C"} {$name + "_lToe10J3"};
parentConstraint -mo {$name + "_lToe10J2C"} {$name + "_lToe10J3CG"};
}

//FK SCALE
parentConstraint -mo -skipRotate x -skipRotate y -skipRotate z -weight 1 {$name + "_MainHipC"} {$name + "_lHipFKCG"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z -weight 1 {$name + "_MainHipC"} {$name + "_MainC"} {$name + "_lHipFKCG"};
addAttr -ln "HipOrient"  -at double  -min 0 -max 1 -dv 1 {$name + "_lHipFKC"};
setAttr -e-k true {$name + "_lHipFKC.HipOrient"};
setAttr {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lHipFKC.HipOrient"} {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainHipCW0"};
setDrivenKeyframe -currentDriver {$name + "_lHipFKC.HipOrient"} {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainCW1"};
setAttr {$name + "_lHipFKC.HipOrient"} 0;
setAttr {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainHipCW0"} 0;
setAttr {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lHipFKC.HipOrient"} {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainHipCW0"};
setDrivenKeyframe -currentDriver {$name + "_lHipFKC.HipOrient"} {$name + "_lHipFKCG_parentConstraint2." + $name + "_MainCW1"};
setAttr {$name + "_lHipFKC.HipOrient"} 1;

selectKey -k -f 0 -f 1 {$name + "_lHipFKCG_parentConstraint2_" + $name + "_MainHipCW0"} ;
selectKey -add -k -f 0 -f 1 {$name + "_lHipFKCG_parentConstraint2_" + $name + "_MainCW1"} ;
keyTangent -itt spline -ott spline ;


parentConstraint -mo {$name + "_lShoulderFKC"} {$name + "_lShoulderJFK"};
parentConstraint -mo {$name + "_lShoulderFKC"} {$name + "_lElbowFKCG"};

parentConstraint -mo {$name + "_lElbowFKC"} {$name + "_lElbowJFK"};
parentConstraint -mo {$name + "_lElbowFKC"} {$name + "_lWristFKCG"};

parentConstraint -mo {$name + "_lWristFKC"} {$name + "_lWristJFK"};
setAttr {$name + "_lWristJFK_parentConstraint1.interpType"} 2;

//CONNECT SCALE TO FK CONTROLS
connectAttr -f {$name + "_lHipFKC.scaleX"} {$name + "_lHipJFK.scaleX"};
connectAttr -f {$name + "_lHipFKC.scaleX"} {$name + "_lKneeFKC.scaleX"};
connectAttr -f {$name + "_lHipFKC.scaleX"} {$name + "_lKneeJFK.scaleX"};


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////RIGHT CONTROLS/////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//RIGHT CLAVICLE CONTROL
circle -n {$name + "_rClavicleC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
move -r 1.35 2 0 {$name + "_rClavicleC.cv[3]"} {$name + "_rClavicleC.cv[7]"} ;
move -r 0.5 1.25 0 {$name + "_rClavicleC.cv[2]"} {$name + "_rClavicleC.cv[4]"} {$name + "_rClavicleC.cv[0]"} {$name + "_rClavicleC.cv[6]"};
select {$name + "_rClavicleC"};
group -n {$name + "_rClavicleCG"};
rotate -r 0 0 180 {$name + "_rClavicleC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rClavicleC"};
select -add {$name + "_rClavicleJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
$rClavicleLength = `xform -q -t {$name + "_rClavicleJ"}`;
$rShoulderLength = `xform -q -t {$name + "_rShoulderJ"}`;

spaceLocator -n {$name + "_Spine04Lctr"} -p 0 0 0;
spaceLocator -n {$name + "_rClavicleLctr"} -p 0 0 0;
pointConstraint {$name + "_Spine04J"} {$name + "_Spine04Lctr"};

pointConstraint {$name + "_rClavicleJ"} {$name + "_rClavicleLctr"};

aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "scene"
{$name + "_rClavicleJ"} {$name + "_Spine04Lctr"};
parent  {$name + "_rClavicleLctr"} {$name + "_Spine04Lctr"};
$rClavicleLength = `xform -q -t {$name + "_rClavicleLctr"}`;

setAttr ({$name + "_rClavicleCG.scale"}, (($rClavicleLength[0])*0.65), (($rClavicleLength[0])*0.8), (($rClavicleLength[0])*1.25));

delete {$name + "_Spine04Lctr"};

parent -w {$name + "_rClavicleCG"};
makeIdentity -apply true -t 1 -s 1 {$name + "_rClavicleCG"};


//RIGHT SHOULDER FK CONTROL
circle -n {$name + "_rShoulderFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rShoulderFKCG"};
select -add {$name + "_rShoulderJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
$rElbowLength = `xform -q -t {$name + "_rElbowJ"}`;
$rWristLength = `xform -q -t {$name + "_rWristJDummy"}`;
$rArmLength[0] = (($rElbowLength[0] + $rWristLength[0]) /2);

setAttr ({$name + "_rShoulderFKC.scale"}, ($rArmLength[0]/2), ($rArmLength[0]/2), ($rArmLength[0]/2));
makeIdentity -apply true -s 1 {$name + "_rShoulderFKCG"};
parent -w {$name + "_rShoulderFKCG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rShoulderFKC"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rShoulderFKC"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rShoulderFKC"};

//RIGHT ELBOW FK CONTROL
select {$name + "_rShoulderFKCG"};
duplicate -n {$name + "_rElbowFKCG"};
select -add {$name + "_rElbowJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rElbowFKC"};

//RIGHT WRIST FK CONTROL
select {$name + "_rShoulderFKCG"};
duplicate -n {$name + "_rWristFKCG"};
select -add {$name + "_rWristJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
scale -r 0.85 0.85 0.85 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rWristFKC"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rWristFKC"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rWristFKC"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rWristFKC"};

//DETACH FK ARM JOINTS FOR SCALE COMPENSATION
parent -w {$name + "_rElbowJFK"} {$name + "_rWristJFK"};
group -n {$name + "_rWristJFKG1"} {$name + "_rWristJFK"};
group -n {$name + "_rWristJFKG2"} {$name + "_rWristJFKG1"};
$rWristLocation = `xform -q -ws -t {$name + "_rWristJ"}`;
move $rWristLocation[0] $rWristLocation[1] $rWristLocation[2] {$name + "_rWristJFKG2.scalePivot"} {$name + "_rWristJFKG2.rotatePivot"} ;
pointConstraint {$name + "_rWristFKC"} {$name + "_rWristJFKG1"};
parentConstraint -mo {$name + "_rElbowJFK"} {$name + "_rWristJFKG2"};

group -n {$name + "_rElbowJFKG1"} {$name + "_rElbowJFK"};
group -n {$name + "_rElbowJFKG2"} {$name + "_rElbowJFKG1"};
$rElbowLocation = `xform -q -ws -t {$name + "_rElbowJ"}`;
move $rElbowLocation[0] $rElbowLocation[1] $rElbowLocation[2] {$name + "_rElbowJFKG2.scalePivot"} {$name + "_rElbowJFKG2.rotatePivot"} ;
pointConstraint {$name + "_rElbowFKC"} {$name + "_rElbowJFKG1"};
parentConstraint -mo {$name + "_rShoulderJFK"} {$name + "_rElbowJFKG2"};


//RIGHT WRIST IK CONTROL
circle  -n {$name + "_rWristIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 16 -ch 1;
move -r -1.083809 0 0 {$name + "_rWristIKC.cv[12]"} ;
move -r 0 0 0.292629 {$name + "_rWristIKC.cv[13]"} ;
move -r -0.769505 0 -0.130057 {$name + "_rWristIKC.cv[11]"} ;
move -r 0.379333 0 -0.303467 {$name + "_rWristIKC.cv[10]"} ;
move -r 0.541905 0 0 {$name + "_rWristIKC.cv[9]"} ;
move -r -0.834533 0 0 {$name + "_rWristIKC.cv[13]"} ;
move -r 0.346819 0 0.693638 {$name + "_rWristIKC.cv[14]"} ;
move -r 0.357657 0 0 {$name + "_rWristIKC.cv[15]"} ;
move -r 0.2276 0 -0.0216761 {$name + "_rWristIKC.cv[13]"} ;
move -r 0.0216762 0 0.0867047 {$name + "_rWristIKC.cv[7]"} ;
move -r 0.0325143 0 0.0758667 {$name + "_rWristIKC.cv[6]"} ;
move -r 0 0 0.2276 {$name + "_rWristIKC.cv[14]"} ;
move -r 0.173409 0 0.140895 {$name + "_rWristIKC.cv[15]"} ;
move -r 0.270952 0 0.0216762 {$name + "_rWristIKC.cv[0]"} ;
move -r -0.0325143 0 0.0325143 {$name + "_rWristIKC.cv[15]"} ;
move -r -0.0108381 0 -0.173409 {$name + "_rWristIKC.cv[14]"} ;
move -r 0.0975428 0 0.0325143 {$name + "_rWristIKC.cv[0]"} ;
move -r 0.162571 0 0.0216762 {$name + "_rWristIKC.cv[1]"} ;
move -r -0.173409 0 0.119219 {$name + "_rWristIKC.cv[13]"} ;
move -r 0 0 0.0216762 {$name + "_rWristIKC.cv[12]"} ;
move -r -0.0758667 0 0.0867047 {$name + "_rWristIKC.cv[14]"} ;
move -r 0.119219 0 0.520228 {$name + "_rWristIKC.cv[15]"} ;
move -r 0.325143 0 0.140895 {$name + "_rWristIKC.cv[0]"} ;
move -r 0.238438 0 -0.0758667 {$name + "_rWristIKC.cv[1]"} ;
move -r 0.108381 0 -0.0325143 {$name + "_rWristIKC.cv[2]"} ;
move -r 0.0758667 0 0.0541905 {$name + "_rWristIKC.cv[1]"} ;
move -r -0.0141441 0 0 {$name + "_rWristIKC.cv[11:13]"} ;
move -r -0.339459 0 -0.0565766 {$name + "_rWristIKC.cv[10]"} ;
move -r 0.141441 0 -0.113153 {$name + "_rWristIKC.cv[9]"} ;
move -r 0.381892 0 0.099009 {$name + "_rWristIKC.cv[8]"} ;
move -r 0.183874 0 0.155586 {$name + "_rWristIKC.cv[7]"} ;
move -r 0 0 0.0565766 {$name + "_rWristIKC.cv[6]"} ;
move -r 0.127297 0 0.0707207 {$name + "_rWristIKC.cv[0]"} ;
move -r 0.226306 0 -0.0707207 {$name + "_rWristIKC.cv[1]"} ;
move -r 0.155586 0 -0.0707207 {$name + "_rWristIKC.cv[2]"} ;
move -r 0 0 0.247523 {$name + "_rWristIKC.cv[6:14]"} ;
move -r 0 0 0.247523 {$name + "_rWristIKC.cv[5]"} ;
move -r 0 0 0.066006 {$name + "_rWristIKC.cv[4]"} ;
move -r 0 0 0.066006 {$name + "_rWristIKC.cv[1]"} ;
move -r 0 0 0.132012 {$name + "_rWristIKC.cv[8:10]"} ;
move -r -0.0165015 0 0.0825075 {$name + "_rWristIKC.cv[9]"} ;
move -r -0.0825075 0 0.0165015 {$name + "_rWristIKC.cv[8]"} ;
move -r 0.132012 0 0 {$name + "_rWristIKC.cv[15]"} ;
move -r -0.099009 0 0 {$name + "_rWristIKC.cv[9]"} ;
move -r 0.568042 -0.00947902 -0.182223 {$name + "_rWristIKC.cv[0:15]"} ;
move -r 0.4561 0 0 {$name + "_rWristIKC.cv[0:15]"} ;
move -r -os -wd 0 0 0.3 {$name + "_rWristIKC.cv[0:15]"} ;

select {$name + "_rWristIKC"};
group -n {$name + "_rWristIKCG"};
select -add {$name + "_rWristJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;

spaceLocator -n {$name + "_rHandSizeLctr"} -p 0 0 0;
spaceLocator -n {$name + "_rHandAimLctr"} -p 0 0 0;
parent {$name + "_rHandSizeLctr"} {$name + "_rHandAimLctr"};
pointConstraint {$name + "_rWristIKCG"} {$name + "_rHandAimLctr"};

select {$name + "_rFinger1JTip"};
if (`objExists ($name + "_rFinger2J1")`)
{select -add {$name + "_rFinger2JTip"};}
if (`objExists ($name + "_rFinger3J1")`)
{select -add {$name + "_rFinger3JTip"};}
if (`objExists ($name + "_rFinger4J1")`)
{select -add {$name + "_rFinger4JTip"};}
if (`objExists ($name + "_rFinger5J1")`)
{select -add {$name + "_rFinger5JTip"};}
if (`objExists ($name + "_rFinger6J1")`)
{select -add {$name + "_rFinger6JTip"};}
if (`objExists ($name + "_rFinger7J1")`)
{select -add {$name + "_rFinger7JTip"};}
if (`objExists ($name + "_rFinger8J1")`)
{select -add {$name + "_rFinger8JTip"};}
if (`objExists ($name + "_rFinger9J1")`)
{select -add {$name + "_rFinger9JTip"};}
select -add {$name + "_rHandAimLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none";
delete {$name + "_rHandAimLctr_pointConstraint1"};
delete {$name + "_rHandAimLctr_aimConstraint1"};
select {$name + "_rFinger1JTip"};
if (`objExists ($name + "_rFinger2J1")`)
{select -add {$name + "_rFinger2JTip"};}
if (`objExists ($name + "_rFinger3J1")`)
{select -add {$name + "_rFinger3JTip"};}
if (`objExists ($name + "_rFinger4J1")`)
{select -add {$name + "_rFinger4JTip"};}
if (`objExists ($name + "_rFinger5J1")`)
{select -add {$name + "_rFinger5JTip"};}
if (`objExists ($name + "_rFinger6J1")`)
{select -add {$name + "_rFinger6JTip"};}
if (`objExists ($name + "_rFinger7J1")`)
{select -add {$name + "_rFinger7JTip"};}
if (`objExists ($name + "_rFinger8J1")`)
{select -add {$name + "_rFinger8JTip"};}
if (`objExists ($name + "_rFinger9J1")`)
{select -add {$name + "_rFinger9JTip"};}
select -add {$name + "_rHandSizeLctr"};
pointConstraint -offset 0 0 0 -skip y -skip z -weight 1;
$rHandSize = `xform -q -t {$name + "_rHandSizeLctr"}`;

setAttr ({$name + "_rWristIKCG.scale"}, ($rHandSize[0] * -.58), ($rHandSize[0] * .58), ($rHandSize[0] * -.58));

select -cl;
delete {$name + "_rHandAimLctr"};
makeIdentity -apply true -t 1 -r 0 -s 1 {$name + "_rWristIKCG"};
delete -ch {$name + "_rWristIKCG"};

		//RIGHT ELBOW IK CONTROL
curve -n {$name + "_rElbowIKC"} -d 1 -p 0 -5 0 -p -2 -3 0 -p -1 -3 0 -p -1 -1 0 -p -3 -1 0 -p -3 -2 0
-p -5 0 0 -p -3 2 0 -p -3 1 0 -p -1 1 0 -p -1 3 0 -p -2 3 0 -p 0 5 0 -p 2 3 0
-p 1 3 0 -p 1 1 0 -p 3 1 0 -p 3 2 0 -p 5 0 0 -p 3 -2 0 -p 3 -1 0 -p 1 -1 0	
-p 1 -3 0 -p 2 -3 0 -p 0 -5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9
-k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22
-k 23 -k 24 ;

move -r 0 0 -0.95 {$name + "_rElbowIKC.cv[12]"}  {$name + "_rElbowIKC.cv[0]"} {$name + "_rElbowIKC.cv[24]"} {$name + "_rElbowIKC.cv[18]"} {$name + "_rElbowIKC.cv[6]"} ;
move -r 0 0 0.65 {$name + "_rElbowIKC.cv[3]"} {$name + "_rElbowIKC.cv[9]"} {$name + "_rElbowIKC.cv[15]"} {$name + "_rElbowIKC.cv[21]"} ;
select {$name + "_rElbowIKC"};
group -n {$name + "_rElbowIKCG"};
parentConstraint DSN_rElbow {$name + "_rElbowIKCG"};
delete {$name + "_rElbowIKCG_parentConstraint1"};
setAttr {$name + "_rElbowIKC.tz"} ($rArmLength[0] * 2);
setAttr ({$name + "_rElbowIKC.scale"}, ($rArmLength[0] / 14), ($rArmLength[0] / 14), ($rArmLength[0] / 14));

makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rElbowIKC"};

//RIGHT ELBOW AIM LOCATOR
spaceLocator -n {$name + "_rElbowIKC_TargetLctr"};
pointConstraint {$name + "_rElbowJ"} {$name + "_rElbowIKC_TargetLctr"};
delete {$name + "_rElbowIKC_TargetLctr_pointConstraint1"};
pointConstraint -mo {$name + "_rShoulderJIK"} {$name + "_rWristJIK"} {$name + "_rElbowIKC_TargetLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" {$name + "_rElbowIKC_TargetLctr"} {$name + "_rElbowIKC"};

//IK SCALE

//CREATE DUMMY WRIST JOINT
select {$name + "_rWristJIK"};
duplicate -n {$name + "_rWristJIKDummy"};
parent -w;
group -n {$name + "_rWristJIKDummyG1"};
group -n {$name + "_rWristJIKDummyG2"};

move $rElbowLocation[0] $rElbowLocation[1] $rElbowLocation[2] {$name + "_rWristJIKDummyG2.scalePivot"} {$name + "_rWristJIKDummyG2.rotatePivot"} ;
pointConstraint {$name + "_rWristJIK"} {$name + "_rWristJIKDummyG1"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_rWristIKC"} {$name + "_rWristJIKDummy"};
setAttr {$name + "_rWristJIKDummy_parentConstraint1.interpType"} 2;
parentConstraint -mo {$name + "_rElbowJIK"} {$name + "_rWristJIKDummyG2"};

//NODES
spaceLocator -n {$name + "_rArmLengthOriginLctr"};
pointConstraint {$name + "_rShoulderJIK"} {$name + "_rArmLengthOriginLctr"};

spaceLocator -n {$name + "_rArmLengthEndLctr"};
parent {$name + "_rArmLengthEndLctr"} {$name + "_rArmLengthOriginLctr"};

pointConstraint {$name + "_rWristIKC"} {$name + "_rArmLengthEndLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rWristIKC"} {$name + "_rArmLengthOriginLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_rArmLength_MD"};
setAttr {$name + "_rArmLength_MD.operation"} 2;
connectAttr -f {$name + "_rArmLengthEndLctr.translateX"} {$name + "_rArmLength_MD.input1X"};
setAttr {$name + "_rArmLength_MD.input2X"} ($rArmLength[0]* -2);

shadingNode -asUtility condition -n {$name + "_rArmLength_Condition"};
connectAttr -f {$name + "_rArmLength_MD.outputX"} {$name + "_rArmLength_Condition.firstTerm"};
setAttr {$name + "_rArmLength_Condition.secondTerm"} 1;
setAttr {$name + "_rArmLength_Condition.operation"} 2;
connectAttr -f {$name + "_rArmLength_MD.outputX"} {$name + "_rArmLength_Condition.colorIfTrueR"};

shadingNode -asUtility blendColors -n {$name + "_rArmLength_Blnd"};
connectAttr -f {$name + "_rArmLength_Condition.outColorR"} {$name + "_rArmLength_Blnd.color1R"};
setAttr {$name + "_rArmLength_Blnd.color2"} -type double3 1 0 1 ;

//RIGHT IK LOCK

//RIGHT IK LOCK LOCATORS
spaceLocator -n {$name + "_rShoulderIKLockLctr"};
spaceLocator -n {$name + "_rElbowIKLockLctr"};
spaceLocator -n {$name + "_rWristIKLockLctr"};
parent {$name + "_rElbowIKLockLctr"} {$name + "_rShoulderIKLockLctr"};
parent {$name + "_rWristIKLockLctr"} {$name + "_rElbowIKLockLctr"};
pointConstraint {$name + "_rShoulderJIK"} {$name + "_rShoulderIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rElbowIKC"} {$name + "_rShoulderIKLockLctr"};
pointConstraint {$name + "_rElbowIKC"} {$name + "_rElbowIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rWristIKC"} {$name + "_rElbowIKLockLctr"};
pointConstraint {$name + "_rWristIKC"} {$name + "_rWristIKLockLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_rShoulderLockLength_MD"};
setAttr {$name + "_rShoulderLockLength_MD.operation"} 2;
connectAttr -f {$name + "_rElbowIKLockLctr.translateX"} {$name + "_rShoulderLockLength_MD.input1X"};
setAttr {$name + "_rShoulderLockLength_MD.input2X"} ($rElbowLength[0]*-1);

shadingNode -asUtility multiplyDivide -n {$name + "_rElbowLockLength_MD"};
setAttr {$name + "_rElbowLockLength_MD.operation"} 2;
connectAttr -f {$name + "_rWristIKLockLctr.translateX"} {$name + "_rElbowLockLength_MD.input1X"};
setAttr {$name + "_rElbowLockLength_MD.input2X"} ($rWristLength[0]*-1);

shadingNode -asUtility blendColors -n {$name + "_rShoulderLock_Blnd"};
connectAttr -f {$name + "_rShoulderLockLength_MD.outputX"} {$name + "_rShoulderLock_Blnd.color1R"};
connectAttr -f {$name + "_rArmLength_Blnd.outputR"} {$name + "_rShoulderLock_Blnd.color2R"};

shadingNode -asUtility blendColors -n {$name + "_rElbowLock_Blnd"};
connectAttr -f {$name + "_rElbowLockLength_MD.outputX"} {$name + "_rElbowLock_Blnd.color1R"};
connectAttr -f {$name + "_rArmLength_Blnd.outputR"} {$name + "_rElbowLock_Blnd.color2R"};

//ADD STRETCH TO RIGHT IK WRIST CONTROL
addAttr -ln "Stretch"  -at double  -min 0 -max 1 -dv 0 {$name + "_rWristIKC"};
setAttr -e-k true {$name + "_rWristIKC.Stretch"};
connectAttr -f {$name + "_rWristIKC.Stretch"} {$name + "_rArmLength_Blnd.blender"};

//ADD ELBOW LOCK TO RIGHT IK WRIST CONTROL
addAttr -ln "ElbowLock"  -at double  -min 0 -max 1 -dv 0 {$name + "_rWristIKC"};
setAttr -e-k true {$name + "_rWristIKC.ElbowLock"};
connectAttr -f {$name + "_rWristIKC.ElbowLock"} {$name + "_rShoulderLock_Blnd.blender"};
connectAttr -f {$name + "_rWristIKC.ElbowLock"} {$name + "_rElbowLock_Blnd.blender"};

connectAttr -f {$name + "_rShoulderLock_Blnd.outputR"} {$name + "_rShoulderJIK.scaleX"};
connectAttr -f {$name + "_rElbowLock_Blnd.outputR"} {$name + "_rElbowJIK.scaleX"};

//ADD DYNAMIC PARENTING CHANNELS
addAttr -ln "DynamicParenting"  -at double  -min 1 -max 1 -dv 1 {$name + "_rWristIKC"};
setAttr -e-keyable true {$name + "_rWristIKC.DynamicParenting"};
setAttr -lock true {$name + "_rWristIKC.DynamicParenting"};
addAttr -ln "Hips"  -at double  -min 0 -max 1 -dv 0 {$name + "_rWristIKC"};
setAttr -e-keyable true {$name + "_rWristIKC.Hips"};
addAttr -ln "Chest"  -at double  -min 0 -max 1 -dv 0 {$name + "_rWristIKC"};
setAttr -e-keyable true {$name + "_rWristIKC.Chest"};
addAttr -ln "Head"  -at double  -min 0 -max 1 -dv 0 {$name + "_rWristIKC"};
setAttr -e-keyable true {$name + "_rWristIKC.Head"};

//////////////////////////////////RIGHT HAND IKFK SWITCH CONTROL///////////////////////////////////////////
curve -n {$name + "_rArmSwitchC"} -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2
-p 2 0 -2 -p 0 0 0 -p 0 2 -2 -p 0 1 -2 -p 0 1 -5 -p 0 -1 -5 -p 0 -1 -2
-p 0 -2 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10
-k 11 -k 12 -k 13 -k 14 ;
move -r -os -wd 0 0 -8 ;
group -n {$name + "_rArmSwitchCG"}; xform -os -piv 0 0 0;
scale -r 0.2 0.2 0.2 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
pointConstraint {$name + "_rWristJ"} {$name + "_rArmSwitchCG"};
delete {$name + "_rArmSwitchCG_pointConstraint1"};
select {$name + "_rArmSwitchCG"} {$name + "_rWristIKCG"};
parent;
makeIdentity -apply false -r 1;
parent -w;

setAttr ({$name + "_rArmSwitchCG.scale"}, ($rArmLength[0] / 3.5), ($rArmLength[0] / 3.5), ($rArmLength[0] / 3.5));
makeIdentity -apply true -t 1 -s 1;

addAttr -ln "SwitchIkFk"  -at double  -min 0 -max 1 -dv 1 {$name + "_rArmSwitchC"};
setAttr -e-k true {$name + "_rArmSwitchC.SwitchIkFk"};
addAttr -ln "AutoVolume"  -at double  -min 0 -max 1 -dv 1 {$name + "_rArmSwitchC"};
setAttr -e-k true {$name + "_rArmSwitchC.AutoVolume"};

parentConstraint -mo {$name + "_rWristJ"} {$name + "_rArmSwitchCG"};

//////////////////////////////////RIGHT PALM CONTROL/////////////////////////////

curve -n {$name + "_rPalmC"} -d 1 -p 0 0.5 0.5 -p 0 0.5 -0.5 -p 0 -0.5 -0.5 -p 0 -0.5 0.5 -p 0 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 ;
setAttr {$name + "_rPalmC.rotateOrder"} 1;
group -n {$name + "_rPalmCG"} {$name + "_rPalmC"};
parent {$name + "_rPalmCG"} {$name + "_rWristJG1"};

parentConstraint {$name + "_rPalmJ"} {$name + "_rPalmCG"};
delete {$name + "_rPalmCG_parentConstraint1"};
$rHandSize2 = `getAttr {$name + "_rPalmJ.translateX"}`;
scale 1 ($rHandSize2*3) ($rHandSize2*1.2) {$name + "_rPalmCG"};
makeIdentity -apply true -t 1 -s 1 {$name + "_rPalmCG"};

parent -w {$name + "_rPalmCG"};
scaleConstraint {$name + "_rWristJG1"} {$name + "_rPalmC"};
parentConstraint -mo {$name + "_rWristJ"} {$name + "_rPalmCG"};
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rPalmJ"};

///////////////////////////////////////RIGHT THUMB/////////////////////////////////////
select {$name + "_rFinger1JTip"};
if (`objExists ($name + "_rThumbJ1")`)
{select -add {$name + "_rThumbJ1"};}
if (`objExists ($name + "_rFinger2JTip")`)
{select -add {$name + "_rFinger2JTip"};}
if (`objExists ($name + "_rFinger3JTip")`)
{select -add {$name + "_rFinger3JTip"};}
if (`objExists ($name + "_rFinger4JTip")`)
{select -add {$name + "_rFinger4JTip"};}
if (`objExists ($name + "_rFinger5JTip")`)
{select -add {$name + "_rFinger5JTip"};}
if (`objExists ($name + "_rFinger6JTip")`)
{select -add {$name + "_rFinger6JTip"};}
if (`objExists ($name + "_rFinger7JTip")`)
{select -add {$name + "_rFinger7JTip"};}
if (`objExists ($name + "_rFinger8JTip")`)
{select -add {$name + "_rFinger8JTip"};}
if (`objExists ($name + "_rFinger9JTip")`)
{select -add {$name + "_rFinger9JTip"};}

joint -e -oj xyz -secondaryAxisOrient yup -ch -zso;

if (`objExists ($name + "_rThumbJ1")`)
{
circle -n {$name + "_rThumbJ1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rThumbJ1CG"};
select -add {$name + "_rThumbJ1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rThumbJ2Length = `xform -q -t {$name + "_rThumbJ2"}`;
$rThumbJ3Length = `xform -q -t {$name + "_rThumbJ3"}`;
$JointLength[0] = (($rThumbJ2Length[0] + $rThumbJ3Length[0]) /2);
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rThumbJ1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rThumbJ1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rThumbJ1C"};
setAttr ({$name + "_rThumbJ1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 1.1));
makeIdentity -apply true -s 1 {$name + "_rThumbJ1CG"};
parent {$name + "_rThumbJ1CG"} {$name + "_rWristJG1"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rThumbJ1 DSN_rThumbJ2 {$name + "_rThumbJ1CG"};
delete {$name + "_rThumbJ1CG_aimConstraint1"};

//THUMB 2
select {$name + "_rThumbJ1CG"};
duplicate -n {$name + "_rThumbJ2CG"};
select -add {$name + "_rThumbJ2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_rThumbJ2CG"} {$name + "_rWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rThumbJ2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rThumbJ2 DSN_rThumbJ3 {$name + "_rThumbJ2CG"};
delete {$name + "_rThumbJ2CG_aimConstraint1"};

//THUMB 3
select {$name + "_rThumbJ1CG"};
duplicate -n {$name + "_rThumbJ3CG"};
select -add {$name + "_rThumbJ3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent {$name + "_rThumbJ3CG"} {$name + "_rWristJG1"};
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rThumbJ3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rThumbJ3 DSN_rThumbJTip {$name + "_rThumbJ3CG"};
delete {$name + "_rThumbJ3CG_aimConstraint1"};

parentConstraint -mo {$name + "_rThumbJ1C"} {$name + "_rThumbJ2CG"};
parentConstraint -mo {$name + "_rThumbJ2C"} {$name + "_rThumbJ3CG"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ2C.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ3C.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ1.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ2.scale"};
connectAttr -f {$name + "_rThumbJ1C.scale"} {$name + "_rThumbJ3.scale"};
}

///////////////////////////////////////RIGHT FINGER 1/////////////////////////////////////
if (`objExists ($name + "_rFinger1J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger1J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger1J1CG"};
select -add {$name + "_rFinger1J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger1J2Length = `xform -q -t {$name + "_rFinger1J2"}`;
$rFinger1J3Length = `xform -q -t {$name + "_rFinger1J3"}`;
$JointLength[0] = (($rFinger1J2Length[0] + $rFinger1J3Length[0]) /2);
setAttr ({$name + "_rFinger1J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger1J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger1J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger1J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger1J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger1J1 DSN_rFinger1J2 {$name + "_rFinger1J1CG"};
delete {$name + "_rFinger1J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_rFinger1J1CG"};
duplicate -n {$name + "_rFinger1J2CG"};
select -add {$name + "_rFinger1J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger1J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger1J2 DSN_rFinger1J3 {$name + "_rFinger1J2CG"};
delete {$name + "_rFinger1J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger1J1CG"};
duplicate -n {$name + "_rFinger1J3CG"};
select -add {$name + "_rFinger1J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger1J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger1J3 DSN_rFinger1JTip {$name + "_rFinger1J3CG"};
delete {$name + "_rFinger1J3CG_aimConstraint1"};

parent {$name + "_rFinger1J1CG"} {$name + "_rFinger1J2CG"} {$name + "_rFinger1J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J2C.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J3C.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J1.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J2.scale"};
connectAttr -f {$name + "_rFinger1J1C.scale"} {$name + "_rFinger1J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 2/////////////////////////////////////
if (`objExists ($name + "_rFinger2J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger2J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger2J1CG"};
select -add {$name + "_rFinger2J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger2J2Length = `xform -q -t {$name + "_rFinger2J2"}`;
$rFinger2J3Length = `xform -q -t {$name + "_rFinger2J3"}`;
$JointLength[0] = (($rFinger2J2Length[0] + $rFinger2J3Length[0]) /2);
setAttr ({$name + "_rFinger2J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger2J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger2J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger2J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger2J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger2J1 DSN_rFinger2J2 {$name + "_rFinger2J1CG"};
delete {$name + "_rFinger2J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger2J1CG"};
duplicate -n {$name + "_rFinger2J2CG"};
select -add {$name + "_rFinger2J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger2J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger2J2 DSN_rFinger2J3 {$name + "_rFinger2J2CG"};
delete {$name + "_rFinger2J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger2J1CG"};
duplicate -n {$name + "_rFinger2J3CG"};
select -add {$name + "_rFinger2J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger2J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger2J3 DSN_rFinger2JTip {$name + "_rFinger2J3CG"};
delete {$name + "_rFinger2J3CG_aimConstraint1"};

parent {$name + "_rFinger2J1CG"} {$name + "_rFinger2J2CG"} {$name + "_rFinger2J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J2C.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J3C.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J1.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J2.scale"};
connectAttr -f {$name + "_rFinger2J1C.scale"} {$name + "_rFinger2J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 3/////////////////////////////////////
if (`objExists ($name + "_rFinger3J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger3J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger3J1CG"};
select -add {$name + "_rFinger3J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger3J2Length = `xform -q -t {$name + "_rFinger3J2"}`;
$rFinger3J3Length = `xform -q -t {$name + "_rFinger3J3"}`;
$JointLength[0] = (($rFinger3J2Length[0] + $rFinger3J3Length[0]) /2);
setAttr ({$name + "_rFinger3J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger3J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger3J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger3J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger3J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger3J1 DSN_rFinger3J2 {$name + "_rFinger3J1CG"};
delete {$name + "_rFinger3J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger3J1CG"};
duplicate -n {$name + "_rFinger3J2CG"};
select -add {$name + "_rFinger3J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger3J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger3J2 DSN_rFinger3J3 {$name + "_rFinger3J2CG"};
delete {$name + "_rFinger3J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger3J1CG"};
duplicate -n {$name + "_rFinger3J3CG"};
select -add {$name + "_rFinger3J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger3J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger3J3 DSN_rFinger3JTip {$name + "_rFinger3J3CG"};
delete {$name + "_rFinger3J3CG_aimConstraint1"};

parent {$name + "_rFinger3J1CG"} {$name + "_rFinger3J2CG"} {$name + "_rFinger3J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J2C.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J3C.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J1.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J2.scale"};
connectAttr -f {$name + "_rFinger3J1C.scale"} {$name + "_rFinger3J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 4/////////////////////////////////////
if (`objExists ($name + "_rFinger4J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger4J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger4J1CG"};
select -add {$name + "_rFinger4J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger4J2Length = `xform -q -t {$name + "_rFinger4J2"}`;
$rFinger4J3Length = `xform -q -t {$name + "_rFinger4J3"}`;
$JointLength[0] = (($rFinger4J2Length[0] + $rFinger4J3Length[0]) /2);
setAttr ({$name + "_rFinger4J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger4J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger4J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger4J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger4J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger4J1 DSN_rFinger4J2 {$name + "_rFinger4J1CG"};
delete {$name + "_rFinger4J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger4J1CG"};
duplicate -n {$name + "_rFinger4J2CG"};
select -add {$name + "_rFinger4J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger4J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger4J2 DSN_rFinger4J3 {$name + "_rFinger4J2CG"};
delete {$name + "_rFinger4J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger4J1CG"};
duplicate -n {$name + "_rFinger4J3CG"};
select -add {$name + "_rFinger4J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger4J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger4J3 DSN_rFinger4JTip {$name + "_rFinger4J3CG"};
delete {$name + "_rFinger4J3CG_aimConstraint1"};

parent {$name + "_rFinger4J1CG"} {$name + "_rFinger4J2CG"} {$name + "_rFinger4J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J2C.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J3C.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J1.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J2.scale"};
connectAttr -f {$name + "_rFinger4J1C.scale"} {$name + "_rFinger4J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 5/////////////////////////////////////
if (`objExists ($name + "_rFinger5J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger5J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger5J1CG"};
select -add {$name + "_rFinger5J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger5J2Length = `xform -q -t {$name + "_rFinger5J2"}`;
$rFinger5J3Length = `xform -q -t {$name + "_rFinger5J3"}`;
$JointLength[0] = (($rFinger5J2Length[0] + $rFinger5J3Length[0]) /2);
setAttr ({$name + "_rFinger5J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger5J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger5J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger5J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger5J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger5J1 DSN_rFinger5J2 {$name + "_rFinger5J1CG"};
delete {$name + "_rFinger5J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger5J1CG"};
duplicate -n {$name + "_rFinger5J2CG"};
select -add {$name + "_rFinger5J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger5J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger5J2 DSN_rFinger5J3 {$name + "_rFinger5J2CG"};
delete {$name + "_rFinger5J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger5J1CG"};
duplicate -n {$name + "_rFinger5J3CG"};
select -add {$name + "_rFinger5J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger5J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger5J3 DSN_rFinger5JTip {$name + "_rFinger5J3CG"};
delete {$name + "_rFinger5J3CG_aimConstraint1"};

parent {$name + "_rFinger5J1CG"} {$name + "_rFinger5J2CG"} {$name + "_rFinger5J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J2C.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J3C.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J1.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J2.scale"};
connectAttr -f {$name + "_rFinger5J1C.scale"} {$name + "_rFinger5J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 6/////////////////////////////////////
if (`objExists ($name + "_rFinger6J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger6J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger6J1CG"};
select -add {$name + "_rFinger6J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger6J2Length = `xform -q -t {$name + "_rFinger6J2"}`;
$rFinger6J3Length = `xform -q -t {$name + "_rFinger6J3"}`;
$JointLength[0] = (($rFinger6J2Length[0] + $rFinger6J3Length[0]) /2);
setAttr ({$name + "_rFinger6J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger6J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger6J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger6J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger6J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger6J1 DSN_rFinger6J2 {$name + "_rFinger6J1CG"};
delete {$name + "_rFinger6J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger6J1CG"};
duplicate -n {$name + "_rFinger6J2CG"};
select -add {$name + "_rFinger6J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger6J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger6J2 DSN_rFinger6J3 {$name + "_rFinger6J2CG"};
delete {$name + "_rFinger6J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger6J1CG"};
duplicate -n {$name + "_rFinger6J3CG"};
select -add {$name + "_rFinger6J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger6J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger6J3 DSN_rFinger6JTip {$name + "_rFinger6J3CG"};
delete {$name + "_rFinger6J3CG_aimConstraint1"};

parent {$name + "_rFinger6J1CG"} {$name + "_rFinger6J2CG"} {$name + "_rFinger6J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J2C.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J3C.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J1.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J2.scale"};
connectAttr -f {$name + "_rFinger6J1C.scale"} {$name + "_rFinger6J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 7/////////////////////////////////////
if (`objExists ($name + "_rFinger7J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger7J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger7J1CG"};
select -add {$name + "_rFinger7J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger7J2Length = `xform -q -t {$name + "_rFinger7J2"}`;
$rFinger7J3Length = `xform -q -t {$name + "_rFinger7J3"}`;
$JointLength[0] = (($rFinger7J2Length[0] + $rFinger7J3Length[0]) /2);
setAttr ({$name + "_rFinger7J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger7J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger7J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger7J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger7J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger7J1 DSN_rFinger7J2 {$name + "_rFinger7J1CG"};
delete {$name + "_rFinger7J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger7J1CG"};
duplicate -n {$name + "_rFinger7J2CG"};
select -add {$name + "_rFinger7J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger7J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger7J2 DSN_rFinger7J3 {$name + "_rFinger7J2CG"};
delete {$name + "_rFinger7J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger7J1CG"};
duplicate -n {$name + "_rFinger7J3CG"};
select -add {$name + "_rFinger7J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger7J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger7J3 DSN_rFinger7JTip {$name + "_rFinger7J3CG"};
delete {$name + "_rFinger7J3CG_aimConstraint1"};

parent {$name + "_rFinger7J1CG"} {$name + "_rFinger7J2CG"} {$name + "_rFinger7J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J2C.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J3C.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J1.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J2.scale"};
connectAttr -f {$name + "_rFinger7J1C.scale"} {$name + "_rFinger7J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 8/////////////////////////////////////
if (`objExists ($name + "_rFinger8J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger8J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger8J1CG"};
select -add {$name + "_rFinger8J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger8J2Length = `xform -q -t {$name + "_rFinger8J2"}`;
$rFinger8J3Length = `xform -q -t {$name + "_rFinger8J3"}`;
$JointLength[0] = (($rFinger8J2Length[0] + $rFinger8J3Length[0]) /2);
setAttr ({$name + "_rFinger8J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger8J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger8J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger8J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger8J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger8J1 DSN_rFinger8J2 {$name + "_rFinger8J1CG"};
delete {$name + "_rFinger8J1CG_aimConstraint1"};


//JOINT 2
select {$name + "_rFinger8J1CG"};
duplicate -n {$name + "_rFinger8J2CG"};
select -add {$name + "_rFinger8J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger8J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger8J2 DSN_rFinger8J3 {$name + "_rFinger8J2CG"};
delete {$name + "_rFinger8J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger8J1CG"};
duplicate -n {$name + "_rFinger8J3CG"};
select -add {$name + "_rFinger8J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger8J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger8J3 DSN_rFinger8JTip {$name + "_rFinger8J3CG"};
delete {$name + "_rFinger8J3CG_aimConstraint1"};

parent {$name + "_rFinger8J1CG"} {$name + "_rFinger8J2CG"} {$name + "_rFinger8J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J2C.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J3C.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J1.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J2.scale"};
connectAttr -f {$name + "_rFinger8J1C.scale"} {$name + "_rFinger8J3.scale"};
}

///////////////////////////////////////RIGHT FINGER 9/////////////////////////////////////
if (`objExists ($name + "_rFinger9J1")`)
{
//JOINT 1
circle -n {$name + "_rFinger9J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rFinger9J1CG"};
select -add {$name + "_rFinger9J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
$rFinger9J2Length = `xform -q -t {$name + "_rFinger9J2"}`;
$rFinger9J3Length = `xform -q -t {$name + "_rFinger9J3"}`;
$JointLength[0] = (($rFinger9J2Length[0] + $rFinger9J3Length[0]) /2);
setAttr ({$name + "_rFinger9J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rFinger9J1CG"};
transformLimits -sx 0.01 1 -esx 1 0 {$name + "_rFinger9J1C"};
transformLimits -sy 0.01 1 -esy 1 0 {$name + "_rFinger9J1C"};
transformLimits -sz 0.01 1 -esz 1 0 {$name + "_rFinger9J1C"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger9J1 DSN_rFinger9J2 {$name + "_rFinger9J1CG"};
delete {$name + "_rFinger9J1CG_aimConstraint1"};

//JOINT 2
select {$name + "_rFinger9J1CG"};
duplicate -n {$name + "_rFinger9J2CG"};
select -add {$name + "_rFinger9J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger9J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger9J2 DSN_rFinger9J3 {$name + "_rFinger9J2CG"};
delete {$name + "_rFinger9J2CG_aimConstraint1"};

//JOINT 3
select {$name + "_rFinger9J1CG"};
duplicate -n {$name + "_rFinger9J3CG"};
select -add {$name + "_rFinger9J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rFinger9J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rFinger9J3 DSN_rFinger9JTip {$name + "_rFinger9J3CG"};
delete {$name + "_rFinger9J3CG_aimConstraint1"};

parent {$name + "_rFinger9J1CG"} {$name + "_rFinger9J2CG"} {$name + "_rFinger9J3CG"} {$name + "_rPalmC"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J2C.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J3C.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J1.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J2.scale"};
connectAttr -f {$name + "_rFinger9J1C.scale"} {$name + "_rFinger9J3.scale"};
}


/////////////////////////////////////RIGHT LEG/////////////////////////////////////

//RIGHT LEG FK CONTROL

circle -n {$name + "_rHipFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rHipFKCG"};
setAttr {$name + "_rHipFKCG.rotateOrder"} 1;
parent {$name + "_rHipFKCG"} {$name + "_rHipJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_rHipFKCG"};
parent -w {$name + "_rHipFKCG"};
$rAnkle = `xform -q -t {$name + "_rAnkleJ"}`;
$rKnee = `xform -q -t {$name + "_rKneeJ"}`;
$JointLength[0] = (($rKnee[0] + $rAnkle[0]) /2);

setAttr ({$name + "_rHipFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));

//RIGHT KNEE FK CONTROL
circle -n {$name + "_rKneeFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rKneeFKCG"};
setAttr {$name + "_rKneeFKCG.rotateOrder"} 1;
parent {$name + "_rKneeFKCG"} {$name + "_rKneeJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_rKneeFKCG"};
parent -w {$name + "_rKneeFKCG"};
aimConstraint -aimVector 0 -1 0 -upVector 0 1 0 -worldUpType "none" -skip x -skip y DSN_rKneeLctr {$name + "_rKneeFKCG"};
$rAnkle = `xform -q -t {$name + "_rAnkleJ"}`;
$rKnee = `xform -q -t {$name + "_rKneeJ"}`;
$JointLength[0] = (($rKnee[0] + $rAnkle[0]) /2);

setAttr ({$name + "_rKneeFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));


//RIGHT ANKLE FK CONTROL
circle -n {$name + "_rAnkleFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rAnkleFKCG"};
setAttr {$name + "_rAnkleFKCG.rotateOrder"} 1;
parent {$name + "_rAnkleFKCG"} {$name + "_rAnkleJ"};
makeIdentity -apply false -t 1 -s 1 {$name + "_rAnkleFKCG"};
parent -w {$name + "_rAnkleFKCG"};
setAttr {$name + "_rAnkleFKCG.rotateX"} -90;
setAttr {$name + "_rAnkleFKCG.rotateY"} -90;
aimConstraint -aimVector 0 -1 0 -upVector -1 0 0 -worldUpType "scene" -skip x -skip y {$name + "_rBallJ"} {$name + "_rToeJ"} {$name + "_rAnkleFKCG"};
delete {$name + "_rAnkleFKCG_aimConstraint1"};
$rAnkle = `xform -q -t {$name + "_rAnkleJ"}`;
$rKnee = `xform -q -t {$name + "_rKneeJ"}`;
$JointLength[0] = (($rKnee[0] + $rAnkle[0]) /2);

setAttr ({$name + "_rAnkleFKC.scale"}, ($JointLength[0] / -4), ($JointLength[0] / -4), ($JointLength[0] / -4));
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rAnkleFKC"};

//RIGHT BALL FK CONTROL
circle -n {$name + "_rBallFKC"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rBallFKCG"};
setAttr {$name + "_rBallFKCG.rotateOrder"} 1;
parent {$name + "_rBallFKCG"} {$name + "_rBallJ"};
makeIdentity -apply false -t 1 -r 1 -s 1 {$name + "_rBallFKCG"};
parent -w {$name + "_rBallFKCG"};
$rAnkle = `xform -q -t {$name + "_rAnkleJ"}`;
$rKnee = `xform -q -t {$name + "_rKneeJ"}`;
$JointLength[0] = (($rKnee[0] + $rAnkle[0]) /2);

setAttr ({$name + "_rBallFKC.scale"}, ($JointLength[0] / 4), ($JointLength[0] / 4), ($JointLength[0] / 4));

//DETACH FK LEG JOINTS FOR SCALE COMPENSATION
parent -w {$name + "_rKneeJFK"} {$name + "_rAnkleJFK"};
group -n {$name + "_rAnkleJFKG1"} {$name + "_rAnkleJFK"};
group -n {$name + "_rAnkleJFKG2"} {$name + "_rAnkleJFKG1"};
$rAnkleLocation = `xform -q -ws -t {$name + "_rAnkleJ"}`;
move $rAnkleLocation[0] $rAnkleLocation[1] $rAnkleLocation[2] {$name + "_rAnkleJFKG1.scalePivot"} {$name + "_rAnkleJFKG1.rotatePivot"} ;
$rKneeLocation = `xform -q -ws -t {$name + "_rKneeJ"}`;
move $rKneeLocation[0] $rKneeLocation[1] $rKneeLocation[2] {$name + "_rAnkleJFKG2.scalePivot"} {$name + "_rAnkleJFKG2.rotatePivot"} ;
pointConstraint {$name + "_rAnkleFKC"} {$name + "_rAnkleJFKG1"};
parentConstraint -mo {$name + "_rKneeJFK"} {$name + "_rAnkleJFKG2"};

group -n {$name + "_rKneeJFKG1"} {$name + "_rKneeJFK"};
group -n {$name + "_rKneeJFKG2"} {$name + "_rKneeJFKG1"};
$rHipLocation = `xform -q -ws -t {$name + "_rHipJ"}`;
move $rKneeLocation[0] $rKneeLocation[1] $rKneeLocation[2] {$name + "_rKneeJFKG1.scalePivot"} {$name + "_rKneeJFKG1.rotatePivot"} ;
move $rHipLocation[0] $rHipLocation[1] $rHipLocation[2] {$name + "_rKneeJFKG2.scalePivot"} {$name + "_rKneeJFKG2.rotatePivot"} ;
pointConstraint {$name + "_rKneeFKC"} {$name + "_rKneeJFKG1"};
parentConstraint -mo {$name + "_rHipJFK"} {$name + "_rKneeJFKG2"};

		//RIGHT KNEE IK CONTROL
curve -n {$name + "_rKneeIKC"} -d 1 -p 0 -5 0 -p -2 -3 0 -p -1 -3 0 -p -1 -1 0 -p -3 -1 0 -p -3 -2 0
-p -5 0 0 -p -3 2 0 -p -3 1 0 -p -1 1 0 -p -1 3 0 -p -2 3 0 -p 0 5 0 -p 2 3 0
-p 1 3 0 -p 1 1 0 -p 3 1 0 -p 3 2 0 -p 5 0 0 -p 3 -2 0 -p 3 -1 0 -p 1 -1 0	
-p 1 -3 0 -p 2 -3 0 -p 0 -5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9
-k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22
-k 23 -k 24 ;

move -r 0 0 0.95 {$name + "_rKneeIKC.cv[12]"}  {$name + "_rKneeIKC.cv[0]"} {$name + "_rKneeIKC.cv[24]"} {$name + "_rKneeIKC.cv[18]"} {$name + "_rKneeIKC.cv[6]"} ;
move -r 0 0 -0.65 {$name + "_rKneeIKC.cv[3]"} {$name + "_rKneeIKC.cv[9]"} {$name + "_rKneeIKC.cv[15]"} {$name + "_rKneeIKC.cv[21]"} ;
select {$name + "_rKneeIKC"};
group -n {$name + "_rKneeIKCG"};
parentConstraint DSN_rKnee {$name + "_rKneeIKCG"};
delete {$name + "_rKneeIKCG_parentConstraint1"};
$rKneeLength = `xform -q -t {$name + "_rKneeJ"}`;
$rAnkleLength = `xform -q -t {$name + "_rAnkleJ"}`;
$rLegLength[0] = (($rKneeLength[0] + $rAnkleLength[0]) /-3.5);
setAttr {$name + "_rKneeIKC.tz"} ($rLegLength[0] * 2);
setAttr ({$name + "_rKneeIKC.scale"}, ($rLegLength[0] / 14), ($rLegLength[0] / 14), ($rLegLength[0] / 14));

makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rKneeIKC"};

aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" {$name + "_rKneeJIK"} {$name + "_rKneeIKC"};
delete {$name + "_rKneeIKC_aimConstraint1"};
makeIdentity -apply true -r 1 {$name + "_rKneeIKC"};

//RIGHT KNEE AIM LOCATOR
spaceLocator -n {$name + "_rKneeIKC_TargetLctr"};
pointConstraint {$name + "_rKneeJ"} {$name + "_rKneeIKC_TargetLctr"};
delete {$name + "_rKneeIKC_TargetLctr_pointConstraint1"};
pointConstraint -mo {$name + "_rHipJIK"} {$name + "_rAnkleJIK"} {$name + "_rKneeIKC_TargetLctr"};
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "scene" {$name + "_rKneeIKC_TargetLctr"} {$name + "_rKneeIKC"};

//RIGHT CONTROLS
	//RIGHT IK//
		//RIGHT FOOT IK CONTROL
circle  -n {$name + "_rFootIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 2.5 -d 3 -ut 0 -tol 0.01 -s 16 -ch 1;
move -r -0.203244 0 0.472547  {$name + "_rFootIKC.cv[1]"} ;
move -r 0.108438 0 0.70882 {$name + "_rFootIKC.cv[2]"} ;
move -r 0.892819 0 1.009532 {$name + "_rFootIKC.cv[3]"} ;
move -r 2.01238 0 0.902135 {$name + "_rFootIKC.cv[4]"} ;
move -r 2.200896 0 0.601079 {$name + "_rFootIKC.cv[5]"} ;
move -r 1.450752 0 0.3308 {$name + "_rFootIKC.cv[6]"} ;
move -r 0.406025 0 0.214794 {$name + "_rFootIKC.cv[7]"} ;
move -r -0.0357198 0 0.902544 {$name + "_rFootIKC.cv[8]"} ;
move -r -0.085452 0 0.808986 {$name + "_rFootIKC.cv[9]"} ;
move -r -0.39679 0 0.70882 {$name + "_rFootIKC.cv[10]"} ;
move -r -0.649352 0 0.590683 {$name + "_rFootIKC.cv[11]"} ;
move -r -0.986916 0 0.590683 {$name + "_rFootIKC.cv[12]"} ;
move -r -1.629254 0 0.579944 {$name + "_rFootIKC.cv[13]"} ;
move -r -1.472333 0 0.590683 {$name + "_rFootIKC.cv[14]"} ;
move -r -0.7637 0 0.590683 {$name + "_rFootIKC.cv[15]"} ;
move -r -0.353831 0 0.440328 {$name + "_rFootIKC.cv[0]"} ;
move -r -os -wd 0 0.333 0 {$name + "_rFootIKC.cv[4:5]"} {$name + "_rFootIKC.cv[13:14]"} ;
move -r -os -wd 0 0 1 {$name + "_rFootIKC.cv[0:15]"} ;
move -r 0 0 -0.2 {$name + "_rFootIKC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rFootIKC"};
delete -ch {$name + "_rFootIKC"};
group -em -n {$name + "_rFootIKCG"};
rotate -r 180 0 0 {$name + "_rFootIKCG"};
parent {$name + "_rFootIKC"} {$name + "_rFootIKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rFootIKC"};
setAttr {$name + "_rFootIKC.rotateOrder"} 1;

		//LEFT TOE CONTROL
circle -n {$name + "_rToeIKC"} -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
makeIdentity -apply true -t 1 -r 1 -s 1;
delete -ch;
move -r -0.25107 1.330277 2.206782 {$name + "_rToeIKC.cv[1]"} ;
move -r 0.254402 1.084741 1.162191 {$name + "_rToeIKC.cv[0]"} ;
move -r 0.0513063 0.450871 -0.204969 {$name + "_rToeIKC.cv[7]"} ;
move -r 0.187803 0.259426 -0.108661 {$name + "_rToeIKC.cv[6]"} ;
move -r -0.276837 0.154413 0.307813 {$name + "_rToeIKC.cv[5]"} ;
move -r -0.395115 0.259426 -0.0326967 {$name + "_rToeIKC.cv[4]"} ;
move -r 0.00260226 0.47359 -0.204969 {$name + "_rToeIKC.cv[3]"} ;
move -r -0.369241 1.189888 1.331089 {$name + "_rToeIKC.cv[2]"} ;
move -r -os -wd 0 0 0.9 {$name + "_rToeIKC.cv[0:7]"} ;
move -r -.001 0 1.85 {$name + "_rToeIKC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rToeIKC"};
group -em -n {$name + "_rToeIKCG"};
rotate -r 180 0 0 {$name + "_rToeIKCG"};
parent {$name + "_rToeIKC"} {$name + "_rToeIKCG"};
parent {$name + "_rToeIKCG"} {$name + "_rFootIKC"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rToeIKCG"};

pointConstraint -skip y {$name + "_rAnkleJ"} {$name + "_rFootIKCG"};
delete {$name + "_rFootIKCG_pointConstraint1"};
pointConstraint -skip x -skip z -weight 1 {$name + "_rBallJ"} {$name + "_rFootIKCG"};
delete {$name + "_rFootIKCG_pointConstraint1"};
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene"
-skip x -skip z {$name + "_rToeJ"} {$name + "_rBallJ"} {$name + "_rFootIKCG"};
delete {$name + "_rFootIKCG_aimConstraint1"};

$rAnkleJPosition = `xform -ws -q -rp {$name + "_rAnkleJ"}`;
$rBallLocation = `xform  -q -t {$name + "_rBallJ"}`;
$rToeLocation = `xform -q -t {$name + "_rToeJ"}`;
setAttr ({$name + "_rFootIKCG.scale"}, (($rBallLocation[0] + $rToeLocation[0])/3.5), (($rBallLocation[0]+$rToeLocation[0])/-3.5), (($rBallLocation[0]+$rToeLocation[0])/-3.5));
makeIdentity -apply true -t 1 -s 1 {$name + "_rFootIKCG"};

//MOVE TOE CTRL PIVOT
$limbJointLoc = `xform -ws -q -t {$name + "_rToeJ"}`;
move $limbJointLoc[0]  $limbJointLoc[1] $limbJointLoc[2] {$name + "_rToeIKC.scalePivot"} {$name + "_rToeIKC.rotatePivot"} ;
move $rAnkleJPosition[0] $rAnkleJPosition[1] $rAnkleJPosition[2] {$name + "_rFootIKC.scalePivot"} {$name + "_rFootIKC.rotatePivot"} ;
parentConstraint -mo {$name + "_rFootIKC"} {$name + "_rToeIKCG"};

makeIdentity -apply true -t 1 -s 1 {$name + "_rHipFKCG"};

///////////////////////////////////////RIGHT TOES/////////////////////////////////////
if (`objExists ($name + "_rToe01J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe01J1"};}
if (`objExists ($name + "_rToe02J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe02J1"};}
if (`objExists ($name + "_rToe03J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe03J1"};}
if (`objExists ($name + "_rToe04J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe04J1"};}
if (`objExists ($name + "_rToe05J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe05J1"};}
if (`objExists ($name + "_rToe06J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe06J1"};}
if (`objExists ($name + "_rToe07J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe07J1"};}
if (`objExists ($name + "_rToe08J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe08J1"};}
if (`objExists ($name + "_rToe09J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe09J1"};}
if (`objExists ($name + "_rToe10J1")`)
{joint -e -oj xyz -secondaryAxisOrient yup -ch -zso {$name + "_rToe10J1"};}



///////////////////////////////////////RIGHT TOE 1/////////////////////////////////////
if (`objExists ($name + "_rToe01J1")`)
{
//JOINT 1
circle -n {$name + "_rToe01J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe01J1CG"};
select -add {$name + "_rToe01J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe01J2Length = `xform -q -t {$name + "_rToe01J2"}`;
$rToe01JTipLength = `xform -q -t {$name + "_rToe01JTip"}`;
$JointLength[0] = (($rToe01J2Length[0] + $rToe01JTipLength[0]) /2);
setAttr ({$name + "_rToe01J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe01J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe01J1 DSN_rToe01J2 {$name + "_rToe01J1CG"};
delete {$name + "_rToe01J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe01J1C"} {$name + "_rToe01J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe01J1CG"};

//JOINT 2
select {$name + "_rToe01J1CG"};
duplicate -n {$name + "_rToe01J2CG"};
select -add {$name + "_rToe01J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe01J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe01J2 DSN_rToe01JTip {$name + "_rToe01J2CG"};
delete {$name + "_rToe01J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe01J2C"} {$name + "_rToe01J2"};
parentConstraint -mo {$name + "_rToe01J1C"} {$name + "_rToe01J2CG"};
}

///////////////////////////////////////RIGHT TOE 2/////////////////////////////////////
if (`objExists ($name + "_rToe02J1")`)
{
//JOINT 1
circle -n {$name + "_rToe02J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe02J1CG"};
select -add {$name + "_rToe02J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe02J2Length = `xform -q -t {$name + "_rToe02J2"}`;
$rToe02J3Length = `xform -q -t {$name + "_rToe02J3"}`;
$JointLength[0] = (($rToe02J2Length[0] + $rToe02J3Length[0]) /2);
setAttr ({$name + "_rToe02J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe02J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe02J1 DSN_rToe02J2 {$name + "_rToe02J1CG"};
delete {$name + "_rToe02J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe02J1C"} {$name + "_rToe02J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe02J1CG"};

//JOINT 2
select {$name + "_rToe02J1CG"};
duplicate -n {$name + "_rToe02J2CG"};
select -add {$name + "_rToe02J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe02J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe02J2 DSN_rToe02J3 {$name + "_rToe02J2CG"};
delete {$name + "_rToe02J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe02J2C"} {$name + "_rToe02J2"};
parentConstraint -mo {$name + "_rToe02J1C"} {$name + "_rToe02J2CG"};

//JOINT 3
select {$name + "_rToe02J1CG"};
duplicate -n {$name + "_rToe02J3CG"};
select -add {$name + "_rToe02J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe02J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe02J3 DSN_rToe02JTip {$name + "_rToe02J3CG"};
delete {$name + "_rToe02J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe02J3C"} {$name + "_rToe02J3"};
parentConstraint -mo {$name + "_rToe02J2C"} {$name + "_rToe02J3CG"};
}

///////////////////////////////////////RIGHT TOE 3/////////////////////////////////////
if (`objExists ($name + "_rToe03J1")`)
{
//JOINT 1
circle -n {$name + "_rToe03J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe03J1CG"};
select -add {$name + "_rToe03J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe03J2Length = `xform -q -t {$name + "_rToe03J2"}`;
$rToe03J3Length = `xform -q -t {$name + "_rToe03J3"}`;
$JointLength[0] = (($rToe03J2Length[0] + $rToe03J3Length[0]) /2);
setAttr ({$name + "_rToe03J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe03J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe03J1 DSN_rToe03J2 {$name + "_rToe03J1CG"};
delete {$name + "_rToe03J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe03J1C"} {$name + "_rToe03J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe03J1CG"};

//JOINT 2
select {$name + "_rToe03J1CG"};
duplicate -n {$name + "_rToe03J2CG"};
select -add {$name + "_rToe03J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe03J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe03J2 DSN_rToe03J3 {$name + "_rToe03J2CG"};
delete {$name + "_rToe03J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe03J2C"} {$name + "_rToe03J2"};
parentConstraint -mo {$name + "_rToe03J1C"} {$name + "_rToe03J2CG"};

//JOINT 3
select {$name + "_rToe03J1CG"};
duplicate -n {$name + "_rToe03J3CG"};
select -add {$name + "_rToe03J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe03J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe03J3 DSN_rToe03JTip {$name + "_rToe03J3CG"};
delete {$name + "_rToe03J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe03J3C"} {$name + "_rToe03J3"};
parentConstraint -mo {$name + "_rToe03J2C"} {$name + "_rToe03J3CG"};
}

///////////////////////////////////////RIGHT TOE 4/////////////////////////////////////
if (`objExists ($name + "_rToe04J1")`)
{
//JOINT 1
circle -n {$name + "_rToe04J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe04J1CG"};
select -add {$name + "_rToe04J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe04J2Length = `xform -q -t {$name + "_rToe04J2"}`;
$rToe04J3Length = `xform -q -t {$name + "_rToe04J3"}`;
$JointLength[0] = (($rToe04J2Length[0] + $rToe04J3Length[0]) /2);
setAttr ({$name + "_rToe04J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe04J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe04J1 DSN_rToe04J2 {$name + "_rToe04J1CG"};
delete {$name + "_rToe04J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe04J1C"} {$name + "_rToe04J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe04J1CG"};

//JOINT 2
select {$name + "_rToe04J1CG"};
duplicate -n {$name + "_rToe04J2CG"};
select -add {$name + "_rToe04J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe04J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe04J2 DSN_rToe04J3 {$name + "_rToe04J2CG"};
delete {$name + "_rToe04J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe04J2C"} {$name + "_rToe04J2"};
parentConstraint -mo {$name + "_rToe04J1C"} {$name + "_rToe04J2CG"};

//JOINT 3
select {$name + "_rToe04J1CG"};
duplicate -n {$name + "_rToe04J3CG"};
select -add {$name + "_rToe04J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe04J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe04J3 DSN_rToe04JTip {$name + "_rToe04J3CG"};
delete {$name + "_rToe04J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe04J3C"} {$name + "_rToe04J3"};
parentConstraint -mo {$name + "_rToe04J2C"} {$name + "_rToe04J3CG"};
}

///////////////////////////////////////RIGHT TOE 5/////////////////////////////////////
if (`objExists ($name + "_rToe05J1")`)
{
//JOINT 1
circle -n {$name + "_rToe05J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe05J1CG"};
select -add {$name + "_rToe05J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe05J2Length = `xform -q -t {$name + "_rToe05J2"}`;
$rToe05J3Length = `xform -q -t {$name + "_rToe05J3"}`;
$JointLength[0] = (($rToe05J2Length[0] + $rToe05J3Length[0]) /2);
setAttr ({$name + "_rToe05J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe05J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe05J1 DSN_rToe05J2 {$name + "_rToe05J1CG"};
delete {$name + "_rToe05J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe05J1C"} {$name + "_rToe05J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe05J1CG"};

//JOINT 2
select {$name + "_rToe05J1CG"};
duplicate -n {$name + "_rToe05J2CG"};
select -add {$name + "_rToe05J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe05J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe05J2 DSN_rToe05J3 {$name + "_rToe05J2CG"};
delete {$name + "_rToe05J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe05J2C"} {$name + "_rToe05J2"};
parentConstraint -mo {$name + "_rToe05J1C"} {$name + "_rToe05J2CG"};

//JOINT 3
select {$name + "_rToe05J1CG"};
duplicate -n {$name + "_rToe05J3CG"};
select -add {$name + "_rToe05J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe05J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe05J3 DSN_rToe05JTip {$name + "_rToe05J3CG"};
delete {$name + "_rToe05J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe05J3C"} {$name + "_rToe05J3"};
parentConstraint -mo {$name + "_rToe05J2C"} {$name + "_rToe05J3CG"};
}

///////////////////////////////////////RIGHT TOE 6/////////////////////////////////////
if (`objExists ($name + "_rToe06J1")`)
{
//JOINT 1
circle -n {$name + "_rToe06J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe06J1CG"};
select -add {$name + "_rToe06J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe06J2Length = `xform -q -t {$name + "_rToe06J2"}`;
$rToe06J3Length = `xform -q -t {$name + "_rToe06J3"}`;
$JointLength[0] = (($rToe06J2Length[0] + $rToe06J3Length[0]) /2);
setAttr ({$name + "_rToe06J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe06J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe06J1 DSN_rToe06J2 {$name + "_rToe06J1CG"};
delete {$name + "_rToe06J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe06J1C"} {$name + "_rToe06J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe06J1CG"};

//JOINT 2
select {$name + "_rToe06J1CG"};
duplicate -n {$name + "_rToe06J2CG"};
select -add {$name + "_rToe06J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe06J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe06J2 DSN_rToe06J3 {$name + "_rToe06J2CG"};
delete {$name + "_rToe06J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe06J2C"} {$name + "_rToe06J2"};
parentConstraint -mo {$name + "_rToe06J1C"} {$name + "_rToe06J2CG"};

//JOINT 3
select {$name + "_rToe06J1CG"};
duplicate -n {$name + "_rToe06J3CG"};
select -add {$name + "_rToe06J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe06J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe06J3 DSN_rToe06JTip {$name + "_rToe06J3CG"};
delete {$name + "_rToe06J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe06J3C"} {$name + "_rToe06J3"};
parentConstraint -mo {$name + "_rToe06J2C"} {$name + "_rToe06J3CG"};
}

///////////////////////////////////////RIGHT TOE 7/////////////////////////////////////
if (`objExists ($name + "_rToe07J1")`)
{
//JOINT 1
circle -n {$name + "_rToe07J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe07J1CG"};
select -add {$name + "_rToe07J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe07J2Length = `xform -q -t {$name + "_rToe07J2"}`;
$rToe07J3Length = `xform -q -t {$name + "_rToe07J3"}`;
$JointLength[0] = (($rToe07J2Length[0] + $rToe07J3Length[0]) /2);
setAttr ({$name + "_rToe07J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe07J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe07J1 DSN_rToe07J2 {$name + "_rToe07J1CG"};
delete {$name + "_rToe07J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe07J1C"} {$name + "_rToe07J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe07J1CG"};

//JOINT 2
select {$name + "_rToe07J1CG"};
duplicate -n {$name + "_rToe07J2CG"};
select -add {$name + "_rToe07J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe07J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe07J2 DSN_rToe07J3 {$name + "_rToe07J2CG"};
delete {$name + "_rToe07J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe07J2C"} {$name + "_rToe07J2"};
parentConstraint -mo {$name + "_rToe07J1C"} {$name + "_rToe07J2CG"};

//JOINT 3
select {$name + "_rToe07J1CG"};
duplicate -n {$name + "_rToe07J3CG"};
select -add {$name + "_rToe07J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe07J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe07J3 DSN_rToe07JTip {$name + "_rToe07J3CG"};
delete {$name + "_rToe07J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe07J3C"} {$name + "_rToe07J3"};
parentConstraint -mo {$name + "_rToe07J2C"} {$name + "_rToe07J3CG"};
}

///////////////////////////////////////RIGHT TOE 8/////////////////////////////////////
if (`objExists ($name + "_rToe08J1")`)
{
//JOINT 1
circle -n {$name + "_rToe08J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe08J1CG"};
select -add {$name + "_rToe08J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe08J2Length = `xform -q -t {$name + "_rToe08J2"}`;
$rToe08J3Length = `xform -q -t {$name + "_rToe08J3"}`;
$JointLength[0] = (($rToe08J2Length[0] + $rToe08J3Length[0]) /2);
setAttr ({$name + "_rToe08J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe08J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe08J1 DSN_rToe08J2 {$name + "_rToe08J1CG"};
delete {$name + "_rToe08J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe08J1C"} {$name + "_rToe08J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe08J1CG"};

//JOINT 2
select {$name + "_rToe08J1CG"};
duplicate -n {$name + "_rToe08J2CG"};
select -add {$name + "_rToe08J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe08J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe08J2 DSN_rToe08J3 {$name + "_rToe08J2CG"};
delete {$name + "_rToe08J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe08J2C"} {$name + "_rToe08J2"};
parentConstraint -mo {$name + "_rToe08J1C"} {$name + "_rToe08J2CG"};

//JOINT 3
select {$name + "_rToe08J1CG"};
duplicate -n {$name + "_rToe08J3CG"};
select -add {$name + "_rToe08J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe08J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe08J3 DSN_rToe08JTip {$name + "_rToe08J3CG"};
delete {$name + "_rToe08J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe08J3C"} {$name + "_rToe08J3"};
parentConstraint -mo {$name + "_rToe08J2C"} {$name + "_rToe08J3CG"};
}

///////////////////////////////////////RIGHT TOE 9/////////////////////////////////////
if (`objExists ($name + "_rToe09J1")`)
{
//JOINT 1
circle -n {$name + "_rToe09J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe09J1CG"};
select -add {$name + "_rToe09J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe09J2Length = `xform -q -t {$name + "_rToe09J2"}`;
$rToe09J3Length = `xform -q -t {$name + "_rToe09J3"}`;
$JointLength[0] = (($rToe09J2Length[0] + $rToe09J3Length[0]) /2);
setAttr ({$name + "_rToe09J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe09J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe09J1 DSN_rToe09J2 {$name + "_rToe09J1CG"};
delete {$name + "_rToe09J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe09J1C"} {$name + "_rToe09J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe09J1CG"};

//JOINT 2
select {$name + "_rToe09J1CG"};
duplicate -n {$name + "_rToe09J2CG"};
select -add {$name + "_rToe09J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe09J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe09J2 DSN_rToe09J3 {$name + "_rToe09J2CG"};
delete {$name + "_rToe09J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe09J2C"} {$name + "_rToe09J2"};
parentConstraint -mo {$name + "_rToe09J1C"} {$name + "_rToe09J2CG"};

//JOINT 3
select {$name + "_rToe09J1CG"};
duplicate -n {$name + "_rToe09J3CG"};
select -add {$name + "_rToe09J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe09J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe09J3 DSN_rToe09JTip {$name + "_rToe09J3CG"};
delete {$name + "_rToe09J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe09J3C"} {$name + "_rToe09J3"};
parentConstraint -mo {$name + "_rToe09J2C"} {$name + "_rToe09J3CG"};
}

///////////////////////////////////////RIGHT TOE 10/////////////////////////////////////
if (`objExists ($name + "_rToe10J1")`)
{
//JOINT 1
circle -n {$name + "_rToe10J1C"} -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;
delete -ch;
group -n {$name + "_rToe10J1CG"};
select -add {$name + "_rToe10J1"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
$rToe10J2Length = `xform -q -t {$name + "_rToe10J2"}`;
$rToe10J3Length = `xform -q -t {$name + "_rToe10J3"}`;
$JointLength[0] = (($rToe10J2Length[0] + $rToe10J3Length[0]) /2);
setAttr ({$name + "_rToe10J1C.scale"}, ($JointLength[0] / 1.1), ($JointLength[0] / 1.1), ($JointLength[0] / 2));
makeIdentity -apply true -s 1 {$name + "_rToe10J1CG"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe10J1 DSN_rToe10J2 {$name + "_rToe10J1CG"};
delete {$name + "_rToe10J1CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe10J1C"} {$name + "_rToe10J1"};
parentConstraint -mo {$name + "_rBallJ"} {$name + "_rToe10J1CG"};

//JOINT 2
select {$name + "_rToe10J1CG"};
duplicate -n {$name + "_rToe10J2CG"};
select -add {$name + "_rToe10J2"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe10J2C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe10J2 DSN_rToe10J3 {$name + "_rToe10J2CG"};
delete {$name + "_rToe10J2CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe10J2C"} {$name + "_rToe10J2"};
parentConstraint -mo {$name + "_rToe10J1C"} {$name + "_rToe10J2CG"};

//JOINT 3
select {$name + "_rToe10J1CG"};
duplicate -n {$name + "_rToe10J3CG"};
select -add {$name + "_rToe10J3"};
parent;
makeIdentity -apply false -t 1 -r 1;
parent -w;
scale -r 0.8 0.8 0.8 ;
makeIdentity -apply true -t 1 -s 1;
pickWalk -d down;
rename {$name + "_rToe10J3C"};
aimConstraint -aimVector -1 0 0 -upVector 0 -1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject DSN_rToe10J3 DSN_rToe10JTip {$name + "_rToe10J3CG"};
delete {$name + "_rToe10J3CG_aimConstraint1"};
parentConstraint -mo {$name + "_rToe10J3C"} {$name + "_rToe10J3"};
parentConstraint -mo {$name + "_rToe10J2C"} {$name + "_rToe10J3CG"};
}

//FK SCALE
parentConstraint -mo -skipRotate x -skipRotate y -skipRotate z {$name + "_MainHipC"} {$name + "_rHipFKCG"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_MainHipC"} {$name + "_MainC"} {$name + "_rHipFKCG"};
addAttr -ln "HipOrient"  -at double  -min 0 -max 1 -dv 1 {$name + "_rHipFKC"};
setAttr -e-k true {$name + "_rHipFKC.HipOrient"};
setAttr {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rHipFKC.HipOrient"} {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainHipCW0"};
setDrivenKeyframe -currentDriver {$name + "_rHipFKC.HipOrient"} {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainCW1"};
setAttr {$name + "_rHipFKC.HipOrient"} 0;
setAttr {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainHipCW0"} 0;
setAttr {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rHipFKC.HipOrient"} {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainHipCW0"};
setDrivenKeyframe -currentDriver {$name + "_rHipFKC.HipOrient"} {$name + "_rHipFKCG_parentConstraint2." + $name + "_MainCW1"};
setAttr {$name + "_rHipFKC.HipOrient"} 1;

selectKey -k -f 0 -f 1 {$name + "_rHipFKCG_parentConstraint2_" + $name + "_MainHipCW0"} ;
selectKey -add -k -f 0 -f 1 {$name + "_rHipFKCG_parentConstraint2_" + $name + "_MainCW1"} ;
keyTangent -itt spline -ott spline ;

parentConstraint -mo {$name + "_rShoulderFKC"} {$name + "_rShoulderJFK"};
parentConstraint -mo {$name + "_rShoulderFKC"} {$name + "_rElbowFKCG"};

parentConstraint -mo {$name + "_rElbowFKC"} {$name + "_rElbowJFK"};
parentConstraint -mo {$name + "_rElbowFKC"} {$name + "_rWristFKCG"};

parentConstraint -mo {$name + "_rWristFKC"} {$name + "_rWristJFK"};
setAttr {$name + "_rWristJFK_parentConstraint1.interpType"} 2;

//CONNECT SCALE TO FK CONTROLS
connectAttr -f {$name + "_rHipFKC.scaleX"} {$name + "_rHipJFK.scaleX"};
connectAttr -f {$name + "_rHipFKC.scaleX"} {$name + "_rKneeFKC.scaleX"};
connectAttr -f {$name + "_rHipFKC.scaleX"} {$name + "_rKneeJFK.scaleX"};

//EXTRA ATTRIBUTE TOGGLES IN MAIN CONTROL
addAttr -ln "spineIK"  -at bool  {$name + "_MainC"};
setAttr -e-k true {$name + "_MainC.spineIK"};
connectAttr -f {$name + "_MainC.spineIK"} {$name + "_SpineMidIKC.v"};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////CONNECT CONTROLS///////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//DELETE DUMMY RIG
delete DSN_ROOT DSN_Spine01G DSN_Spine02G DSN_Spine03G DSN_Spine04 DSN_lElbowG
DSN_lWrist DSN_lKneeG DSN_lAnkle DSN_rElbowG DSN_rWrist DSN_rKneeG DSN_rAnkle
DSN_lFootG DSN_rFootG DSN_rKneeParent DSN_lKneeParent DSN_rElbowParent DSN_lElbowParent
DSN_rKneeParentUpG DSN_lKneeParentUpG DSN_rElbowParentUpG DSN_lElbowParentUpG ;

setAttr -l 0 -k 1 {$name + "_MainC.sx"};
setAttr -l 0 -k 1 {$name + "_MainC.sz"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_MainC"};

//CENTER JOINTS
parentConstraint -mo {$name + "_MainC"} {$name + "_ROOTCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_MainHipC"} {$name + "_SpineTopIKC"} {$name + "_HeadC"} {$name + "_lWristIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_lWristIKC"} {$name + "_lClavicleC"} {$name + "_lElbowIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_lFootIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_MainHipC"} {$name + "_lKneeIKCG"};

parentConstraint -mo {$name + "_MainC"} {$name + "_MainHipC"} {$name + "_SpineTopIKC"} {$name + "_HeadC"} {$name + "_rWristIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_rWristIKC"} {$name + "_rClavicleC"} {$name + "_rElbowIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_rFootIKCG"};
parentConstraint -mo {$name + "_MainC"} {$name + "_MainHipC"} {$name + "_rKneeIKCG"};

parentConstraint -mo {$name + "_MainC"} {$name + "_ROOTCG"};

parentConstraint -mo {$name + "_ROOTC"} {$name + "_MainHipCG"};


parentConstraint -mo {$name + "_Spine01FKC"} {$name + "_Spine01J"};
parentConstraint -mo {$name + "_ROOTC"} {$name + "_Spine01FKCG"};

parentConstraint -mo {$name + "_Spine02FKC"} {$name + "_Spine02J"};
parentConstraint -mo {$name + "_Spine01FKC"} {$name + "_Spine02FKCG"};

parentConstraint -mo {$name + "_Spine03FKC"} {$name + "_Spine03J"};
parentConstraint -mo {$name + "_Spine02FKC"} {$name + "_Spine03FKCG"};

parentConstraint -mo {$name + "_SpineTopIKC"} {$name + "_Spine04J"};
parentConstraint -mo {$name + "_Spine03FKC"} {$name + "_Spine04FKCG"};

parentConstraint -mo {$name + "_Neck01C"} {$name + "_Neck01J"};
parentConstraint -mo {$name + "_SpineTopIKC"} {$name + "_Neck01CG"};

parentConstraint -mo {$name + "_HeadC"} {$name + "_HeadJ"};
parentConstraint -mo {$name + "_Neck01C"} {$name + "_HeadCG2"};

orientConstraint -mo {$name + "_MainC"} {$name + "_Neck01C"} {$name + "_HeadCG"};

parentConstraint -mo {$name + "_JawC"} {$name + "_JawJ"};
parentConstraint -mo {$name + "_HeadC"} {$name + "_JawCG"};

parentConstraint -mo {$name + "_MainC"} {$name + "_HeadC"}{$name + "_EyeAimCG"};

//EYES
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} {$name + "_lEyeAimC"} {$name + "_lEyeJ"};

aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation"
-worldUpVector 0 1 0 -worldUpObject {$name + "_HeadC"} {$name + "_rEyeAimC"} {$name + "_rEyeJ"};

//HEAD SCALE
setAttr -l 0 -k 1 {$name + "_JawCG.sx"};
setAttr -l 0 -k 1 {$name + "_JawCG.sy"};
setAttr -l 0 -k 1 {$name + "_JawCG.sz"};
scaleConstraint {$name + "_HeadC"} {$name + "_JawCG"};
transformLimits -sx 0.1 1 -esx 1 0 {$name + "_HeadC"};
transformLimits -sy 0.1 1 -esy 1 0 {$name + "_HeadC"};
transformLimits -sz 0.1 1 -esz 1 0 {$name + "_HeadC"};
connectAttr -f {$name + "_HeadC.scaleY"} {$name + "_HeadJ.scaleX"};
connectAttr -f {$name + "_HeadC.scaleX"} {$name + "_HeadJ.scaleZ"};
connectAttr -f {$name + "_HeadC.scaleZ"} {$name + "_HeadJ.scaleY"};

////////////////////////////////////LEFT SIDE////////////////////////////////////
//LEFT ARM
parentConstraint -mo {$name + "_SpineTopIKC"} {$name + "_lClavicleCG"};

//FK
parentConstraint -mo {$name + "_lClavicleC"} {$name + "_lClavicleJ"};
parentConstraint -mo -skipRotate x -skipRotate y -skipRotate z {$name + "_lClavicleC"} {$name + "_lShoulderFKCG"};
group -n {$name + "_lShoulderFKCG2"} {$name + "_lShoulderFKCG"};
$lShoulderLocation = `xform -q -ws -t {$name + "_lShoulderFKCG"}`;
move $lShoulderLocation[0] $lShoulderLocation[1] $lShoulderLocation[2] {$name + "_lShoulderFKCG2.scalePivot"} {$name + "_lShoulderFKCG2.rotatePivot"} ;
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_SpineTopIKC"} {$name + "_MainC"} {$name + "_lShoulderFKCG2"};
setAttr {$name + "_lShoulderFKCG2_parentConstraint1.interpType"} 2;
addAttr -ln "ShoulderOrient"  -at double  -min 0 -max 1 -dv 1 {$name + "_lShoulderFKC"};
setAttr -e-k true {$name + "_lShoulderFKC.ShoulderOrient"};
setAttr {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lShoulderFKC.ShoulderOrient"} {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"};
setDrivenKeyframe -currentDriver {$name + "_lShoulderFKC.ShoulderOrient"} {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"};
setAttr {$name + "_lShoulderFKC.ShoulderOrient"} 0;
setAttr {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"} 0;
setAttr {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lShoulderFKC.ShoulderOrient"} {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"};
setDrivenKeyframe -currentDriver {$name + "_lShoulderFKC.ShoulderOrient"} {$name + "_lShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"};
	setAttr {$name + "_lShoulderFKC.ShoulderOrient"} 1;

selectKey -k -f 0 -f 1 {$name + "_lShoulderFKCG2_parentConstraint1_" + $name + "_MainCW1"} ;
selectKey -add -k -f 0 -f 1 {$name + "_lShoulderFKCG2_parentConstraint1_" + $name + "_SpineTopIKCW0"} ;
keyTangent -itt spline -ott spline ;

parentConstraint -mo {$name + "_lShoulderFKC"} {$name + "_lShoulderJFK"};
parentConstraint -mo {$name + "_lShoulderFKC"} {$name + "_lElbowFKCG"};

parentConstraint -mo {$name + "_lElbowFKC"} {$name + "_lElbowJFK"};
parentConstraint -mo {$name + "_lElbowFKC"} {$name + "_lWristFKCG"};

parentConstraint -mo {$name + "_lWristFKC"} {$name + "_lWristJFK"};
setAttr {$name + "_lWristJFK_parentConstraint1.interpType"} 2;

//CONNECT SCALE TO FK CONTROLS
connectAttr -f {$name + "_lShoulderFKC.scaleX"} {$name + "_lShoulderJFK.scaleX"};
connectAttr -f {$name + "_lShoulderFKC.scaleX"} {$name + "_lElbowFKC.scaleX"};
connectAttr -f {$name + "_lShoulderFKC.scaleX"} {$name + "_lElbowJFK.scaleX"};

//IK
select {$name + "_lShoulderJIK.rotatePivot"} {$name + "_lWristJIK.rotatePivot"} ;
ikHandle -n {$name + "_lArmIKHandle"} -sol ikRPsolver;
poleVectorConstraint {$name + "_lElbowIKC"} {$name + "_lArmIKHandle"} ;
pointConstraint {$name + "_lWristIKC"} {$name + "_lArmIKHandle"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z -weight 1 {$name + "_lWristIKC"} {$name + "_lWristJIK"};
setAttr {$name + "_lWristJIK_parentConstraint1.interpType"} 2;

//LEFT IK WRIST DYNAMIC CONSTRAINTS
connectAttr -f {$name + "_lWristIKC.Hips"} {$name + "_lWristIKCG_parentConstraint1." + $name + "_MainHipCW1"};
connectAttr -f {$name + "_lWristIKC.Chest"} {$name + "_lWristIKCG_parentConstraint1." + $name + "_SpineTopIKCW2"};
connectAttr -f {$name + "_lWristIKC.Head"} {$name + "_lWristIKCG_parentConstraint1." + $name + "_HeadCW3"};

shadingNode -asUtility plusMinusAverage -n {$name + "_lWristIKParent_PMA"};
connectAttr -f {$name + "_lWristIKC.Hips"} {$name + "_lWristIKParent_PMA.input1D[0]"};
connectAttr -f {$name + "_lWristIKC.Chest"} {$name + "_lWristIKParent_PMA.input1D[1]"};
connectAttr -f {$name + "_lWristIKC.Head"} {$name + "_lWristIKParent_PMA.input1D[2]"};

shadingNode -asUtility condition -n {$name + "_lWristIKParent_Condition"};
setAttr {$name + "_lWristIKParent_Condition.operation"} 4;
setAttr {$name + "_lWristIKParent_Condition.secondTerm"} 1;
connectAttr -f {$name + "_lWristIKParent_PMA.output1D"} {$name + "_lWristIKParent_Condition.firstTerm"};
connectAttr -force {$name + "_lWristIKParent_PMA.output1D"} {$name + "_lWristIKParent_Condition.colorIfTrueR"};

shadingNode -asUtility reverse -n {$name + "_lWristIKParent_Reverse"};
connectAttr -f {$name + "_lWristIKParent_Condition.outColorR"} {$name + "_lWristIKParent_Reverse.inputX"};
connectAttr -f {$name + "_lWristIKParent_Reverse.outputX"} {$name + "_lWristIKCG_parentConstraint1." + $name + "_MainCW0"};


//LEFT FINGERS
if (`objExists ($name + "_lThumbJ1")`)
{
parentConstraint -mo {$name + "_lWristJ"} {$name + "_lThumbJ1CG"};

parentConstraint -mo {$name + "_lThumbJ1C"} {$name + "_lThumbJ1"};
parentConstraint -mo {$name + "_lThumbJ1C"} {$name + "_lThumbJ2CG"};

parentConstraint -mo {$name + "_lThumbJ2C"} {$name + "_lThumbJ2"};
parentConstraint -mo {$name + "_lThumbJ2C"} {$name + "_lThumbJ3CG"};

parentConstraint -mo {$name + "_lThumbJ3C"} {$name + "_lThumbJ3"};
}

if (`objExists ($name + "_lFinger1J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger1J1CG"};
parentConstraint -mo {$name + "_lFinger1J1C"} {$name + "_lFinger1J1"};
parentConstraint -mo {$name + "_lFinger1J1C"} {$name + "_lFinger1J2CG"};
parentConstraint -mo {$name + "_lFinger1J2C"} {$name + "_lFinger1J2"};
parentConstraint -mo {$name + "_lFinger1J2C"} {$name + "_lFinger1J3CG"};
parentConstraint -mo {$name + "_lFinger1J3C"} {$name + "_lFinger1J3"};
}

if (`objExists ($name + "_lFinger2J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger2J1CG"};
parentConstraint -mo {$name + "_lFinger2J1C"} {$name + "_lFinger2J1"};
parentConstraint -mo {$name + "_lFinger2J1C"} {$name + "_lFinger2J2CG"};
parentConstraint -mo {$name + "_lFinger2J2C"} {$name + "_lFinger2J2"};
parentConstraint -mo {$name + "_lFinger2J2C"} {$name + "_lFinger2J3CG"};
parentConstraint -mo {$name + "_lFinger2J3C"} {$name + "_lFinger2J3"};
}

if (`objExists ($name + "_lFinger3J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger3J1CG"};
parentConstraint -mo {$name + "_lFinger3J1C"} {$name + "_lFinger3J1"};
parentConstraint -mo {$name + "_lFinger3J1C"} {$name + "_lFinger3J2CG"};
parentConstraint -mo {$name + "_lFinger3J2C"} {$name + "_lFinger3J2"};
parentConstraint -mo {$name + "_lFinger3J2C"} {$name + "_lFinger3J3CG"};
parentConstraint -mo {$name + "_lFinger3J3C"} {$name + "_lFinger3J3"};
}

if (`objExists ($name + "_lFinger4J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger4J1CG"};
parentConstraint -mo {$name + "_lFinger4J1C"} {$name + "_lFinger4J1"};
parentConstraint -mo {$name + "_lFinger4J1C"} {$name + "_lFinger4J2CG"};
parentConstraint -mo {$name + "_lFinger4J2C"} {$name + "_lFinger4J2"};
parentConstraint -mo {$name + "_lFinger4J2C"} {$name + "_lFinger4J3CG"};
parentConstraint -mo {$name + "_lFinger4J3C"} {$name + "_lFinger4J3"};
}

if (`objExists ($name + "_lFinger5J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger5J1CG"};
parentConstraint -mo {$name + "_lFinger5J1C"} {$name + "_lFinger5J1"};
parentConstraint -mo {$name + "_lFinger5J1C"} {$name + "_lFinger5J2CG"};
parentConstraint -mo {$name + "_lFinger5J2C"} {$name + "_lFinger5J2"};
parentConstraint -mo {$name + "_lFinger5J2C"} {$name + "_lFinger5J3CG"};
parentConstraint -mo {$name + "_lFinger5J3C"} {$name + "_lFinger5J3"};
}

if (`objExists ($name + "_lFinger6J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger6J1CG"};
parentConstraint -mo {$name + "_lFinger6J1C"} {$name + "_lFinger6J1"};
parentConstraint -mo {$name + "_lFinger6J1C"} {$name + "_lFinger6J2CG"};
parentConstraint -mo {$name + "_lFinger6J2C"} {$name + "_lFinger6J2"};
parentConstraint -mo {$name + "_lFinger6J2C"} {$name + "_lFinger6J3CG"};
parentConstraint -mo {$name + "_lFinger6J3C"} {$name + "_lFinger6J3"};
}

if (`objExists ($name + "_lFinger7J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger7J1CG"};
parentConstraint -mo {$name + "_lFinger7J1C"} {$name + "_lFinger7J1"};
parentConstraint -mo {$name + "_lFinger7J1C"} {$name + "_lFinger7J2CG"};
parentConstraint -mo {$name + "_lFinger7J2C"} {$name + "_lFinger7J2"};
parentConstraint -mo {$name + "_lFinger7J2C"} {$name + "_lFinger7J3CG"};
parentConstraint -mo {$name + "_lFinger7J3C"} {$name + "_lFinger7J3"};
}

if (`objExists ($name + "_lFinger8J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger8J1CG"};
parentConstraint -mo {$name + "_lFinger8J1C"} {$name + "_lFinger8J1"};
parentConstraint -mo {$name + "_lFinger8J1C"} {$name + "_lFinger8J2CG"};
parentConstraint -mo {$name + "_lFinger8J2C"} {$name + "_lFinger8J2"};
parentConstraint -mo {$name + "_lFinger8J2C"} {$name + "_lFinger8J3CG"};
parentConstraint -mo {$name + "_lFinger8J3C"} {$name + "_lFinger8J3"};
}

if (`objExists ($name + "_lFinger9J1")`)
{
parentConstraint -mo {$name + "_lPalmC"} {$name + "_lFinger9J1CG"};
parentConstraint -mo {$name + "_lFinger9J1C"} {$name + "_lFinger9J1"};
parentConstraint -mo {$name + "_lFinger9J1C"} {$name + "_lFinger9J2CG"};
parentConstraint -mo {$name + "_lFinger9J2C"} {$name + "_lFinger9J2"};
parentConstraint -mo {$name + "_lFinger9J2C"} {$name + "_lFinger9J3CG"};
parentConstraint -mo {$name + "_lFinger9J3C"} {$name + "_lFinger9J3"};
}

//LEFT LEG
parentConstraint -mo {$name + "_MainHipC"} {$name + "_ROOTJ"};
parentConstraint -mo {$name + "_MainHipC"} {$name + "_lHipFKCG"};

parentConstraint -mo {$name + "_lHipFKC"} {$name + "_lHipJFK"};
parentConstraint -mo {$name + "_lHipFKC"} {$name + "_lKneeFKCG"};

parentConstraint -mo {$name + "_lKneeFKC"} {$name + "_lKneeJFK"};
parentConstraint -mo {$name + "_lKneeFKC"} {$name + "_lAnkleFKCG"};

parentConstraint -mo {$name + "_lAnkleFKC"} {$name + "_lAnkleJFK"};
parentConstraint -mo {$name + "_lAnkleFKC"} {$name + "_lBallFKCG"};

parentConstraint -mo {$name + "_lBallFKC"} {$name + "_lBallJFK"};


//IK
spaceLocator -n {$name + "_lFootBallPivot"};
select -add {$name + "_lBallJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
rotate -r 0 90 0;
duplicate -rr -n {$name + "_lFootToePivot"};

select {$name + "_lAnkleJIK.rotatePivot"} {$name + "_lBallJIK.rotatePivot"} ; 
ikHandle -n {$name + "_lBallIKHandle"} -sol ikSCsolver;
parent {$name + "_lBallIKHandle"} {$name + "_lFootBallPivot"};
select {$name + "_lBallJIK.rotatePivot"} {$name + "_lToeJIK.rotatePivot"} ; 
ikHandle -n {$name + "_lToeIKHandle"} -sol ikSCsolver;
parent {$name + "_lToeIKHandle"} {$name + "_lFootToePivot"};

spaceLocator -n {$name + "_lBallSwivel"};
pointConstraint {$name + "_lBallJ"} {$name + "_lBallSwivel"};
delete {$name + "_lBallSwivel_pointConstraint1"};
parent {$name + "_lBallSwivel"} {$name + "_lToeIKC"};
makeIdentity -apply false -r 1 {$name + "_lBallSwivel"};

parent {$name + "_lFootInTilt"} {$name + "_lBallSwivel"};
parent {$name + "_lFootOutTilt"} {$name + "_lFootInTilt"};
parent {$name + "_lFootHeelPivot"} {$name + "_lFootOutTilt"};
parent {$name + "_lFootBallPivot"} {$name + "_lFootToePivot"} {$name + "_lFootHeelPivot"};
makeIdentity -apply true -t 1 -r 0 -s 1 {$name + "_lFootInTilt"};
parentConstraint -mo {$name + "_lFootIKC"} {$name + "_lToeIKCG"};

setAttr -l 1 -k 1 {$name + "_lHipJIK.rx"};
setAttr -l 1 -k 1 {$name + "_lHipJIK.ry"};
setAttr -l 1 -k 1 {$name + "_lHipJIK.rz"};
setAttr -l 1 -k 1 {$name + "_lKneeJIK.rx"};
setAttr -l 1 -k 1 {$name + "_lKneeJIK.ry"};
setAttr -l 1 -k 1 {$name + "_lKneeJIK.rz"};
select {$name + "_lHipJIK.rotatePivot"} {$name + "_lAnkleJIK.rotatePivot"} ;
ikHandle -n {$name + "_lLegIKHandle"} -sol ikRPsolver;
setAttr -l 0 -k 1 {$name + "_lHipJIK.rx"};
setAttr -l 0 -k 1 {$name + "_lHipJIK.ry"};
setAttr -l 0 -k 1 {$name + "_lHipJIK.rz"};
setAttr -l 0 -k 1 {$name + "_lKneeJIK.rx"};
setAttr -l 0 -k 1 {$name + "_lKneeJIK.ry"};
setAttr -l 0 -k 1 {$name + "_lKneeJIK.rz"};
select {$name + "_lKneeIKC"} {$name + "_lLegIKHandle"} ;
poleVectorConstraint;
parent {$name + "_lLegIKHandle"} {$name + "_lFootBallPivot"};

//////////////////////////////////RIGHT LEG IKFK SWITCH CONTROL///////////////////////////////////////////
curve -n {$name + "_lLegSwitchC"} -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2
-p 2 0 -2 -p 0 0 0 -p 0 2 -2 -p 0 1 -2 -p 0 1 -5 -p 0 -1 -5 -p 0 -1 -2
-p 0 -2 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10
-k 11 -k 12 -k 13 -k 14 ;
select {$name + "_lLegSwitchC"};
move 0 0 -1.5;

scale -r 0.2 0.2 0.2 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
group -n {$name + "_lLegSwitchCG"}; xform -os -piv 0 0 0;
pointConstraint {$name + "_lAnkleJ"} {$name + "_lLegSwitchCG"};
delete {$name + "_lLegSwitchCG_pointConstraint1"};


aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 1 0 0 -worldUpType "none"
-skip x -skip z {$name + "_lBallJ"} {$name + "_lLegSwitchCG"};
delete {$name + "_lLegSwitchCG_aimConstraint1"};
$lKneeLength = `xform -q -t {$name + "_lKneeJ"}`;
$lAnkleLength = `xform -q -t {$name + "_lAnkleJ"}`;
$lLegLength[0] = (($lKneeLength[0] + $lAnkleLength[0]) /2);

setAttr ({$name + "_lLegSwitchCG.scale"}, (($lBallLocation[0]+$lToeLocation[0])/4), (($lBallLocation[0]+$lToeLocation[0])/4), (($lBallLocation[0]+$lToeLocation[0])/4));
makeIdentity -apply true -t 1 -s 1;

addAttr -ln "SwitchIkFk"  -at double  -min 0 -max 1 -dv 0 {$name + "_lLegSwitchC"};
setAttr -e-k true {$name + "_lLegSwitchC.SwitchIkFk"};
addAttr -ln "AutoVolume"  -at double  -min 0 -max 1 -dv 1 {$name + "_lLegSwitchC"};
setAttr -e-k true {$name + "_lLegSwitchC.AutoVolume"};

parentConstraint -mo {$name + "_lAnkleJ"} {$name + "_lLegSwitchCG"};

//NODES
spaceLocator -n {$name + "_lLegLengthOriginLctr"};
pointConstraint {$name + "_lHipJIK"} {$name + "_lLegLengthOriginLctr"};

spaceLocator -n {$name + "_lLegLengthEndLctr"};
parent {$name + "_lLegLengthEndLctr"} {$name + "_lLegLengthOriginLctr"};

pointConstraint {$name + "_lFootIKC"} {$name + "_lLegLengthEndLctr"};
delete {$name + "_lLegLengthEndLctr_pointConstraint1"};
parentConstraint -mo {$name + "_lFootBallPivot"} {$name + "_lLegLengthEndLctr"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lFootBallPivot"} {$name + "_lLegLengthOriginLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_lLegLength_MD"};
setAttr {$name + "_lLegLength_MD.operation"} 2;
connectAttr -f {$name + "_lLegLengthEndLctr.translateY"} {$name + "_lLegLength_MD.input1X"};
setAttr {$name + "_lLegLength_MD.input2X"} ($lLegLength[0]*2);

shadingNode -asUtility condition -n {$name + "_lLegLength_Condition"};
connectAttr -f {$name + "_lLegLength_MD.outputX"} {$name + "_lLegLength_Condition.firstTerm"};
setAttr {$name + "_lLegLength_Condition.secondTerm"} 1;
setAttr {$name + "_lLegLength_Condition.operation"} 2;
connectAttr -f {$name + "_lLegLength_MD.outputX"} {$name + "_lLegLength_Condition.colorIfTrueR"};

shadingNode -asUtility blendColors -n {$name + "_lLegLength_Blnd"};
connectAttr -f {$name + "_lLegLength_Condition.outColorR"} {$name + "_lLegLength_Blnd.color1R"};
setAttr {$name + "_lLegLength_Blnd.color2"} -type double3 1 0 1 ;


//LEFT LEG IK LOCK

//LEFT IK LOCK LOCATORS
spaceLocator -n {$name + "_lHipIKLockLctr"};
spaceLocator -n {$name + "_lKneeIKLockLctr"};
spaceLocator -n {$name + "_lAnkleIKLockLctr"};
spaceLocator -n {$name + "_lKneeTargetLockLctr"};
parent {$name + "_lKneeIKLockLctr"} {$name + "_lHipIKLockLctr"};
parent {$name + "_lAnkleIKLockLctr"} {$name + "_lKneeIKLockLctr"};
parent {$name + "_lKneeTargetLockLctr"} {$name + "_lFootBallPivot"};
pointConstraint {$name + "_lHipJIK"} {$name + "_lHipIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lKneeIKC"} {$name + "_lHipIKLockLctr"};
pointConstraint {$name + "_lKneeIKC"} {$name + "_lKneeIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_lKneeTargetLockLctr"} {$name + "_lKneeIKLockLctr"};
pointConstraint {$name + "_lFootIKC"} {$name + "_lAnkleIKLockLctr"};
delete {$name + "_lAnkleIKLockLctr_pointConstraint1"};
parentConstraint -mo {$name + "_lFootBallPivot"} {$name + "_lAnkleIKLockLctr"};
pointConstraint {$name + "_lFootIKC"} {$name + "_lKneeTargetLockLctr"};
delete {$name + "_lKneeTargetLockLctr_pointConstraint1"};
parentConstraint -mo {$name + "_lFootBallPivot"} {$name + "_lKneeTargetLockLctr"};


shadingNode -asUtility multiplyDivide -n {$name + "_lHipLockLength_MD"};
setAttr {$name + "_lHipLockLength_MD.operation"} 2;
connectAttr -f {$name + "_lKneeIKLockLctr.translateX"} {$name + "_lHipLockLength_MD.input1X"};
setAttr {$name + "_lHipLockLength_MD.input2X"} $lKneeLength[0];

shadingNode -asUtility multiplyDivide -n {$name + "_lKneeLockLength_MD"};
setAttr {$name + "_lKneeLockLength_MD.operation"} 2;
connectAttr -f {$name + "_lAnkleIKLockLctr.translateX"} {$name + "_lKneeLockLength_MD.input1X"};
setAttr {$name + "_lKneeLockLength_MD.input2X"} $lAnkleLength[0];

shadingNode -asUtility blendColors -n {$name + "_lHipLock_Blnd"};
connectAttr -f {$name + "_lHipLockLength_MD.outputX"} {$name + "_lHipLock_Blnd.color1R"};
connectAttr -f {$name + "_lLegLength_Blnd.outputR"} {$name + "_lHipLock_Blnd.color2R"};

shadingNode -asUtility blendColors -n {$name + "_lKneeLock_Blnd"};
connectAttr -f {$name + "_lKneeLockLength_MD.outputX"} {$name + "_lKneeLock_Blnd.color1R"};
connectAttr -f {$name + "_lLegLength_Blnd.outputR"} {$name + "_lKneeLock_Blnd.color2R"};

//ADD STRETCH TO IK FOOT CONTROL
addAttr -ln "Stretch"  -at double  -min 0 -max 1 -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.Stretch"};
connectAttr -f {$name + "_lFootIKC.Stretch"} {$name + "_lLegLength_Blnd.blender"};

//ADD ELBOW LOCK TO IK FOOT CONTROL
addAttr -ln "KneeLock"  -at double  -min 0 -max 1 -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.KneeLock"};
connectAttr -f {$name + "_lFootIKC.KneeLock"} {$name + "_lHipLock_Blnd.blender"};
connectAttr -f {$name + "_lFootIKC.KneeLock"} {$name + "_lKneeLock_Blnd.blender"};

connectAttr -f {$name + "_lHipLock_Blnd.outputR"} {$name + "_lHipJIK.scaleX"};
connectAttr -f {$name + "_lKneeLock_Blnd.outputR"} {$name + "_lKneeJIK.scaleX"};

////////////////////////////////////RIGHT SIDE////////////////////////////////////


//RIGHT ARM
parentConstraint -mo {$name + "_SpineTopIKC"} {$name + "_rClavicleCG"};

//FK
parentConstraint -mo {$name + "_rClavicleC"} {$name + "_rClavicleJ"};
parentConstraint -mo -skipRotate x -skipRotate y -skipRotate z {$name + "_rClavicleC"} {$name + "_rShoulderFKCG"};
group -n {$name + "_rShoulderFKCG2"} {$name + "_rShoulderFKCG"};
$rShoulderLocation = `xform -q -ws -t {$name + "_rShoulderFKCG"}`;
move $rShoulderLocation[0] $rShoulderLocation[1] $rShoulderLocation[2] {$name + "_rShoulderFKCG2.scalePivot"} {$name + "_rShoulderFKCG2.rotatePivot"} ;
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_SpineTopIKC"} {$name + "_MainC"} {$name + "_rShoulderFKCG2"};
setAttr {$name + "_rShoulderFKCG2_parentConstraint1.interpType"} 2;
addAttr -ln "ShoulderOrient"  -at double  -min 0 -max 1 -dv 1 {$name + "_rShoulderFKC"};
setAttr -e-k true {$name + "_rShoulderFKC.ShoulderOrient"};
setAttr {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rShoulderFKC.ShoulderOrient"} {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"};
setDrivenKeyframe -currentDriver {$name + "_rShoulderFKC.ShoulderOrient"} {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"};
setAttr {$name + "_rShoulderFKC.ShoulderOrient"} 0;
setAttr {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"} 0;
setAttr {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rShoulderFKC.ShoulderOrient"} {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_SpineTopIKCW0"};
setDrivenKeyframe -currentDriver {$name + "_rShoulderFKC.ShoulderOrient"} {$name + "_rShoulderFKCG2_parentConstraint1." + $name + "_MainCW1"};
setAttr {$name + "_rShoulderFKC.ShoulderOrient"} 1;

selectKey -k -f 0 -f 1 {$name + "_rShoulderFKCG2_parentConstraint1_" + $name + "_SpineTopIKCW0"} ;
selectKey -add -k -f 0 -f 1 {$name + "_rShoulderFKCG2_parentConstraint1_" + $name + "_MainCW1"} ;
keyTangent -itt spline -ott spline ;

parentConstraint -mo {$name + "_rShoulderFKC"} {$name + "_rShoulderJFK"};
parentConstraint -mo {$name + "_rShoulderFKC"} {$name + "_rElbowFKCG"};

parentConstraint -mo {$name + "_rElbowFKC"} {$name + "_rElbowJFK"};
parentConstraint -mo {$name + "_rElbowFKC"} {$name + "_rWristFKCG"};

parentConstraint -mo {$name + "_rWristFKC"} {$name + "_rWristJFK"};
setAttr {$name + "_rWristJFK_parentConstraint1.interpType"} 2;

//CONNECT SCALE TO FK CONTROLS
connectAttr -f {$name + "_rShoulderFKC.scaleX"} {$name + "_rShoulderJFK.scaleX"};
connectAttr -f {$name + "_rShoulderFKC.scaleX"} {$name + "_rElbowFKC.scaleX"};
connectAttr -f {$name + "_rShoulderFKC.scaleX"} {$name + "_rElbowJFK.scaleX"};

//IK
select {$name + "_rShoulderJIK.rotatePivot"} {$name + "_rWristJIK.rotatePivot"} ;
ikHandle -n {$name + "_rArmIKHandle"} -sol ikRPsolver;
poleVectorConstraint {$name + "_rElbowIKC"} {$name + "_rArmIKHandle"} ;
pointConstraint {$name + "_rWristIKC"} {$name + "_rArmIKHandle"};
parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z {$name + "_rWristIKC"} {$name + "_rWristJIK"};
setAttr {$name + "_rWristJIK_parentConstraint1.interpType"} 2;

//RIGHT IK WRIST DYNAMIC CONSTRAINTS
connectAttr -f {$name + "_rWristIKC.Hips"} {$name + "_rWristIKCG_parentConstraint1." + $name + "_MainHipCW1"};
connectAttr -f {$name + "_rWristIKC.Chest"} {$name + "_rWristIKCG_parentConstraint1." + $name + "_SpineTopIKCW2"};
connectAttr -f {$name + "_rWristIKC.Head"} {$name + "_rWristIKCG_parentConstraint1." + $name + "_HeadCW3"};

shadingNode -asUtility plusMinusAverage -n {$name + "_rWristIKParent_PMA"};
connectAttr -f {$name + "_rWristIKC.Hips"} {$name + "_rWristIKParent_PMA.input1D[0]"};
connectAttr -f {$name + "_rWristIKC.Chest"} {$name + "_rWristIKParent_PMA.input1D[1]"};
connectAttr -f {$name + "_rWristIKC.Head"} {$name + "_rWristIKParent_PMA.input1D[2]"};

shadingNode -asUtility condition -n {$name + "_rWristIKParent_Condition"};
setAttr {$name + "_rWristIKParent_Condition.operation"} 4;
setAttr {$name + "_rWristIKParent_Condition.secondTerm"} 1;
connectAttr -f {$name + "_rWristIKParent_PMA.output1D"} {$name + "_rWristIKParent_Condition.firstTerm"};
connectAttr -force {$name + "_rWristIKParent_PMA.output1D"} {$name + "_rWristIKParent_Condition.colorIfTrueR"};

shadingNode -asUtility reverse -n {$name + "_rWristIKParent_Reverse"};
connectAttr -f {$name + "_rWristIKParent_Condition.outColorR"} {$name + "_rWristIKParent_Reverse.inputX"};
connectAttr -f {$name + "_rWristIKParent_Reverse.outputX"} {$name + "_rWristIKCG_parentConstraint1." + $name + "_MainCW0"};

//RIGHT FINGERS
if (`objExists ($name + "_rThumbJ1")`)
{
parentConstraint -mo {$name + "_rWristJ"} {$name + "_rThumbJ1CG"};

parentConstraint -mo {$name + "_rThumbJ1C"} {$name + "_rThumbJ1"};
parentConstraint -mo {$name + "_rThumbJ1C"} {$name + "_rThumbJ2CG"};

parentConstraint -mo {$name + "_rThumbJ2C"} {$name + "_rThumbJ2"};
parentConstraint -mo {$name + "_rThumbJ2C"} {$name + "_rThumbJ3CG"};

parentConstraint -mo {$name + "_rThumbJ3C"} {$name + "_rThumbJ3"};
}

if (`objExists ($name + "_rFinger1J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger1J1CG"};
parentConstraint -mo {$name + "_rFinger1J1C"} {$name + "_rFinger1J1"};
parentConstraint -mo {$name + "_rFinger1J1C"} {$name + "_rFinger1J2CG"};
parentConstraint -mo {$name + "_rFinger1J2C"} {$name + "_rFinger1J2"};
parentConstraint -mo {$name + "_rFinger1J2C"} {$name + "_rFinger1J3CG"};
parentConstraint -mo {$name + "_rFinger1J3C"} {$name + "_rFinger1J3"};
}

if (`objExists ($name + "_rFinger2J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger2J1CG"};
parentConstraint -mo {$name + "_rFinger2J1C"} {$name + "_rFinger2J1"};
parentConstraint -mo {$name + "_rFinger2J1C"} {$name + "_rFinger2J2CG"};
parentConstraint -mo {$name + "_rFinger2J2C"} {$name + "_rFinger2J2"};
parentConstraint -mo {$name + "_rFinger2J2C"} {$name + "_rFinger2J3CG"};
parentConstraint -mo {$name + "_rFinger2J3C"} {$name + "_rFinger2J3"};
}

if (`objExists ($name + "_rFinger3J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger3J1CG"};
parentConstraint -mo {$name + "_rFinger3J1C"} {$name + "_rFinger3J1"};
parentConstraint -mo {$name + "_rFinger3J1C"} {$name + "_rFinger3J2CG"};
parentConstraint -mo {$name + "_rFinger3J2C"} {$name + "_rFinger3J2"};
parentConstraint -mo {$name + "_rFinger3J2C"} {$name + "_rFinger3J3CG"};
parentConstraint -mo {$name + "_rFinger3J3C"} {$name + "_rFinger3J3"};
}

if (`objExists ($name + "_rFinger4J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger4J1CG"};
parentConstraint -mo {$name + "_rFinger4J1C"} {$name + "_rFinger4J1"};
parentConstraint -mo {$name + "_rFinger4J1C"} {$name + "_rFinger4J2CG"};
parentConstraint -mo {$name + "_rFinger4J2C"} {$name + "_rFinger4J2"};
parentConstraint -mo {$name + "_rFinger4J2C"} {$name + "_rFinger4J3CG"};
parentConstraint -mo {$name + "_rFinger4J3C"} {$name + "_rFinger4J3"};
}

if (`objExists ($name + "_rFinger5J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger5J1CG"};
parentConstraint -mo {$name + "_rFinger5J1C"} {$name + "_rFinger5J1"};
parentConstraint -mo {$name + "_rFinger5J1C"} {$name + "_rFinger5J2CG"};
parentConstraint -mo {$name + "_rFinger5J2C"} {$name + "_rFinger5J2"};
parentConstraint -mo {$name + "_rFinger5J2C"} {$name + "_rFinger5J3CG"};
parentConstraint -mo {$name + "_rFinger5J3C"} {$name + "_rFinger5J3"};
}

if (`objExists ($name + "_rFinger6J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger6J1CG"};
parentConstraint -mo {$name + "_rFinger6J1C"} {$name + "_rFinger6J1"};
parentConstraint -mo {$name + "_rFinger6J1C"} {$name + "_rFinger6J2CG"};
parentConstraint -mo {$name + "_rFinger6J2C"} {$name + "_rFinger6J2"};
parentConstraint -mo {$name + "_rFinger6J2C"} {$name + "_rFinger6J3CG"};
parentConstraint -mo {$name + "_rFinger6J3C"} {$name + "_rFinger6J3"};
}

if (`objExists ($name + "_rFinger7J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger7J1CG"};
parentConstraint -mo {$name + "_rFinger7J1C"} {$name + "_rFinger7J1"};
parentConstraint -mo {$name + "_rFinger7J1C"} {$name + "_rFinger7J2CG"};
parentConstraint -mo {$name + "_rFinger7J2C"} {$name + "_rFinger7J2"};
parentConstraint -mo {$name + "_rFinger7J2C"} {$name + "_rFinger7J3CG"};
parentConstraint -mo {$name + "_rFinger7J3C"} {$name + "_rFinger7J3"};
}

if (`objExists ($name + "_rFinger8J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger8J1CG"};
parentConstraint -mo {$name + "_rFinger8J1C"} {$name + "_rFinger8J1"};
parentConstraint -mo {$name + "_rFinger8J1C"} {$name + "_rFinger8J2CG"};
parentConstraint -mo {$name + "_rFinger8J2C"} {$name + "_rFinger8J2"};
parentConstraint -mo {$name + "_rFinger8J2C"} {$name + "_rFinger8J3CG"};
parentConstraint -mo {$name + "_rFinger8J3C"} {$name + "_rFinger8J3"};
}

if (`objExists ($name + "_rFinger9J1")`)
{
parentConstraint -mo {$name + "_rPalmC"} {$name + "_rFinger9J1CG"};
parentConstraint -mo {$name + "_rFinger9J1C"} {$name + "_rFinger9J1"};
parentConstraint -mo {$name + "_rFinger9J1C"} {$name + "_rFinger9J2CG"};
parentConstraint -mo {$name + "_rFinger9J2C"} {$name + "_rFinger9J2"};
parentConstraint -mo {$name + "_rFinger9J2C"} {$name + "_rFinger9J3CG"};
parentConstraint -mo {$name + "_rFinger9J3C"} {$name + "_rFinger9J3"};
}

//RIGHT LEG
parentConstraint -mo {$name + "_MainHipC"} {$name + "_rHipFKCG"};

parentConstraint -mo {$name + "_rHipFKC"} {$name + "_rHipJFK"};
parentConstraint -mo {$name + "_rHipFKC"} {$name + "_rKneeFKCG"};

parentConstraint -mo {$name + "_rKneeFKC"} {$name + "_rKneeJFK"};
parentConstraint -mo {$name + "_rKneeFKC"} {$name + "_rAnkleFKCG"};

parentConstraint -mo {$name + "_rAnkleFKC"} {$name + "_rAnkleJFK"};
parentConstraint -mo {$name + "_rAnkleFKC"} {$name + "_rBallFKCG"};

parentConstraint -mo {$name + "_rBallFKC"} {$name + "_rBallJFK"};


//IK
spaceLocator -n {$name + "_rFootBallPivot"};
select -add {$name + "_rBallJ"};
parent;
makeIdentity -apply false -t 1 -r 1 -s 1;
parent -w;
rotate -r 0 90 0;
duplicate -rr -n {$name + "_rFootToePivot"};

select {$name + "_rAnkleJIK.rotatePivot"} {$name + "_rBallJIK.rotatePivot"} ; 
ikHandle -n {$name + "_rBallIKHandle"} -sol ikSCsolver;
select {$name + "_rBallJIK.rotatePivot"} {$name + "_rToeJIK.rotatePivot"} ; 
ikHandle -n {$name + "_rToeIKHandle"} -sol ikSCsolver;

spaceLocator -n {$name + "_rBallSwivel"};
pointConstraint {$name + "_rBallJ"} {$name + "_rBallSwivel"};
delete {$name + "_rBallSwivel_pointConstraint1"};
parent {$name + "_rBallSwivel"} {$name + "_rToeIKC"};
makeIdentity -apply false -r 1 {$name + "_rBallSwivel"};

parent {$name + "_rFootInTilt"} {$name + "_rBallSwivel"};
parent {$name + "_rFootOutTilt"} {$name + "_rFootInTilt"};
parent {$name + "_rFootHeelPivot"} {$name + "_rFootOutTilt"};
parent {$name + "_rFootBallPivot"} {$name + "_rFootToePivot"} {$name + "_rFootHeelPivot"};
makeIdentity -apply true -t 1 -s 1 {$name + "_rFootInTilt"};
makeIdentity -apply false -r 1 {$name + "_rFootToePivot"} {$name + "_rFootBallPivot"};
parent {$name + "_rToeIKHandle"} {$name + "_rFootToePivot"};
parent {$name + "_rBallIKHandle"} {$name + "_rFootBallPivot"};
parentConstraint -mo {$name + "_rFootIKC"} {$name + "_rToeIKCG"};

select {$name + "_rHipJIK.rotatePivot"} {$name + "_rAnkleJIK.rotatePivot"} ;
ikHandle -n {$name + "_rLegIKHandle"} -sol ikRPsolver;
select {$name + "_rKneeIKC"} {$name + "_rLegIKHandle"} ;
poleVectorConstraint;
parent {$name + "_rLegIKHandle"} {$name + "_rFootBallPivot"};

//////////////////////////////////RIGHT LEG IKFK SWITCH CONTROL///////////////////////////////////////////
curve -n {$name + "_rLegSwitchC"} -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2
-p 2 0 -2 -p 0 0 0 -p 0 2 -2 -p 0 1 -2 -p 0 1 -5 -p 0 -1 -5 -p 0 -1 -2
-p 0 -2 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10
-k 11 -k 12 -k 13 -k 14 ;
move 0 0 -1.5 {$name + "_rLegSwitchC"};

scale -r 0.2 0.2 0.2 ;
makeIdentity -apply true -t 1 -r 1 -s 1;
group -n {$name + "_rLegSwitchCG"}; xform -os -piv 0 0 0;
pointConstraint {$name + "_rAnkleJ"} {$name + "_rLegSwitchCG"};
delete {$name + "_rLegSwitchCG_pointConstraint1"};

aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 1 0 0 -worldUpType "none"
-skip x -skip z {$name + "_rBallJ"} {$name + "_rLegSwitchCG"};
delete {$name + "_rLegSwitchCG_aimConstraint1"};
$rKneeLength = `xform -q -t {$name + "_rKneeJ"}`;
$rAnkleLength = `xform -q -t {$name + "_rAnkleJ"}`;
$rLegLength[0] = (($rKneeLength[0] + $rAnkleLength[0]) /2);

setAttr ({$name + "_rLegSwitchCG.scale"}, (($rBallLocation[0]+$rToeLocation[0])/4), (($rBallLocation[0]+$rToeLocation[0])/4), (($rBallLocation[0]+$rToeLocation[0])/4));
rotate -r 0 180 0 {$name + "_rLegSwitchCG"};
makeIdentity -apply true -t 1 -s 1;

addAttr -ln "SwitchIkFk"  -at double  -min 0 -max 1 -dv 0 {$name + "_rLegSwitchC"};
setAttr -e-k true {$name + "_rLegSwitchC.SwitchIkFk"};
addAttr -ln "AutoVolume"  -at double  -min 0 -max 1 -dv 1 {$name + "_rLegSwitchC"};
setAttr -e-k true {$name + "_rLegSwitchC.AutoVolume"};

parentConstraint -mo {$name + "_rAnkleJ"} {$name + "_rLegSwitchCG"};

//NODES
spaceLocator -n {$name + "_rLegLengthOriginLctr"};
pointConstraint {$name + "_rHipJIK"} {$name + "_rLegLengthOriginLctr"};

spaceLocator -n {$name + "_rLegLengthEndLctr"};
parent {$name + "_rLegLengthEndLctr"} {$name + "_rLegLengthOriginLctr"};

pointConstraint {$name + "_rFootIKC"} {$name + "_rLegLengthEndLctr"};
delete {$name + "_rLegLengthEndLctr_pointConstraint1"};
parentConstraint -mo {$name + "_rFootBallPivot"} {$name + "_rLegLengthEndLctr"};
aimConstraint -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rFootBallPivot"} {$name + "_rLegLengthOriginLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_rLegLength_MD"};
setAttr {$name + "_rLegLength_MD.operation"} 2;
connectAttr -f {$name + "_rLegLengthEndLctr.translateY"} {$name + "_rLegLength_MD.input1X"};
setAttr {$name + "_rLegLength_MD.input2X"} ($rLegLength[0]* -2);

shadingNode -asUtility condition -n {$name + "_rLegLength_Condition"};
connectAttr -f {$name + "_rLegLength_MD.outputX"} {$name + "_rLegLength_Condition.firstTerm"};
setAttr {$name + "_rLegLength_Condition.secondTerm"} 1;
setAttr {$name + "_rLegLength_Condition.operation"} 2;
connectAttr -f {$name + "_rLegLength_MD.outputX"} {$name + "_rLegLength_Condition.colorIfTrueR"};

shadingNode -asUtility blendColors -n {$name + "_rLegLength_Blnd"};
connectAttr -f {$name + "_rLegLength_Condition.outColorR"} {$name + "_rLegLength_Blnd.color1R"};
setAttr {$name + "_rLegLength_Blnd.color2"} -type double3 1 0 1 ;

//RIGHT LEG IK LOCK

//RIGHT IK LOCK LOCATORS
spaceLocator -n {$name + "_rHipIKLockLctr"};
spaceLocator -n {$name + "_rKneeIKLockLctr"};
spaceLocator -n {$name + "_rAnkleIKLockLctr"};
spaceLocator -n {$name + "_rKneeTargetLockLctr"};
parent {$name + "_rKneeIKLockLctr"} {$name + "_rHipIKLockLctr"};
parent {$name + "_rAnkleIKLockLctr"} {$name + "_rKneeIKLockLctr"};
parent {$name + "_rKneeTargetLockLctr"} {$name + "_rFootBallPivot"};
pointConstraint {$name + "_rHipJIK"} {$name + "_rHipIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rKneeIKC"} {$name + "_rHipIKLockLctr"};
pointConstraint {$name + "_rKneeIKC"} {$name + "_rKneeIKLockLctr"};
aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "none" {$name + "_rKneeTargetLockLctr"} {$name + "_rKneeIKLockLctr"};
pointConstraint {$name + "_rFootIKC"} {$name + "_rAnkleIKLockLctr"};
delete {$name + "_rAnkleIKLockLctr_pointConstraint1"};
parentConstraint -mo {$name + "_rFootBallPivot"} {$name + "_rAnkleIKLockLctr"};
pointConstraint {$name + "_rFootIKC"} {$name + "_rKneeTargetLockLctr"};
delete {$name + "_rKneeTargetLockLctr_pointConstraint1"};
parentConstraint -mo {$name + "_rFootBallPivot"} {$name + "_rKneeTargetLockLctr"};

shadingNode -asUtility multiplyDivide -n {$name + "_rHipLockLength_MD"};
setAttr {$name + "_rHipLockLength_MD.operation"} 2;
connectAttr -f {$name + "_rKneeIKLockLctr.translateX "}{$name + "_rHipLockLength_MD.input1X"};
setAttr {$name + "_rHipLockLength_MD.input2X"} ($rKneeLength[0]*-1);

shadingNode -asUtility multiplyDivide -n {$name + "_rKneeLockLength_MD"};
setAttr {$name + "_rKneeLockLength_MD.operation"} 2;
connectAttr -f {$name + "_rAnkleIKLockLctr.translateX"} {$name + "_rKneeLockLength_MD.input1X"};
setAttr {$name + "_rKneeLockLength_MD.input2X"} ($rAnkleLength[0] * -1);

shadingNode -asUtility blendColors -n {$name + "_rHipLock_Blnd"};
connectAttr -f {$name + "_rHipLockLength_MD.outputX"} {$name + "_rHipLock_Blnd.color1R"};
connectAttr -f {$name + "_rLegLength_Blnd.outputR"} {$name + "_rHipLock_Blnd.color2R"};

shadingNode -asUtility blendColors -n {$name + "_rKneeLock_Blnd"};
connectAttr -f {$name + "_rKneeLockLength_MD.outputX"} {$name + "_rKneeLock_Blnd.color1R"};
connectAttr -f {$name + "_rLegLength_Blnd.outputR"} {$name + "_rKneeLock_Blnd.color2R"};

//ADD STRETCH TO IK FOOT CONTROL
addAttr -ln "Stretch"  -at double  -min 0 -max 1 -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.Stretch"};
connectAttr -f {$name + "_rFootIKC.Stretch"} {$name + "_rLegLength_Blnd.blender"};

//ADD ELBOW LOCK TO IK FOOT CONTROL
addAttr -ln "KneeLock"  -at double  -min 0 -max 1 -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.KneeLock"};
connectAttr -f {$name + "_rFootIKC.KneeLock"} {$name + "_rHipLock_Blnd.blender"};
connectAttr -f {$name + "_rFootIKC.KneeLock"} {$name + "_rKneeLock_Blnd.blender"};

connectAttr -f {$name + "_rHipLock_Blnd.outputR"} {$name + "_rHipJIK.scaleX"};
connectAttr -f {$name + "_rKneeLock_Blnd.outputR"} {$name + "_rKneeJIK.scaleX"};


//CONNECT IK AND FK JOINTS TO ORIGINALS
//LEFT SHOULDER
shadingNode -asUtility blendColors -n {$name + "_lShoulderJIKFK_BlndScale"};
connectAttr -f {$name + "_lShoulderJFK.scale"} {$name + "_lShoulderJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_lShoulderJIK.scale"} {$name + "_lShoulderJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lShoulderJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_lShoulderVolume_MD"};
setAttr {$name + "_lShoulderVolume_MD.input1X"} 1;
setAttr {$name + "_lShoulderVolume_MD.operation"} 2;
connectAttr -f {$name + "_lShoulderJIKFK_BlndScale.outputR"} {$name + "_lShoulderVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_lShoulderJIKFK_AutoBlnd"};
setAttr {$name + "_lShoulderJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_lShoulderVolume_MD.outputX"} {$name + "_lShoulderJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_lShoulderJIKFK_AutoBlnd.outputR"} {$name + "_lShoulderJ.scaleY"};
connectAttr -f {$name + "_lShoulderJIKFK_AutoBlnd.outputR"} {$name + "_lShoulderJ.scaleZ"};
connectAttr -f {$name + "_lArmSwitchC.AutoVolume"} {$name + "_lShoulderJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n  {$name + "_lShoulderJIKFK_BlndRotate"};
connectAttr -f {$name + "_lShoulderJFK.rotate"} {$name + "_lShoulderJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lShoulderJIK.rotate"} {$name + "_lShoulderJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lShoulderJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lShoulderJIKFK_BlndScale.outputR"} {$name + "_lShoulderJ.scaleX"};
connectAttr -f {$name + "_lShoulderJIKFK_BlndRotate.output"} {$name + "_lShoulderJ.rotate"};


//LEFT ELBOW
shadingNode -asUtility blendColors -n {$name + "_lElbowJIKFK_BlndScale"};
connectAttr -f {$name + "_lElbowJFK.scale"} {$name + "_lElbowJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_lElbowJIK.scale"} {$name + "_lElbowJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lElbowJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_lElbowVolume_MD"};
setAttr {$name + "_lElbowVolume_MD.input1X"} 1;
setAttr {$name + "_lElbowVolume_MD.operation"} 2;
connectAttr -f {$name + "_lElbowJIKFK_BlndScale.outputR"} {$name + "_lElbowVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_lElbowJIKFK_AutoBlnd"};
setAttr {$name + "_lElbowJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_lElbowVolume_MD.outputX"} {$name + "_lElbowJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_lElbowJIKFK_AutoBlnd.outputR"} {$name + "_lElbowJ.scaleY"};
connectAttr -f {$name + "_lElbowJIKFK_AutoBlnd.outputR"} {$name + "_lElbowJ.scaleZ"};
connectAttr -f {$name + "_lArmSwitchC.AutoVolume"} {$name + "_lElbowJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n {$name + "_lElbowJIKFK_BlndRotate"};
connectAttr -f {$name + "_lElbowJFK.rotate"} {$name + "_lElbowJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lElbowJIK.rotate"} {$name + "_lElbowJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lElbowJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lElbowJIKFK_BlndScale.outputR"} {$name + "_lElbowJ.scaleX"};
connectAttr -f {$name + "_lElbowJIKFK_BlndRotate.output"} {$name + "_lElbowJ.rotate"};


//LEFT FOREARM
connectAttr -f {$name + "_lElbowJIKFK_BlndScale.outputR"} {$name + "_lForearmJ.scaleX"};
connectAttr -f {$name + "_lElbowVolume_MD.outputX"} {$name + "_lForearmJ.scaleY"};
connectAttr -f {$name + "_lElbowVolume_MD.outputX"} {$name + "_lForearmJ.scaleZ"};
connectAttr -f {$name + "_lWristJG1.rotateX"} {$name + "_lForearmJ.rotateX"};

//LEFT WRIST
orientConstraint -mo {$name + "_lWristJFK"} {$name + "_lWristJIKDummy"} {$name + "_lWristJG1"};
setAttr {$name + "_lWristJG1_orientConstraint1.interpType"} 2;
setAttr {$name + "_lArmSwitchC.SwitchIkFk"} 0;
setAttr {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJIKDummyW1"} 0;
setAttr {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJFKW0"} 0;
setAttr {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJIKDummyW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJFKW0"};
setDrivenKeyframe -currentDriver {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJIKDummyW1"};
setAttr {$name + "_lArmSwitchC.SwitchIkFk"} 1;
setAttr {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJFKW0"} 1;
setAttr {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJIKDummyW1"} 0;
	setDrivenKeyframe -currentDriver {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJFKW0"};
setDrivenKeyframe -currentDriver {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "_lWristJG1_orientConstraint1." + $name + "_lWristJIKDummyW1"};

selectKey -k -f 0 -f 1 {$name + "_lWristJG1_orientConstraint1_" + $name + "_lWristJIKDummyW1"} ;
selectKey -add -k -f 0 -f 1 {$name + "_lWristJG1_orientConstraint1_" + $name + "_lWristJFKW0"} ;
keyTangent -itt spline -ott spline ;


//LEFT HIP
shadingNode -asUtility blendColors -n {$name + "_lHipJIKFK_BlndScale"};
connectAttr -f {$name + "_lHipJFK.scale"} {$name + "_lHipJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_lHipJIK.scale"} {$name + "_lHipJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lHipJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_lHipVolume_MD"};
setAttr {$name + "_lHipVolume_MD.input1X"} 1;
setAttr {$name + "_lHipVolume_MD.operation"} 2;
connectAttr -f {$name + "_lHipJIKFK_BlndScale.outputR"} {$name + "_lHipVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_lHipJIKFK_AutoBlnd"};
setAttr {$name + "_lHipJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_lHipVolume_MD.outputX"} {$name + "_lHipJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_lHipJIKFK_AutoBlnd.outputR"} {$name + "_lHipJ.scaleY"};
connectAttr -f {$name + "_lHipJIKFK_AutoBlnd.outputR"} {$name + "_lHipJ.scaleZ"};
connectAttr -f {$name + "_lLegSwitchC.AutoVolume"} {$name + "_lHipJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n  {$name + "_lHipJIKFK_BlndRotate"};
connectAttr -f {$name + "_lHipJFK.rotate"} {$name + "_lHipJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lHipJIK.rotate"} {$name + "_lHipJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lHipJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lHipJIKFK_BlndScale.outputR"} {$name + "_lHipJ.scaleX"};
connectAttr -f {$name + "_lHipJIKFK_BlndRotate.output"} {$name + "_lHipJ.rotate"};

//LEFT KNEE
shadingNode -asUtility blendColors -n {$name + "_lKneeJIKFK_BlndScale"};
connectAttr -f {$name + "_lKneeJFK.scale"} {$name + "_lKneeJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_lKneeJIK.scale"} {$name + "_lKneeJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lKneeJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_lKneeVolume_MD"};
setAttr {$name + "_lKneeVolume_MD.input1X"} 1;
setAttr {$name + "_lKneeVolume_MD.operation"} 2;
connectAttr -f {$name + "_lKneeJIKFK_BlndScale.outputR"} {$name + "_lKneeVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_lKneeJIKFK_AutoBlnd"};
setAttr {$name + "_lKneeJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_lKneeVolume_MD.outputX"} {$name + "_lKneeJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_lKneeJIKFK_AutoBlnd.outputR"} {$name + "_lKneeJ.scaleY"};
connectAttr -f {$name + "_lKneeJIKFK_AutoBlnd.outputR"} {$name + "_lKneeJ.scaleZ"};
connectAttr -f {$name + "_lLegSwitchC.AutoVolume"} {$name + "_lKneeJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n {$name + "_lKneeJIKFK_BlndRotate"};
connectAttr -f {$name + "_lKneeJFK.rotate"} {$name + "_lKneeJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lKneeJIK.rotate"} {$name + "_lKneeJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lKneeJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lKneeJIKFK_BlndScale.outputR"} {$name + "_lKneeJ.scaleX"};
connectAttr -f {$name + "_lKneeJIKFK_BlndRotate.output"} {$name + "_lKneeJ.rotate"};

//LEFT ANKLE
shadingNode -asUtility blendColors -n {$name + "_lAnkleJIKFK_BlndRotate"};
connectAttr -f {$name + "_lAnkleJFK.rotate"} {$name + "_lAnkleJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lAnkleJIK.rotate"} {$name + "_lAnkleJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lAnkleJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lAnkleJIKFK_BlndRotate.output"} {$name + "_lAnkleJ.rotate"};

//LEFT BALL
shadingNode -asUtility blendColors -n {$name + "_lBallJIKFK_BlndRotate"};
connectAttr -f {$name + "_lBallJFK.rotate"} {$name + "_lBallJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_lBallJIK.rotate"} {$name + "_lBallJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "_lBallJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_lBallJIKFK_BlndRotate.output"} {$name + "_lBallJ.rotate"};



///////////////////////////////////////////////////////////////////////////////////////////
//RIGHT SHOULDER
shadingNode -asUtility blendColors -n {$name + "_rShoulderJIKFK_BlndScale"};
connectAttr -f {$name + "_rShoulderJFK.scale"} {$name + "_rShoulderJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_rShoulderJIK.scale"} {$name + "_rShoulderJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rShoulderJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_rShoulderVolume_MD"};
setAttr {$name + "_rShoulderVolume_MD.input1X"} 1;
setAttr {$name + "_rShoulderVolume_MD.operation"} 2;
connectAttr -f {$name + "_rShoulderJIKFK_BlndScale.outputR"} {$name + "_rShoulderVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_rShoulderJIKFK_AutoBlnd"};
setAttr {$name + "_rShoulderJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_rShoulderVolume_MD.outputX"} {$name + "_rShoulderJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_rShoulderJIKFK_AutoBlnd.outputR"} {$name + "_rShoulderJ.scaleY"};
connectAttr -f {$name + "_rShoulderJIKFK_AutoBlnd.outputR"} {$name + "_rShoulderJ.scaleZ"};
connectAttr -f {$name + "_rArmSwitchC.AutoVolume"} {$name + "_rShoulderJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n  {$name + "_rShoulderJIKFK_BlndRotate"};
connectAttr -f {$name + "_rShoulderJFK.rotate"} {$name + "_rShoulderJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rShoulderJIK.rotate"} {$name + "_rShoulderJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rShoulderJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rShoulderJIKFK_BlndScale.outputR"} {$name + "_rShoulderJ.scaleX"};
connectAttr -f {$name + "_rShoulderJIKFK_BlndRotate.output"} {$name + "_rShoulderJ.rotate"};


//LEFT ELBOW
shadingNode -asUtility blendColors -n {$name + "_rElbowJIKFK_BlndScale"};
connectAttr -f {$name + "_rElbowJFK.scale"} {$name + "_rElbowJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_rElbowJIK.scale"} {$name + "_rElbowJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rElbowJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_rElbowVolume_MD"};
setAttr {$name + "_rElbowVolume_MD.input1X"} 1;
setAttr {$name + "_rElbowVolume_MD.operation"} 2;
connectAttr -f {$name + "_rElbowJIKFK_BlndScale.outputR"} {$name + "_rElbowVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_rElbowJIKFK_AutoBlnd"};
setAttr {$name + "_rElbowJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_rElbowVolume_MD.outputX"} {$name + "_rElbowJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_rElbowJIKFK_AutoBlnd.outputR"} {$name + "_rElbowJ.scaleY"};
connectAttr -f {$name + "_rElbowJIKFK_AutoBlnd.outputR"} {$name + "_rElbowJ.scaleZ"};
connectAttr -f {$name + "_rArmSwitchC.AutoVolume"} {$name + "_rElbowJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n {$name + "_rElbowJIKFK_BlndRotate"};
connectAttr -f {$name + "_rElbowJFK.rotate"} {$name + "_rElbowJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rElbowJIK.rotate"} {$name + "_rElbowJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rElbowJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rElbowJIKFK_BlndScale.outputR"} {$name + "_rElbowJ.scaleX"};
connectAttr -f {$name + "_rElbowJIKFK_BlndRotate.output"} {$name + "_rElbowJ.rotate"};


//RIGHT FOREARM
connectAttr -f {$name + "_rElbowJIKFK_BlndScale.outputR"} {$name + "_rForearmJ.scaleX"};
connectAttr -f {$name + "_rElbowVolume_MD.outputX"} {$name + "_rForearmJ.scaleY"};
connectAttr -f {$name + "_rElbowVolume_MD.outputX"} {$name + "_rForearmJ.scaleZ"};
connectAttr -f {$name + "_rWristJG1.rotateX"} {$name + "_rForearmJ.rotateX"};

//RIGHT WRIST
orientConstraint -mo {$name + "_rWristJFK"} {$name + "_rWristJIKDummy"} {$name + "_rWristJG1"};
setAttr {$name + "_rWristJG1_orientConstraint1.interpType"} 2;
setAttr {$name + "_rArmSwitchC.SwitchIkFk"} 0;
setAttr {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJIKDummyW1"} 0;
setAttr {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJFKW0"} 0;
setAttr {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJIKDummyW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJFKW0"};
setDrivenKeyframe -currentDriver {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJIKDummyW1"};
setAttr {$name + "_rArmSwitchC.SwitchIkFk"} 1;
setAttr {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJFKW0"} 1;
setAttr {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJIKDummyW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJFKW0"};
setDrivenKeyframe -currentDriver {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rWristJG1_orientConstraint1." + $name + "_rWristJIKDummyW1"};

selectKey -k -f 0 -f 1 {$name + "_rWristJG1_orientConstraint1_" + $name + "_rWristJIKDummyW1"} ;
selectKey -add -k -f 0 -f 1 {$name + "_rWristJG1_orientConstraint1_" + $name + "_rWristJFKW0"} ;
keyTangent -itt spline -ott spline ;

//RIGHT HIP
shadingNode -asUtility blendColors -n {$name + "_rHipJIKFK_BlndScale"};
connectAttr -f {$name + "_rHipJFK.scale"} {$name + "_rHipJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_rHipJIK.scale"} {$name + "_rHipJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rHipJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_rHipVolume_MD"};
setAttr {$name + "_rHipVolume_MD.input1X"} 1;
setAttr {$name + "_rHipVolume_MD.operation"} 2;
connectAttr -f {$name + "_rHipJIKFK_BlndScale.outputR"} {$name + "_rHipVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_rHipJIKFK_AutoBlnd"};
setAttr {$name + "_rHipJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_rHipVolume_MD.outputX"} {$name + "_rHipJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_rHipJIKFK_AutoBlnd.outputR"} {$name + "_rHipJ.scaleY"};
connectAttr -f {$name + "_rHipJIKFK_AutoBlnd.outputR"} {$name + "_rHipJ.scaleZ"};
connectAttr -f {$name + "_rLegSwitchC.AutoVolume"} {$name + "_rHipJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n  {$name + "_rHipJIKFK_BlndRotate"};
connectAttr -f {$name + "_rHipJFK.rotate"} {$name + "_rHipJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rHipJIK.rotate"} {$name + "_rHipJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rHipJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rHipJIKFK_BlndScale.outputR"} {$name + "_rHipJ.scaleX"};
connectAttr -f {$name + "_rHipJIKFK_BlndRotate.output"} {$name + "_rHipJ.rotate"};

//RIGHT KNEE
shadingNode -asUtility blendColors -n {$name + "_rKneeJIKFK_BlndScale"};
connectAttr -f {$name + "_rKneeJFK.scale"} {$name + "_rKneeJIKFK_BlndScale.color1"};
connectAttr -f {$name + "_rKneeJIK.scale"} {$name + "_rKneeJIKFK_BlndScale.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rKneeJIKFK_BlndScale.blender"};

shadingNode -asUtility multiplyDivide -n {$name + "_rKneeVolume_MD"};
setAttr {$name + "_rKneeVolume_MD.input1X"} 1;
setAttr {$name + "_rKneeVolume_MD.operation"} 2;
connectAttr -f {$name + "_rKneeJIKFK_BlndScale.outputR"} {$name + "_rKneeVolume_MD.input2X"};

shadingNode -asUtility blendColors -n {$name + "_rKneeJIKFK_AutoBlnd"};
setAttr {$name + "_rKneeJIKFK_AutoBlnd.color2"} -type double3 1 1 1 ;
connectAttr -f {$name + "_rKneeVolume_MD.outputX"} {$name + "_rKneeJIKFK_AutoBlnd.color1R"};
connectAttr -f {$name + "_rKneeJIKFK_AutoBlnd.outputR"} {$name + "_rKneeJ.scaleY"};
connectAttr -f {$name + "_rKneeJIKFK_AutoBlnd.outputR"} {$name + "_rKneeJ.scaleZ"};
connectAttr -f {$name + "_rLegSwitchC.AutoVolume"} {$name + "_rKneeJIKFK_AutoBlnd.blender"};

shadingNode -asUtility blendColors -n {$name + "_rKneeJIKFK_BlndRotate"};
connectAttr -f {$name + "_rKneeJFK.rotate"} {$name + "_rKneeJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rKneeJIK.rotate"} {$name + "_rKneeJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rKneeJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rKneeJIKFK_BlndScale.outputR"} {$name + "_rKneeJ.scaleX"};
connectAttr -f {$name + "_rKneeJIKFK_BlndRotate.output"} {$name + "_rKneeJ.rotate"};

//RIGHT ANKLE
shadingNode -asUtility blendColors -n {$name + "_rAnkleJIKFK_BlndRotate"};
connectAttr -f {$name + "_rAnkleJFK.rotate"} {$name + "_rAnkleJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rAnkleJIK.rotate"} {$name + "_rAnkleJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rAnkleJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rAnkleJIKFK_BlndRotate.output"} {$name + "_rAnkleJ.rotate"};

//RIGHT BALL
shadingNode -asUtility blendColors -n {$name + "_rBallJIKFK_BlndRotate"};
connectAttr -f {$name + "_rBallJFK.rotate"} {$name + "_rBallJIKFK_BlndRotate.color1"};
connectAttr -f {$name + "_rBallJIK.rotate"} {$name + "_rBallJIKFK_BlndRotate.color2"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "_rBallJIKFK_BlndRotate.blender"};

connectAttr -f {$name + "_rBallJIKFK_BlndRotate.output"} {$name + "_rBallJ.rotate"};


//LFOOTC ATTRIBUTES
addAttr -ln "footTilt"  -at double  -min -10 -max 10 -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.footTilt"};
addAttr -ln "heelBall"  -at double  -min -10 -max 10 -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.heelBall"};
addAttr -ln "toeUpDn"  -at double  -min -10 -max 10 -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.toeUpDn"};
addAttr -ln "ballSwivel"  -at double -dv 0 {$name + "_lFootIKC"};
setAttr -e-k true {$name + "_lFootIKC.ballSwivel"};

//UNLOCK LOCATORS
setAttr -l false -k true {$name + "_lFootHeelPivot.rx"};
setAttr -l false -k true {$name + "_lFootInTilt.rz"};
setAttr -l false -k true {$name + "_lFootOutTilt.rz"};
setAttr -l false -k true {$name + "_rFootHeelPivot.rx"};
setAttr -l false -k true {$name + "_rFootInTilt.rz"};
setAttr -l false -k true {$name + "_rFootOutTilt.rz"};

		//SDK TILT
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.footTilt"} {$name + "_lFootInTilt.rotateZ"};
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.footTilt"} {$name + "_lFootOutTilt.rotateZ"};
		setAttr {$name + "_lFootIKC.footTilt"} -10;
		setAttr {$name + "_lFootInTilt.rotateZ"} 90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.footTilt"} {$name + "_lFootInTilt.rotateZ"};
		setAttr {$name + "_lFootIKC.footTilt"} 10;
		setAttr {$name + "_lFootOutTilt.rotateZ"} -90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.footTilt"} {$name + "_lFootOutTilt.rotateZ"};
		setAttr {$name + "_lFootIKC.footTilt"} 0;
		//SDK HEEL BALL
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.heelBall"} {$name + "_lFootHeelPivot.rotateX"};
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.heelBall"} {$name + "_lFootBallPivot.rotateX"};
		setAttr {$name + "_lFootIKC.heelBall"} -10;
		setAttr {$name + "_lFootHeelPivot.rotateX"} -90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.heelBall"} {$name + "_lFootHeelPivot.rotateX"};
		setAttr {$name + "_lFootIKC.heelBall"} 10;
		setAttr {$name + "_lFootBallPivot.rotateX"} 90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.heelBall"} {$name + "_lFootBallPivot.rotateX"};
		setAttr {$name + "_lFootIKC.heelBall"} 0;
		//SDK TOE UP DN
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.toeUpDn"} {$name + "_lFootToePivot.rotateX"};
		setAttr {$name + "_lFootIKC.toeUpDn"} -10;
		setAttr {$name + "_lFootToePivot.rotateX"} 90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.toeUpDn"} {$name + "_lFootToePivot.rotateX"};
		setAttr {$name + "_lFootIKC.toeUpDn"} 10;
		setAttr {$name + "_lFootToePivot.rotateX"} -90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.toeUpDn"} {$name + "_lFootToePivot.rotateX"};
		setAttr {$name + "_lFootIKC.toeUpDn"} 0;
		//SDK BALL SWIVEL		
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.ballSwivel"} {$name + "_lBallSwivel.rotateY"};
		setAttr {$name + "_lFootIKC.ballSwivel"} -10;
		setAttr {$name + "_lBallSwivel.rotateY"} 90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.ballSwivel"} {$name + "_lBallSwivel.rotateY"};
		setAttr {$name + "_lFootIKC.ballSwivel"} 10;
		setAttr {$name + "_lBallSwivel.rotateY"} -90;
		setDrivenKeyframe -currentDriver {$name + "_lFootIKC.ballSwivel"} {$name + "_lBallSwivel.rotateY"};
		setAttr {$name + "_lFootIKC.ballSwivel"} 0;

		selectKey -add -k {$name + "_lFootInTilt_rotateZ"} ;
		selectKey -add -k {$name + "_lFootOutTilt_rotateZ"} ;
		selectKey -add -k {$name + "_lFootHeelPivot_rotateX"} ;
		selectKey -add -k {$name + "_lFootToePivot_rotateX"} ;
		selectKey -add -k {$name + "_lFootBallPivot_rotateX"} ;
		selectKey -add -k {$name + "_lBallSwivel.rotateY"};
		keyTangent -itt spline -ott spline ;

		setInfinity -pri linear graphEditor1FromOutliner {$name + "_lBallSwivel.ry"};
		setInfinity -poi linear graphEditor1FromOutliner {$name + "_lBallSwivel.ry"};

//RFOOTC ATTRIBUTES
addAttr -ln "footTilt"  -at double  -min -10 -max 10 -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.footTilt"};
addAttr -ln "heelBall"  -at double  -min -10 -max 10 -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.heelBall"};
addAttr -ln "toeUpDn"  -at double  -min -10 -max 10 -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.toeUpDn"};
addAttr -ln "ballSwivel"  -at double -dv 0 {$name + "_rFootIKC"};
setAttr -e-k true {$name + "_rFootIKC.ballSwivel"};

		//SDK TILT
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.footTilt"} {$name + "_rFootInTilt.rotateZ"};
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.footTilt"} {$name + "_rFootOutTilt.rotateZ"};
		setAttr {$name + "_rFootIKC.footTilt"} -10;
		setAttr {$name + "_rFootInTilt.rotateZ"} 90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.footTilt"} {$name + "_rFootInTilt.rotateZ"};
		setAttr {$name + "_rFootIKC.footTilt"} 10;
		setAttr {$name + "_rFootOutTilt.rotateZ"} 90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.footTilt"} {$name + "_rFootOutTilt.rotateZ"};
		setAttr {$name + "_rFootIKC.footTilt"} 0;
		setAttr {$name + "_rBallSwivel.v"} 0;
		//SDK HEEL BALL
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.heelBall"} {$name + "_rFootHeelPivot.rotateX"};
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.heelBall"} {$name + "_rFootBallPivot.rotateX"};
		setAttr {$name + "_rFootIKC.heelBall"} -10;
		setAttr {$name + "_rFootHeelPivot.rotateX"} -90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.heelBall"} {$name + "_rFootHeelPivot.rotateX"};
		setAttr {$name + "_rFootIKC.heelBall"} 10;
		setAttr {$name + "_rFootBallPivot.rotateX"} 90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.heelBall"} {$name + "_rFootBallPivot.rotateX"};
		setAttr {$name + "_rFootIKC.heelBall"} 0;
		setAttr {$name + "_rFootBallPivot.v"} 0;	
		//SDK TOE UP DN
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.toeUpDn"} {$name + "_rFootToePivot.rotateX"};
		setAttr {$name + "_rFootIKC.toeUpDn"} -10;
		setAttr {$name + "_rFootToePivot.rotateX"} 90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.toeUpDn"} {$name + "_rFootToePivot.rotateX"};
		setAttr {$name + "_rFootIKC.toeUpDn"} 10;
		setAttr {$name + "_rFootToePivot.rotateX"} -90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.toeUpDn"} {$name + "_rFootToePivot.rotateX"};
		setAttr {$name + "_rFootIKC.toeUpDn"} 0;
		//SDK BALL SWIVEL		
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.ballSwivel"} {$name + "_rBallSwivel.rotateY"};
		setAttr {$name + "_rFootIKC.ballSwivel"} -10;
		setAttr {$name + "_rBallSwivel.rotateY"} 90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.ballSwivel"} {$name + "_rBallSwivel.rotateY"};
		setAttr {$name + "_rFootIKC.ballSwivel"} 10;
		setAttr {$name + "_rBallSwivel.rotateY"} -90;
		setDrivenKeyframe -currentDriver {$name + "_rFootIKC.ballSwivel"} {$name + "_rBallSwivel.rotateY"};
		setAttr {$name + "_rFootIKC.ballSwivel"} 0;
		
		selectKey -add -k {$name + "_rFootInTilt_rotateZ"} ;
		selectKey -add -k {$name + "_rFootOutTilt_rotateZ"} ;
		selectKey -add -k {$name + "_rFootHeelPivot_rotateX"} ;
		selectKey -add -k {$name + "_rFootToePivot_rotateX"} ;
		selectKey -add -k {$name + "_rFootBallPivot_rotateX"} ;
		selectKey -add -k {$name + "_rBallSwivel_rotateY"} ;
		keyTangent -itt spline -ott spline ;

		setInfinity -pri linear graphEditor1FromOutliner {$name + "_rBallSwivel.ry"};
		setInfinity -poi linear graphEditor1FromOutliner {$name + "_rBallSwivel.ry"};

//LEFT ELBOWIKC FOLLOW
addAttr -ln "Follow"  -at "enum" -en "Main:Wrist:Shoulder:Wrist and Shoulder:" {$name + "_lElbowIKC"};
setAttr -e-keyable true {$name + "_lElbowIKC.Follow"};
setAttr {$name + "_lElbowIKC.Follow"} 0;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"} 0;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"};

setAttr {$name + "_lElbowIKC.Follow"} 1;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_MainCW0"} 0;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"};

setAttr {$name + "_lElbowIKC.Follow"} 2;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"} 1;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"};

setAttr {$name + "_lElbowIKC.Follow"} 3;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"} 1;
setAttr {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"} 1;
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_lElbowIKC.Follow"} {$name + "_lElbowIKCG_parentConstraint1." + $name + "_lClavicleCW2"};

setAttr {$name + "_lElbowIKC.Follow"} 0;


//RIGHT ELBOWIKC FOLLOW
addAttr -ln "Follow"  -at "enum" -en "Main:Wrist:Shoulder:Wrist and Shoulder:" {$name + "_rElbowIKC"};
setAttr -e-keyable true {$name + "_rElbowIKC.Follow"};
setAttr {$name + "_rElbowIKC.Follow"} 0;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"} 0;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"};

setAttr {$name + "_rElbowIKC.Follow"} 1;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_MainCW0"} 0;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"};

setAttr {$name + "_rElbowIKC.Follow"} 2;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"} 0;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"} 1;
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"};

setAttr {$name + "_rElbowIKC.Follow"} 3;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"} 1;
setAttr {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"} 1;
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rWristIKCW1"};
setDrivenKeyframe -currentDriver {$name + "_rElbowIKC.Follow"} {$name + "_rElbowIKCG_parentConstraint1." + $name + "_rClavicleCW2"};

setAttr {$name + "_rElbowIKC.Follow"} 0;

//LEFT KNEEIKC FOLLOW
parentConstraint -mo {$name + "_lBallSwivel"} {$name + "_lKneeIKCG"};

addAttr -ln "Follow"  -at "enum" -en "Main:Foot:Hips:Foot and Hips:" {$name + "_lKneeIKC"};
setAttr -e-keyable true {$name + "_lKneeIKC.Follow"};
setAttr {$name + "_lKneeIKC.Follow"} 0;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"} 0;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"};

setAttr {$name + "_lKneeIKC.Follow"} 1;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainCW0"} 0;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"} 1;
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"};

setAttr {$name + "_lKneeIKC.Follow"} 2;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"} 0;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"};

setAttr {$name + "_lKneeIKC.Follow"} 3;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"} 1;
setAttr {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_lKneeIKC.Follow"} {$name + "_lKneeIKCG_parentConstraint1." + $name + "_lBallSwivelW2"};

setAttr {$name + "_lKneeIKC.Follow"} 0;

//RIGHT KNEEIKC FOLLOW
parentConstraint -mo {$name + "_rBallSwivel"} {$name + "_rKneeIKCG"};

addAttr -ln "Follow"  -at "enum" -en "Main:Foot:Hips:Foot and Hips:" {$name + "_rKneeIKC"};
setAttr -e-keyable true {$name + "_rKneeIKC.Follow"};
setAttr {$name + "_rKneeIKC.Follow"} 0;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"} 0;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"};

setAttr {$name + "_rKneeIKC.Follow"} 1;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainCW0"} 0;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"} 1;
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"};

setAttr {$name + "_rKneeIKC.Follow"} 2;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"} 0;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"};

setAttr {$name + "_rKneeIKC.Follow"} 3;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"} 1;
setAttr {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_MainHipCW1"};
setDrivenKeyframe -currentDriver {$name + "_rKneeIKC.Follow"} {$name + "_rKneeIKCG_parentConstraint1." + $name + "_rBallSwivelW2"};

setAttr {$name + "_rKneeIKC.Follow"} 0;

//LEFT HAND SCALE
connectAttr -f {$name + "_lWristFKC.sx"} {$name + "_lWristFKC.sy"};
connectAttr -f {$name + "_lWristFKC.sx"} {$name + "_lWristFKC.sz"};
connectAttr -f {$name + "_lWristIKC.sx"} {$name + "_lWristIKC.sy"};
connectAttr -f {$name + "_lWristIKC.sx"} {$name + "_lWristIKC.sz"};
shadingNode -asUtility blendColors -n {$name + "lHandIKFK_BlndScale"};
connectAttr -f {$name + "_lWristFKC.sx"} {$name + "lHandIKFK_BlndScale.color1R"};
connectAttr -f {$name + "_lWristIKC.sx"} {$name + "lHandIKFK_BlndScale.color2R"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "lHandIKFK_BlndScale.blender"};
connectAttr -force {$name + "lHandIKFK_BlndScale.outputR"} {$name + "_lWristJG1.sx"};
connectAttr -force {$name + "lHandIKFK_BlndScale.outputR"} {$name + "_lWristJG1.sy"};
connectAttr -force {$name + "lHandIKFK_BlndScale.outputR"} {$name + "_lWristJG1.sz"};

//RIGHT HAND SCALE
connectAttr -f {$name + "_rWristFKC.sx"} {$name + "_rWristFKC.sy"};
connectAttr -f {$name + "_rWristFKC.sx"} {$name + "_rWristFKC.sz"};
connectAttr -f {$name + "_rWristIKC.sx"} {$name + "_rWristIKC.sy"};
connectAttr -f {$name + "_rWristIKC.sx"} {$name + "_rWristIKC.sz"};
shadingNode -asUtility blendColors -n {$name + "_rHandIKFK_BlndScale"};
connectAttr -f {$name + "_rWristFKC.sx"} {$name + "_rHandIKFK_BlndScale.color1R"};
connectAttr -f {$name + "_rWristIKC.sx"} {$name + "_rHandIKFK_BlndScale.color2R"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "_rHandIKFK_BlndScale.blender"};
connectAttr -force {$name + "_rHandIKFK_BlndScale.outputR"} {$name + "_rWristJG1.sx"};
connectAttr -force {$name + "_rHandIKFK_BlndScale.outputR"} {$name + "_rWristJG1.sy"};
connectAttr -force {$name + "_rHandIKFK_BlndScale.outputR"} {$name + "_rWristJG1.sz"};

//EYES
addAttr -ln "LocalGlobal"  -at double  -min 0 -max 1 -dv 0{$name + "_EyeAimC"};
setAttr -e -k true {$name + "_EyeAimC.LocalGlobal"};
connectAttr -f {$name + "_EyeAimC.LocalGlobal"} {$name + "_EyeAimCG_parentConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_EyeAimC.LocalGlobal"} {$name + "_EyeAimCG_parentConstraint1." + $name + "_HeadCW1"};
setAttr {$name + "_EyeAimC.LocalGlobal"} 1;
setAttr {$name + "_EyeAimCG_parentConstraint1." + $name + "_HeadCW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_EyeAimC.LocalGlobal"} {$name + "_EyeAimCG_parentConstraint1." + $name + "_HeadCW1"};
selectKey -k {$name + "_EyeAimCG_parentConstraint1_" + $name + "_HeadCW1"} ;
keyTangent -itt spline -ott spline ;

//RIBBON SPINE

//CREATE LOCATORS FOR TX
spaceLocator -n {$name + "_spineBtmTX_Lctr"} -p 0 0 0;
select -add {$name + "_MainHipC"};
parent;
pointConstraint {$name + "_SpineMidIKC"} {$name + "_spineBtmTX_Lctr"};

spaceLocator -n {$name + "_SpineTopTX_Lctr"} -p 0 0 0;
select -add {$name + "_SpineTopIKC"};
parent;
pointConstraint {$name + "_SpineMidIKC"} {$name + "_SpineTopTX_Lctr"};

//SET DRIVEN KEY
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_lClusterG.scaleY"};
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_rClusterG.scaleY"};
setAttr {$name + "_SpineMidIKC.translateX"} -4;
setAttr {$name + "_ribbonBlend_lClusterG.scaleY"} .8;
setAttr {$name + "_ribbonBlend_rClusterG.scaleY"} 1.2;
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_lClusterG.scaleY"};
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_rClusterG.scaleY"};
setAttr {$name + "_SpineMidIKC.translateX"} 4;
setAttr {$name + "_ribbonBlend_lClusterG.scaleY"} 1.2;
setAttr {$name + "_ribbonBlend_rClusterG.scaleY"} .8;
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_lClusterG.scaleY"};
setDrivenKeyframe -currentDriver {$name + "_SpineMidIKC.translateX"} {$name + "_ribbonBlend_rClusterG.scaleY"};
setAttr {$name + "_SpineMidIKC.translateX"} 0;
setAttr {$name + "_ribbonBlend_lClusterG.scaleY"} 1;
setAttr {$name + "_ribbonBlend_rClusterG.scaleY"} 1;

selectKey -k {$name + "_ribbonBlend_lClusterG_scaleY"} {$name + "_ribbonBlend_rClusterG_scaleY"} ;
keyTangent -itt spline -ott spline ;


//CONNECT SPINE IK MIDDLE TO TOP AND BOTTOM SPINE IK
shadingNode -n {$name + "SpineMid_Blnd"} -asUtility blendColors;
connectAttr -f {$name + "_SpineTopIKC.translate"} {$name + "SpineMid_Blnd.color1"};
connectAttr -f {$name + "_MainHipC.translate"} {$name + "SpineMid_Blnd.color2"};
connectAttr -f {$name + "SpineMid_Blnd.output"} {$name + "_SpineMidIKCG2.translate"};

spaceLocator -n {$name + "midSpineAimLctr"};
spaceLocator -n {$name + "midSpineTargetLctr"};
parent {$name + "midSpineAimLctr"} {$name + "midSpineTargetLctr"} {$name + "_ROOTC"};
pointConstraint {$name + "_ROOTC"} {$name + "midSpineAimLctr"};
delete {$name + "midSpineAimLctr_pointConstraint1"};
pointConstraint {$name + "_SpineTopIKC"} {$name + "midSpineTargetLctr"};
delete {$name + "midSpineTargetLctr_pointConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "midSpineAimLctr"} {$name + "midSpineTargetLctr"};

connectAttr -f {$name + "_MainHipC.translate"} {$name + "midSpineAimLctr.translate"};
connectAttr -f {$name + "_SpineTopIKC.translate"} {$name + "midSpineTargetLctr.translate"};

aimConstraint -mo -weight 1 -aimVector 0 1 0 -upVector 0 1 0 -worldUpType "none" -skip y {$name + "midSpineTargetLctr"} {$name + "midSpineAimLctr"};
connectAttr -f {$name + "midSpineAimLctr.rotateX"} {$name + "_SpineMidIKCG2.rotateX"};
connectAttr -f {$name + "midSpineAimLctr.rotateZ"} {$name + "_SpineMidIKCG2.rotateZ"};

shadingNode -asUtility blendColors -n {$name + "spineMidIKCG_Blnd"};
connectAttr -f {$name + "_SpineTopIKC.rotate"} {$name + "spineMidIKCG_Blnd.color1"};
connectAttr -f {$name + "_MainHipC.rotate"} {$name + "spineMidIKCG_Blnd.color2"};
connectAttr -f {$name + "spineMidIKCG_Blnd.outputG"} {$name + "_SpineMidIKCG2.rotateY"};

//SPINE LENGTH
addAttr -ln "spineLength"  -at double {$name + "_SpineMidIKC"};
setAttr -e-channelBox true {$name + "_SpineMidIKC.spineLength"};
addAttr -ln "spineLength"  -at double {$name + "_MainHipC"};
setAttr -e-channelBox true {$name + "_MainHipC.spineLength"};
addAttr -ln "spineLength"  -at double {$name + "_SpineTopIKC"};
setAttr -e-channelBox true {$name + "_SpineTopIKC.spineLength"};

shadingNode -asUtility multiplyDivide -n {$name + "spineLength_MD"};
setAttr {$name + "spineLength_MD.operation"} 2;
$spineLength[0] = `getAttr {$name + "spineLengthInfo.arcLength"}`;
setAttr {$name + "spineLength_MD.input2X"} $spineLength[0];
connectAttr -f {$name + "spineLengthInfo.arcLength"} {$name + "spineLength_MD.input1X"};

connectAttr -f {$name + "spineLength_MD.outputX"} {$name + "_SpineMidIKC.spineLength"};
connectAttr -f {$name + "spineLength_MD.outputX"} {$name + "_MainHipC.spineLength"};
connectAttr -f {$name + "spineLength_MD.outputX"} {$name + "_SpineTopIKC.spineLength"};

//VISIBILITY TOGGLES////////////////////////////////////////////////////////////////////


//HEAD
addAttr -ln "HeadOrient"  -at double  -min 0 -max 1 -dv 1 {$name + "_HeadC"};
setAttr -e-k true {$name + "_HeadC.HeadOrient"};
setAttr {$name + "_HeadCG_orientConstraint1." + $name + "_MainCW0"} 0;
setAttr {$name + "_HeadCG_orientConstraint1." + $name + "_Neck01CW1"} 1;
setDrivenKeyframe -currentDriver {$name + "_HeadC.HeadOrient"} {$name + "_HeadCG_orientConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_HeadC.HeadOrient"} {$name + "_HeadCG_orientConstraint1." + $name + "_Neck01CW1"};
setAttr {$name + "_HeadC.HeadOrient"} 0;
setAttr {$name + "_HeadCG_orientConstraint1." + $name + "_MainCW0"} 1;
setAttr {$name + "_HeadCG_orientConstraint1." + $name + "_Neck01CW1"} 0;
setDrivenKeyframe -currentDriver {$name + "_HeadC.HeadOrient"} {$name + "_HeadCG_orientConstraint1." + $name + "_MainCW0"};
setDrivenKeyframe -currentDriver {$name + "_HeadC.HeadOrient"} {$name + "_HeadCG_orientConstraint1." + $name + "_Neck01CW1"};
setAttr {$name + "_HeadC.HeadOrient"} 1;

selectKey -k -f 0 -f 1 {$name + "_HeadCG_orientConstraint1_" + $name + "_MainCW0"} ;
selectKey -add -k -f 0 -f 1 {$name + "_HeadCG_orientConstraint1_" + $name + "_Neck01CW1"} ;
keyTangent -itt spline -ott spline ;

//LEFT ARM
shadingNode -asUtility condition -n {$name + "lArmIKViz"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "lArmIKViz.firstTerm"};
setAttr {$name + "lArmIKViz.secondTerm"} 0.7;
setAttr {$name + "lArmIKViz.operation"} 3;
connectAttr -f {$name + "lArmIKViz.outColorR"} {$name + "_lElbowIKC.v"};
connectAttr -f {$name + "lArmIKViz.outColorR"} {$name + "_lWristIKC.v"};

shadingNode -asUtility condition -n {$name + "lArmFKViz"};
connectAttr -f {$name + "_lArmSwitchC.SwitchIkFk"} {$name + "lArmFKViz.firstTerm"};
setAttr {$name + "lArmFKViz.secondTerm"} 0.3;
setAttr {$name + "lArmFKViz.operation"} 5;
connectAttr -f {$name + "lArmFKViz.outColorR"} {$name + "_lShoulderFKC.v"};
connectAttr -f {$name + "lArmFKViz.outColorR"} {$name + "_lElbowFKC.v"};
connectAttr -f {$name + "lArmFKViz.outColorR"} {$name + "_lWristFKC.v"};

//LEFT LEG
shadingNode -asUtility condition -n {$name + "lLegIKViz"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "lLegIKViz.firstTerm"};
setAttr {$name + "lLegIKViz.secondTerm"} 0.7;
setAttr {$name + "lLegIKViz.operation"} 3;
connectAttr -f {$name + "lLegIKViz.outColorR"} {$name + "_lKneeIKC.v"};
connectAttr -f {$name + "lLegIKViz.outColorR"} {$name + "_lFootIKC.v"};
connectAttr -f {$name + "lLegIKViz.outColorR"} {$name + "_lToeIKC.v"};

shadingNode -asUtility condition -n {$name + "lLegFKViz"};
connectAttr -f {$name + "_lLegSwitchC.SwitchIkFk"} {$name + "lLegFKViz.firstTerm"};
setAttr {$name + "lLegFKViz.secondTerm"} 0.3;
setAttr {$name + "lLegFKViz.operation"} 5;
connectAttr -f {$name + "lLegFKViz.outColorR"} {$name + "_lHipFKC.v"};
connectAttr -f {$name + "lLegFKViz.outColorR"} {$name + "_lKneeFKC.v"};
connectAttr -f {$name + "lLegFKViz.outColorR"} {$name + "_lAnkleFKC.v"};
connectAttr -f {$name + "lLegFKViz.outColorR"} {$name + "_lBallFKC.v"};

//RIGHT ARM
shadingNode -asUtility condition -n {$name + "rArmIKViz"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "rArmIKViz.firstTerm"};
setAttr {$name + "rArmIKViz.secondTerm"} 0.7;
setAttr {$name + "rArmIKViz.operation"} 3;
connectAttr -f {$name + "rArmIKViz.outColorR"} {$name + "_rElbowIKC.v"};
connectAttr -f {$name + "rArmIKViz.outColorR"} {$name + "_rWristIKC.v"};

shadingNode -asUtility condition -n {$name + "rArmFKViz"};
connectAttr -f {$name + "_rArmSwitchC.SwitchIkFk"} {$name + "rArmFKViz.firstTerm"};
setAttr {$name + "rArmFKViz.secondTerm"} 0.3;
setAttr {$name + "rArmFKViz.operation"} 5;
connectAttr -f {$name + "rArmFKViz.outColorR"} {$name + "_rShoulderFKC.v"};
connectAttr -f {$name + "rArmFKViz.outColorR"} {$name + "_rElbowFKC.v"};
connectAttr -f {$name + "rArmFKViz.outColorR"} {$name + "_rWristFKC.v"};

//RIGHT LEG
shadingNode -asUtility condition -n {$name + "rLegIKViz"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "rLegIKViz.firstTerm"};
setAttr {$name + "rLegIKViz.secondTerm"} 0.7;
setAttr {$name + "rLegIKViz.operation"} 3;
connectAttr -f {$name + "rLegIKViz.outColorR"} {$name + "_rKneeIKC.v"};
connectAttr -f {$name + "rLegIKViz.outColorR"} {$name + "_rFootIKC.v"};
connectAttr -f {$name + "rLegIKViz.outColorR"} {$name + "_rToeIKC.v"};

shadingNode -asUtility condition -n {$name + "rLegFKViz"};
connectAttr -f {$name + "_rLegSwitchC.SwitchIkFk"} {$name + "rLegFKViz.firstTerm"};
setAttr {$name + "rLegFKViz.secondTerm"} 0.3;
setAttr {$name + "rLegFKViz.operation"} 5;
connectAttr -f {$name + "rLegFKViz.outColorR"} {$name + "_rHipFKC.v"};
connectAttr -f {$name + "rLegFKViz.outColorR"} {$name + "_rKneeFKC.v"};
connectAttr -f {$name + "rLegFKViz.outColorR"} {$name + "_rAnkleFKC.v"};
connectAttr -f {$name + "rLegFKViz.outColorR"} {$name + "_rBallFKC.v"};

setAttr {$name + "_lBallSwivel.v"} 0;


group -n {$name + "ExtraNodes"} {$name + "_spineLengthC"} {$name + "_hairSystemFollicles"} {$name + "_ribbon"} {$name + "_ribbonBlend"} 
{$name + "_ribbonBlend_lClusterG"} {$name + "_ribbonBlend_rClusterG"} {$name + "_NeckCurve"} {$name + "_Neck02CG"};
setAttr {$name + "ExtraNodes.inheritsTransform"} 0;

xform -os -piv 0 0 0;

//////////////////////////////////LOCK & HIDE//////////////////////////////////
connectAttr -f {$name + "_MainC.scaleY"} {$name + "_MainC.sx"};
connectAttr -f {$name + "_MainC.scaleY"} {$name + "_MainC.sz"};
setAttr -l 1 -k 0 {$name + "_MainC.sx"};
setAttr -l 1 -k 0 {$name + "_MainC.sz"};
setAttr -l 1 -k 0 {$name + "_MainC.v"};

setAttr {$name + "_Spine04FKC.v"} 0;

setAttr {$name + "_ribbon.v"} 0;
setAttr {$name + "_ribbonBlend.v"} 0;
setAttr {$name + "_ribbonBlend_rTopCluster.v"} 0;
setAttr {$name + "_ribbonBlend_lTopCluster.v"} 0;
setAttr {$name + "_ribbonBlend_rBtmCluster.v"} 0;
setAttr {$name + "_ribbonBlend_lBtmCluster.v"} 0;
setAttr {$name + "_spineBtmTX_Lctr.v"} 0;
setAttr {$name + "_SpineTopTX_Lctr.v"} 0;
setAttr {$name + "_spineBtm01JIK.v"} 0;
setAttr {$name + "_spineMidJIK.v"} 0;
setAttr {$name + "_SpineTopJIK.v"} 0;
setAttr {$name + "_spineLengthC.template"} 1;

setAttr {$name + "_NeckCurve.template"} 1;
setAttr {$name + "_NeckUpLctr.v"} 0;
setAttr {$name + "_NeckLengthAimLctr.v"} 0;
setAttr {$name + "_NeckBtmClstr.v"} 0;
setAttr {$name + "_HeadClstr.v"} 0;

setAttr {$name + "_spine01F.v"} 0;
setAttr {$name + "_spine02F.v"} 0;
setAttr {$name + "_spine03F.v"} 0;

setAttr {$name + "_rLegLengthOriginLctr.v"} 0;
setAttr {$name + "_lAnkleJFKG2.v"} 0;
setAttr {$name + "_lKneeJFKG2.v"} 0;
setAttr {$name + "_rWristJFKG2.v"} 0;
setAttr {$name + "_rElbowJFKG2.v"} 0;
setAttr {$name + "_rWristJIKDummyG2.v"} 0;
setAttr {$name + "_rArmLengthOriginLctr.v"} 0;
setAttr {$name + "_lArmLengthOriginLctr.v"} 0;
setAttr {$name + "_rAnkleJFKG2.v"} 0;
setAttr {$name + "_rKneeJFKG2.v"} 0;
setAttr {$name + "_lLegLengthOriginLctr.v"} 0;
setAttr {$name + "_lWristJIKDummyG2.v"} 0;
setAttr {$name + "_lWristJFKG2.v"} 0;
setAttr {$name + "_lElbowJFKG2.v"} 0;

setAttr {$name + "_rElbowIKC_TargetLctr.v"} 0;
setAttr {$name + "_lKneeIKC_TargetLctr.v"} 0;
setAttr {$name + "_rKneeIKC_TargetLctr.v"} 0;
setAttr {$name + "_lElbowIKC_TargetLctr.v"} 0;

setAttr {$name + "midSpineTargetLctr.v"} 0;
setAttr {$name + "midSpineAimLctr.v"} 0;

setAttr -l 1 -k 0 {$name + "_SpineTopIKC.sx"};
setAttr -l 1 -k 0 {$name + "_SpineMidIKC.sx"};
setAttr -l 1 -k 0 {$name + "_SpineTopIKC.sy"};
setAttr -l 1 -k 0 {$name + "_SpineMidIKC.sy"};
setAttr -l 1 -k 0 {$name + "_SpineTopIKC.sz"};
setAttr -l 1 -k 0 {$name + "_SpineMidIKC.sz"};
setAttr -l 1 -k 0 {$name + "_SpineTopIKC.v"};
setAttr -l 1 -k 0 {$name + "_SpineMidIKC.v"};

setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.tx"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.tx"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.ty"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.ty"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.tz"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.tz"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.rx"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.rx"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.ry"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.ry"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.rz"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.rz"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.sx"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.sx"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.sy"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.sy"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.sz"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.sz"};
setAttr -l 1 -k 0 {$name + "midSpineTargetLctr.v"};
setAttr -l 1 -k 0 {$name + "midSpineAimLctr.v"};

setAttr -l 1 -k 0 {$name + "_ROOTC.sx"};
setAttr -l 1 -k 0 {$name + "_ROOTC.sy"};
setAttr -l 1 -k 0 {$name + "_ROOTC.sz"};
setAttr -l 1 -k 0 {$name + "_ROOTC.v"};

setAttr -l 1 -k 0 {$name + "_Spine01FKC.tx"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.ty"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.tz"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.sx"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.sy"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.sz"};
setAttr -l 1 -k 0 {$name + "_Spine01FKC.v"};

setAttr -l 1 -k 0 {$name + "_Spine02FKC.tx"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.ty"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.tz"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.sx"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.sy"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.sz"};
setAttr -l 1 -k 0 {$name + "_Spine02FKC.v"};

setAttr -l 1 -k 0 {$name + "_Spine03FKC.tx"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.ty"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.tz"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.sx"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.sy"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.sz"};
setAttr -l 1 -k 0 {$name + "_Spine03FKC.v"};

setAttr -l 1 -k 0 {$name + "_Spine04FKC.tx"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.ty"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.tz"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.rx"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.ry"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.rz"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.sx"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.sy"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.sz"};
setAttr -l 1 -k 0 {$name + "_Spine04FKC.v"};

setAttr -l 1 -k 0 {$name + "_Neck01C.tx"};
setAttr -l 1 -k 0 {$name + "_Neck01C.ty"};
setAttr -l 1 -k 0 {$name + "_Neck01C.tz"};
setAttr -l 1 -k 0 {$name + "_Neck01C.sx"};
setAttr -l 1 -k 0 {$name + "_Neck01C.sy"};
setAttr -l 1 -k 0 {$name + "_Neck01C.sz"};
setAttr -l 1 -k 0 {$name + "_Neck01C.v"};

setAttr -l 1 -k 0 {$name + "_Neck02C.sx"};
setAttr -l 1 -k 0 {$name + "_Neck02C.sy"};
setAttr -l 1 -k 0 {$name + "_Neck02C.sz"};
setAttr -l 1 -k 0 {$name + "_Neck02C.v"};

setAttr -l 1 -k 0 {$name + "_HeadC.v"};

setAttr -l 1 -k 0 {$name + "_JawC.sx"};
setAttr -l 1 -k 0 {$name + "_JawC.sy"};
setAttr -l 1 -k 0 {$name + "_JawC.sz"};
setAttr -l 1 -k 0 {$name + "_JawC.v"};

setAttr -l 1 -k 0 {$name + "_MainHipC.sx"};
setAttr -l 1 -k 0 {$name + "_MainHipC.sy"};
setAttr -l 1 -k 0 {$name + "_MainHipC.sz"};
setAttr -l 1 -k 0 {$name + "_MainHipC.v"};

setAttr -l 1 -k 0{$name + "_EyeAimC.rx"};
setAttr -l 1 -k 0{$name + "_EyeAimC.ry"};
setAttr -l 1 -k 0{$name + "_EyeAimC.rz"};
setAttr -l 1 -k 0{$name + "_EyeAimC.sx"};
setAttr -l 1 -k 0{$name + "_EyeAimC.sy"};
setAttr -l 1 -k 0{$name + "_EyeAimC.sz"};
setAttr -l 1 -k 0{$name + "_EyeAimC.v"};

setAttr -l 1 -k 0 {$name + "_lEyeAimC.rx"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.ry"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.rz"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.sx"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.sy"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.sz"};
setAttr -l 1 -k 0 {$name + "_lEyeAimC.v"};

setAttr -l 1 -k 0 {$name + "_rEyeAimC.rx"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.ry"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.rz"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.sx"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.sy"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.sz"};
setAttr -l 1 -k 0 {$name + "_rEyeAimC.v"};

//LEFT ARM
setAttr -l 1 -k 0 {$name + "_lClavicleC.tx"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.ty"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.tz"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.sx"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.sy"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.sz"};
setAttr -l 1 -k 0 {$name + "_lClavicleC.v"};

setAttr -l 1 -k 0 {$name + "_lShoulderFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lShoulderFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lShoulderFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lShoulderFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lShoulderFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lShoulderFKC.v"};

setAttr -l 1 -k 0 {$name + "_lElbowFKC.rx"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.rz"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.sx"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lElbowFKC.v"};

setAttr -l 1 -k 0 {$name + "_lWristFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lWristFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lWristFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lWristFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lWristFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lWristFKC.v"};

setAttr -l 1 -k 0 {$name + "_lElbowIKC.rx"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.ry"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.rz"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.sx"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.sy"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.sz"};
setAttr -l 1 -k 0 {$name + "_lElbowIKC.v"};

setAttr -l 1 -k 0 {$name + "_lWristIKC.sy"};
setAttr -l 1 -k 0 {$name + "_lWristIKC.sz"};
setAttr -l 1 -k 0 {$name + "_lWristIKC.v"};

setAttr -l 1 -k 0 {$name + "_lPalmC.tx"};
setAttr -l 1 -k 0 {$name + "_lPalmC.ty"};
setAttr -l 1 -k 0 {$name + "_lPalmC.tz"};
setAttr -l 1 -k 0 {$name + "_lPalmC.sx"};
setAttr -l 1 -k 0 {$name + "_lPalmC.sy"};
setAttr -l 1 -k 0 {$name + "_lPalmC.sz"};
setAttr -l 1 -k 0 {$name + "_lPalmC.v"};

setAttr -l 1 -k 0 {$name + "_lArmSwitchC.tx"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.ty"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.tz"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.rx"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.ry"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.rz"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.sx"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.sy"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.sz"};
setAttr -l 1 -k 0 {$name + "_lArmSwitchC.v"};

//HANDS
if (`objExists ($name + "_lThumbJ1")`)
{select {$name + "_lThumbJ1C"} {$name + "_lThumbJ2C"} {$name + "_lThumbJ3C"} {$name + "_rThumbJ1C"} {$name + "_rThumbJ2C"} {$name + "_rThumbJ3C"};}

select -add {$name + "_lFinger1J1C"} {$name + "_lFinger1J2C"} {$name + "_lFinger1J3C"} {$name + "_rFinger1J1C"} {$name + "_rFinger1J2C"} {$name + "_rFinger1J3C"};

if (`objExists ($name + "_lFinger2J1")`)
{select -add {$name + "_lFinger2J1C"} {$name + "_lFinger2J2C"} {$name + "_lFinger2J3C"} {$name + "_rFinger2J1C"} {$name + "_rFinger2J2C"} {$name + "_rFinger2J3C"};}

if (`objExists ($name + "_lFinger3J1")`)
{select -add {$name + "_lFinger3J1C"} {$name + "_lFinger3J2C"} {$name + "_lFinger3J3C"} {$name + "_rFinger3J1C"} {$name + "_rFinger3J2C"} {$name + "_rFinger3J3C"};}

if (`objExists ($name + "_lFinger4J1")`)
{select -add {$name + "_lFinger4J1C"} {$name + "_lFinger4J2C"} {$name + "_lFinger4J3C"} {$name + "_rFinger4J1C"} {$name + "_rFinger4J2C"} {$name + "_rFinger4J3C"};}

if (`objExists ($name + "_lFinger5J1")`)
{select -add {$name + "_lFinger5J1C"} {$name + "_lFinger5J2C"} {$name + "_rFinger5J3C"} {$name + "_rFinger5J1C"} {$name + "_rFinger5J2C"} {$name + "_rFinger5J3C"};}

if (`objExists ($name + "_lFinger6J1")`)
{select -add {$name + "_lFinger6J1C"} {$name + "_lFinger6J2C"} {$name + "_lFinger6J3C"} {$name + "_rFinger6J1C"} {$name + "_rFinger6J2C"} {$name + "_rFinger6J3C"};}

if (`objExists ($name + "_lFinger7J1")`)
{select -add {$name + "_lFinger7J1C"} {$name + "_lFinger7J2C"} {$name + "_lFinger7J3C"} {$name + "_rFinger7J1C"} {$name + "_rFinger7J2C"} {$name + "_rFinger7J3C"};}

if (`objExists ($name + "_lFinger8J1")`)
{select -add {$name + "_lFinger8J1C"} {$name + "_lFinger8J2C"} {$name + "_lFinger8J3C"} {$name + "_rFinger8J1C"} {$name + "_rFinger8J2C"} {$name + "_rFinger8J3C"};}

if (`objExists ($name + "_lFinger9J1")`)
{select -add {$name + "_lFinger9J1C"} {$name + "_lFinger9J2C"} {$name + "_lFinger9J3C"} {$name + "_rFinger9J1C"} {$name + "_rFinger9J2C"} {$name + "_rFinger9J3C"};}

$selectedFingers = `ls -sl`;
string $currentObject;
for ($currentObject in $selectedFingers)
	
{
setAttr -l true -k false {$currentObject + ".tx"};
setAttr -l true -k false {$currentObject + ".ty"};
setAttr -l true -k false {$currentObject + ".tz"};
setAttr -l true -k false {$currentObject + ".sx"};
setAttr -l true -k false {$currentObject + ".sy"};
setAttr -l true -k false {$currentObject + ".sz"};
setAttr -l true -k false {$currentObject + ".v"};
}

pickWalk -d up;
$fingerGroups = `ls -sl`;
string $currentObject;
for ($currentObject in $fingerGroups)
{
setAttr -l true -k false {$currentObject + ".tx"};
setAttr -l true -k false {$currentObject + ".ty"};
setAttr -l true -k false {$currentObject + ".tz"};
setAttr -l true -k false {$currentObject + ".rx"};
setAttr -l true -k false {$currentObject + ".ry"};
setAttr -l true -k false {$currentObject + ".rz"};
setAttr -l true -k false {$currentObject + ".sx"};
setAttr -l true -k false {$currentObject + ".sy"};
setAttr -l true -k false {$currentObject + ".sz"};
setAttr -l true -k false {$currentObject + ".v"};
}
select -cl;

//TOES
if (`objExists ($name + "_lToe01J1")`)
select {$name + "_lToe01J1C"} {$name + "_lToe01J2C"} {$name + "_rToe01J1C"} {$name + "_rToe01J2C"};

if (`objExists ($name + "_lToe02J1")`)
{select -add {$name + "_lToe02J1C"} {$name + "_lToe02J2C"} {$name + "_lToe02J3C"} {$name + "_rToe02J1C"} {$name + "_rToe02J2C"} {$name + "_rToe02J3C"};}

if (`objExists ($name + "_lToe03J1")`)
{select -add {$name + "_lToe03J1C"} {$name + "_lToe03J2C"} {$name + "_lToe03J3C"} {$name + "_rToe03J1C"} {$name + "_rToe03J2C"} {$name + "_rToe03J3C"};}

if (`objExists ($name + "_lToe04J1")`)
{select -add {$name + "_lToe04J1C"} {$name + "_lToe04J2C"} {$name + "_lToe04J3C"} {$name + "_rToe04J1C"} {$name + "_rToe04J2C"} {$name + "_rToe04J3C"};}

if (`objExists ($name + "_lToe05J1")`)
{select -add {$name + "_lToe05J1C"} {$name + "_lToe05J2C"} {$name + "_lToe05J3C"} {$name + "_rToe05J1C"} {$name + "_rToe05J2C"} {$name + "_rToe05J3C"};}

if (`objExists ($name + "_lToe06J1")`)
{select -add {$name + "_lToe06J1C"} {$name + "_lToe06J2C"} {$name + "_lToe06J3C"} {$name + "_rToe06J1C"} {$name + "_rToe06J2C"} {$name + "_rToe06J3C"};}

if (`objExists ($name + "_lToe07J1")`)
{select -add {$name + "_lToe07J1C"} {$name + "_lToe07J2C"} {$name + "_lToe07J3C"} {$name + "_rToe07J1C"} {$name + "_rToe07J2C"} {$name + "_rToe07J3C"};}

if (`objExists ($name + "_lToe08J1")`)
{select -add {$name + "_lToe08J1C"} {$name + "_lToe08J2C"} {$name + "_lToe08J3C"} {$name + "_rToe08J1C"} {$name + "_rToe08J2C"} {$name + "_rToe08J3C"};}

if (`objExists ($name + "_lToe09J1")`)
{select -add {$name + "_lToe09J1C"} {$name + "_lToe09J2C"} {$name + "_lToe09J3C"} {$name + "_rToe09J1C"} {$name + "_rToe09J2C"} {$name + "_rToe09J3C"};}

if (`objExists ($name + "_lToe10J1")`)
{select -add {$name + "_lToe10J1C"} {$name + "_lToe10J2C"} {$name + "_lToe10J3C"} {$name + "_rToe10J1C"} {$name + "_rToe10J2C"} {$name + "_rToe10J3C"};}

$toes = `ls -sl`;
string $currentObject;
for ($currentObject in $toes)
{
setAttr -l true -k false {$currentObject + ".tx"};
setAttr -l true -k false {$currentObject + ".ty"};
setAttr -l true -k false {$currentObject + ".tz"};
setAttr -l true -k false {$currentObject + ".sx"};
setAttr -l true -k false {$currentObject + ".sy"};
setAttr -l true -k false {$currentObject + ".sz"};
setAttr -l true -k false {$currentObject + ".v"};
}

int $numToes = `size $toes`;
if ($numToes > 0)
{
pickWalk -d up;
$toeGroups = `ls -sl`;
string $currentObject;
for ($currentObject in $toeGroups)
{
setAttr -l true -k false {$currentObject + ".tx"};
setAttr -l true -k false {$currentObject + ".ty"};
setAttr -l true -k false {$currentObject + ".tz"};
setAttr -l true -k false {$currentObject + ".rx"};
setAttr -l true -k false {$currentObject + ".ry"};
setAttr -l true -k false {$currentObject + ".rz"};
setAttr -l true -k false {$currentObject + ".sx"};
setAttr -l true -k false {$currentObject + ".sy"};
setAttr -l true -k false {$currentObject + ".sz"};
setAttr -l true -k false {$currentObject + ".v"};
}
select -add {$name + "_MainC"};
parent;
}

//LEFT LEG
setAttr -l 1 -k 0 {$name + "_lHipFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lHipFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lHipFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lHipFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lHipFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lHipFKC.v"};

setAttr -l 1 -k 0 {$name + "_lKneeFKC.rx"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.ry"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.sx"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lKneeFKC.v"};

setAttr -l 1 -k 0 {$name + "_lAnkleFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.sx"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lAnkleFKC.v"};

setAttr -l 1 -k 0 {$name + "_lBallFKC.tx"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.ty"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.tz"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.sx"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.sy"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.sz"};
setAttr -l 1 -k 0 {$name + "_lBallFKC.v"};

setAttr -l 1 -k 0 {$name + "_lKneeIKC.rx"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.ry"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.rz"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.sx"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.sy"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.sz"};
setAttr -l 1 -k 0 {$name + "_lKneeIKC.v"};

setAttr -l 1 -k 0 {$name + "_lFootIKC.sx"};
setAttr -l 1 -k 0 {$name + "_lFootIKC.sy"};
setAttr -l 1 -k 0 {$name + "_lFootIKC.sz"};
setAttr -l 1 -k 0 {$name + "_lFootIKC.v"};

setAttr -l 1 -k 0 {$name + "_lToeIKC.tx"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.ty"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.tz"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.sx"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.sy"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.sz"};
setAttr -l 1 -k 0 {$name + "_lToeIKC.v"};

setAttr -l 1 -k 0 {$name + "_lLegSwitchC.rx"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.ry"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.rz"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.tx"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.ty"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.tz"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.sx"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.sy"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.sz"};
setAttr -l 1 -k 0 {$name + "_lLegSwitchC.v"};

//RIGHT ARM
setAttr -l 1 -k 0 {$name + "_rClavicleC.tx"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.ty"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.tz"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.sx"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.sy"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.sz"};
setAttr -l 1 -k 0 {$name + "_rClavicleC.v"};

setAttr -l 1 -k 0 {$name + "_rShoulderFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rShoulderFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rShoulderFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rShoulderFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rShoulderFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rShoulderFKC.v"};

setAttr -l 1 -k 0 {$name + "_rElbowFKC.rx"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.rz"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.sx"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rElbowFKC.v"};

setAttr -l 1 -k 0 {$name + "_rWristFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rWristFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rWristFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rWristFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rWristFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rWristFKC.v"};

setAttr -l 1 -k 0 {$name + "_rElbowIKC.rx"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.ry"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.rz"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.sx"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.sy"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.sz"};
setAttr -l 1 -k 0 {$name + "_rElbowIKC.v"};

setAttr -l 1 -k 0 {$name + "_rWristIKC.sy"};
setAttr -l 1 -k 0 {$name + "_rWristIKC.sz"};
setAttr -l 1 -k 0 {$name + "_rWristIKC.v"};

setAttr -l 1 -k 0 {$name + "_rPalmC.tx"};
setAttr -l 1 -k 0 {$name + "_rPalmC.ty"};
setAttr -l 1 -k 0 {$name + "_rPalmC.tz"};
setAttr -l 1 -k 0 {$name + "_rPalmC.sx"};
setAttr -l 1 -k 0 {$name + "_rPalmC.sy"};
setAttr -l 1 -k 0 {$name + "_rPalmC.sz"};
setAttr -l 1 -k 0 {$name + "_rPalmC.v"};

setAttr -l 1 -k 0 {$name + "_rArmSwitchC.tx"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.ty"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.tz"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.rx"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.ry"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.rz"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.sx"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.sy"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.sz"};
setAttr -l 1 -k 0 {$name + "_rArmSwitchC.v"};

//RIGHT LEG
setAttr -l 1 -k 0 {$name + "_rHipFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rHipFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rHipFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rHipFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rHipFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rHipFKC.v"};

setAttr -l 1 -k 0 {$name + "_rKneeFKC.rx"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.ry"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.sx"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rKneeFKC.v"};

setAttr -l 1 -k 0 {$name + "_rAnkleFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.sx"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rAnkleFKC.v"};

setAttr -l 1 -k 0 {$name + "_rBallFKC.tx"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.ty"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.tz"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.sx"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.sy"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.sz"};
setAttr -l 1 -k 0 {$name + "_rBallFKC.v"};

setAttr -l 1 -k 0 {$name + "_rKneeIKC.rx"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.ry"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.rz"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.sx"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.sy"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.sz"};
setAttr -l 1 -k 0 {$name + "_rKneeIKC.v"};

setAttr -l 1 -k 0 {$name + "_rFootIKC.sx"};
setAttr -l 1 -k 0 {$name + "_rFootIKC.sy"};
setAttr -l 1 -k 0 {$name + "_rFootIKC.sz"};
setAttr -l 1 -k 0 {$name + "_rFootIKC.v"};

setAttr -l 1 -k 0 {$name + "_rToeIKC.tx"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.ty"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.tz"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.sx"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.sy"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.sz"};
setAttr -l 1 -k 0 {$name + "_rToeIKC.v"};

setAttr -l 1 -k 0 {$name + "_rLegSwitchC.rx"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.ry"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.rz"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.tx"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.ty"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.tz"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.sx"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.sy"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.sz"};
setAttr -l 1 -k 0 {$name + "_rLegSwitchC.v"};

setAttr {$name + "_lShoulderJIK.v"} 0;
setAttr {$name + "_lShoulderJFK.v"} 0;
setAttr {$name + "_rShoulderJIK.v"} 0;
setAttr {$name + "_rShoulderJFK.v"} 0;
setAttr {$name + "_rHipJFK.v"} 0;
setAttr {$name + "_lHipJIK.v"} 0;
setAttr {$name + "_lHipJFK.v"} 0;
setAttr {$name + "_rHipJIK.v"} 0;
setAttr {$name + "_lArmIKHandle.v"} 0;
setAttr {$name + "_rArmIKHandle.v"} 0;

//LOCK GROUPS
select {$name + "_lFinger1J1CG"} {$name + "_lFinger1J2CG"} {$name + "_lFinger1J3CG"};
if (`objExists ($name + "_lThumbJ1")`)
	{select -add {$name + "_lThumbJ1CG"} {$name + "_lThumbJ2CG"} {$name + "_lThumbJ3CG"};}
if (`objExists ($name + "_lFinger2J1")`)
	{select -add {$name + "_lFinger2J1CG"} {$name + "_lFinger2J2CG"} {$name + "_lFinger2J3CG"};}
if (`objExists ($name + "_lFinger3J1")`)
	{select -add {$name + "_lFinger3J1CG"} {$name + "_lFinger3J2CG"} {$name + "_lFinger3J3CG"};}
if (`objExists ($name + "_lFinger4J1")`)
	{select -add {$name + "_lFinger4J1CG"} {$name + "_lFinger4J2CG"} {$name + "_lFinger4J3CG"};}
if (`objExists ($name + "_lFinger5J1")`)
	{select -add {$name + "_lFinger5J1CG"} {$name + "_lFinger5J2CG"} {$name + "_lFinger5J3CG"};}
if (`objExists ($name + "_lFinger6J1")`)
	{select -add {$name + "_lFinger6J1CG"} {$name + "_lFinger6J2CG"} {$name + "_lFinger6J3CG"};}
if (`objExists ($name + "_lFinger7J1")`)
	{select -add {$name + "_lFinger7J1CG"} {$name + "_lFinger7J2CG"} {$name + "_lFinger7J3CG"};}
if (`objExists ($name + "_lFinger8J1")`)
	{select -add {$name + "_lFinger8J1CG"} {$name + "_lFinger8J2CG"} {$name + "_lFinger8J3CG"};}
if (`objExists ($name + "_lFinger9J1")`)
	{select -add {$name + "_lFinger9J1CG"} {$name + "_lFinger9J2CG"} {$name + "_lFinger9J3CG"};}
string $lFingersCG[] = `ls -sl`;

select {$name + "_rFinger1J1CG"} {$name + "_rFinger1J2CG"} {$name + "_rFinger1J3CG"};
if (`objExists ($name + "_rThumbJ1")`)
	{select -add {$name + "_rThumbJ1CG"} {$name + "_rThumbJ2CG"} {$name + "_rThumbJ3CG"};}
if (`objExists ($name + "_rFinger2J1")`)
	{select -add {$name + "_rFinger2J1CG"} {$name + "_rFinger2J2CG"} {$name + "_rFinger2J3CG"};}
if (`objExists ($name + "_rFinger3J1")`)
	{select -add {$name + "_rFinger3J1CG"} {$name + "_rFinger3J2CG"} {$name + "_rFinger3J3CG"};}
if (`objExists ($name + "_rFinger4J1")`)
	{select -add {$name + "_rFinger4J1CG"} {$name + "_rFinger4J2CG"} {$name + "_rFinger4J3CG"};}
if (`objExists ($name + "_rFinger5J1")`)
	{select -add {$name + "_rFinger5J1CG"} {$name + "_rFinger5J2CG"} {$name + "_rFinger5J3CG"};}
if (`objExists ($name + "_rFinger6J1")`)
	{select -add {$name + "_rFinger6J1CG"} {$name + "_rFinger6J2CG"} {$name + "_rFinger6J3CG"};}
if (`objExists ($name + "_rFinger7J1")`)
	{select -add {$name + "_rFinger7J1CG"} {$name + "_rFinger7J2CG"} {$name + "_rFinger7J3CG"};}
if (`objExists ($name + "_rFinger8J1")`)
	{select -add {$name + "_rFinger8J1CG"} {$name + "_rFinger8J2CG"} {$name + "_rFinger8J3CG"};}
if (`objExists ($name + "_rFinger9J1")`)
	{select -add {$name + "_rFinger9J1CG"} {$name + "_rFinger9J2CG"} {$name + "_rFinger9J3CG"};}
string $rFingersCG[] = `ls -sl`;
select -cl;

if (`objExists ($name + "_lToe01J1")`)
	{select {$name + "_lToe01J1CG"} {$name + "_lToe01J2CG"};}
if (`objExists ($name + "_lToe02J1")`)
	{select -add {$name + "_lToe02J1CG"} {$name + "_lToe02J2CG"} {$name + "_lToe02J3CG"};}
if (`objExists ($name + "_lToe03J1")`)
	{select -add {$name + "_lToe03J1CG"} {$name + "_lToe03J2CG"} {$name + "_lToe03J3CG"};}
if (`objExists ($name + "_lToe04J1")`)
	{select -add {$name + "_lToe04J1CG"} {$name + "_lToe04J2CG"} {$name + "_lToe04J3CG"};}
if (`objExists ($name + "_lToe05J1")`)
	{select -add {$name + "_lToe05J1CG"} {$name + "_lToe05J2CG"} {$name + "_lToe05J3CG"};}
if (`objExists ($name + "_lToe06J1")`)
	{select -add {$name + "_lToe06J1CG"} {$name + "_lToe06J2CG"} {$name + "_lToe06J3CG"};}
if (`objExists ($name + "_lToe07J1")`)
	{select -add {$name + "_lToe07J1CG"} {$name + "_lToe07J2CG"} {$name + "_lToe07J3CG"};}
if (`objExists ($name + "_lToe08J1")`)
	{select -add {$name + "_lToe08J1CG"} {$name + "_lToe08J2CG"} {$name + "_lToe08J3CG"};}
if (`objExists ($name + "_lToe09J1")`)
	{select -add {$name + "_lToe09J1CG"} {$name + "_lToe09J2CG"} {$name + "_lToe09J3CG"};}
if (`objExists ($name + "_lToe10J1")`)
	{select -add {$name + "_lToe10J1CG"} {$name + "_lToe10J2CG"} {$name + "_lToe10J3CG"};}
string $lToesCG[] = `ls -sl`;
select -cl;

if (`objExists ($name + "_rToe01J1")`)
	{select {$name + "_rToe01J1CG"} {$name + "_rToe01J2CG"};}
if (`objExists ($name + "_rToe02J1")`)
	{select -add {$name + "_rToe02J1CG"} {$name + "_rToe02J2CG"} {$name + "_rToe02J3CG"};}
if (`objExists ($name + "_rToe03J1")`)
	{select -add {$name + "_rToe03J1CG"} {$name + "_rToe03J2CG"} {$name + "_rToe03J3CG"};}
if (`objExists ($name + "_rToe04J1")`)
	{select -add {$name + "_rToe04J1CG"} {$name + "_rToe04J2CG"} {$name + "_rToe04J3CG"};}
if (`objExists ($name + "_rToe05J1")`)
	{select -add {$name + "_rToe05J1CG"} {$name + "_rToe05J2CG"} {$name + "_rToe05J3CG"};}
if (`objExists ($name + "_rToe06J1")`)
	{select -add {$name + "_rToe06J1CG"} {$name + "_rToe06J2CG"} {$name + "_rToe06J3CG"};}
if (`objExists ($name + "_rToe07J1")`)
	{select -add {$name + "_rToe07J1CG"} {$name + "_rToe07J2CG"} {$name + "_rToe07J3CG"};}
if (`objExists ($name + "_rToe08J1")`)
	{select -add {$name + "_rToe08J1CG"} {$name + "_rToe08J2CG"} {$name + "_rToe08J3CG"};}
if (`objExists ($name + "_rToe09J1")`)
	{select -add {$name + "_rToe09J1CG"} {$name + "_rToe09J2CG"} {$name + "_rToe09J3CG"};}
if (`objExists ($name + "_rToe10J1")`)
	{select -add {$name + "_rToe10J1CG"} {$name + "_rToe10J2CG"} {$name + "_rToe10J3CG"};}
string $rToesCG[] = `ls -sl`;

select -add {$name + "_ROOTCG"} {$name + "_rLegSwitchCG"} {$name + "_lLegSwitchCG"} {$name + "_rFootIKCG"} {$name + "_rKneeIKCG"} {$name + "_rBallFKCG"} {$name + "_rAnkleFKCG"}
{$name + "_rKneeFKCG"} {$name + "_rHipFKCG"} {$name + "_rArmSwitchCG"} {$name + "_rElbowIKCG"} {$name + "_rWristJG1"} {$name + "_rWristJG2"} {$name + "_rWristIKCG"} {$name + "_rWristFKCG"} {$name + "_rElbowFKCG"}
{$name + "_rShoulderFKCG"} {$name + "_rClavicleCG"} {$name + "_lFootIKCG"} {$name + "_lKneeIKCG"} {$name + "_lBallFKCG"} {$name + "_lAnkleFKCG"} {$name + "_lKneeFKCG"}
{$name + "_lHipFKCG"} {$name + "_lArmSwitchCG"} {$name + "_lElbowIKCG"} {$name + "_lWristJG1"} {$name + "_lWristJG2"} {$name + "_lWristIKCG"} {$name + "_lWristFKCG"} {$name + "_lElbowFKCG"} {$name + "_lShoulderFKCG"}
{$name + "_lClavicleCG"}{$name + "_EyeAimCG"} {$name + "_JawCG"} {$name + "_HeadCG"} {$name + "_HeadCG2"} {$name + "_Spine01FKCG"} {$name + "_Neck01CG"} {$name + "_Neck02CG"}
{$name + "_Spine04FKCG"} {$name + "_Spine03FKCG"} {$name + "_Spine02FKCG"} {$name + "_lArmIKFKG"} {$name + "_rArmIKFKG"} {$name + "_lLegIKFKG"} {$name + "_rLegIKFKG"}
{$name + "_MainHipCG"} {$name + "_SpineMidIKCG"} {$name + "_SpineTopIKCG"} {$name + "_SpineMidIKCG2"} {$name + "_rLegLengthOriginLctr"} 
{$name + "_lWristJFKG1"} {$name + "_lWristJFKG2"} {$name + "_lElbowJFKG1"} {$name + "_lElbowJFKG2"} {$name + "_lWristJIKDummyG2"} {$name + "_lArmLengthOriginLctr"} {$name + "_lAnkleJFKG2"} 
{$name + "_lKneeJFKG2"} {$name + "_rWristJFKG1"} {$name + "_rWristJFKG2"} {$name + "_rElbowJFKG1"} {$name + "_rElbowJFKG2"} {$name + "_rWristJIKDummyG2"} {$name + "_rArmLengthOriginLctr"} 
{$name + "_rAnkleJFKG2"} {$name + "_rKneeJFKG2"} {$name + "_lLegLengthOriginLctr"} {$name + "_rShoulderFKCG2"} {$name + "_lShoulderFKCG2"} {$name + "ExtraNodes"};

string $selectedList[] = `ls -sl`;

string $currentObject;

for ($currentObject in $selectedList)
	
{
setAttr -l true -k false {$currentObject + ".tx"};
setAttr -l true -k false {$currentObject + ".ty"};
setAttr -l true -k false {$currentObject + ".tz"};
setAttr -l true -k false {$currentObject + ".rx"};
setAttr -l true -k false {$currentObject + ".ry"};
setAttr -l true -k false {$currentObject + ".rz"};
setAttr -l true -k false {$currentObject + ".sx"};
setAttr -l true -k false {$currentObject + ".sy"};
setAttr -l true -k false {$currentObject + ".sz"};
setAttr -l true -k false {$currentObject + ".v"};
}

select "*Finger*J1C";
if (`objExists ($name + "_lThumbJ1C")`)
	{select -add {$name + "_lThumbJ1C"} {$name + "_rThumbJ1C"};}
string $selectedList[] = `ls -sl`;

string $currentObject;

for ($currentObject in $selectedList)
	
{
setAttr -lock false -keyable true {$currentObject + ".sx"};
setAttr -lock false -keyable true {$currentObject + ".sy"};
setAttr -lock false -keyable true {$currentObject + ".sz"};
}

/////////////////////////////////SNAP ASSETS/////////////////////////////////
select -cl;
//LEFT WRIST FK LOCATOR
spaceLocator -n {$name + "_lWristFKLctr"};
parentConstraint {$name + "_lWristIKCG"} {$name + "_lWristFKLctr"};
delete {$name + "_lWristFKLctr_parentConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lWristFKLctr"};
parent {$name + "_lWristFKLctr"} {$name + "_lWristIKCG"};
parentConstraint {$name + "_lWristFKC"} {$name + "_lWristFKLctr"};

//LEFT WRIST IK LOCATOR
spaceLocator -n {$name + "_lWristIKLctr"};
parentConstraint {$name + "_lWristFKCG"} {$name + "_lWristIKLctr"};
delete {$name + "_lWristIKLctr_parentConstraint1"};
parent {$name + "_lWristIKLctr"} {$name + "_lWristFKCG"};
orientConstraint -mo {$name + "_lWristIKC"} {$name + "_lWristIKLctr"};
setAttr {$name + "_lWristIKLctr_orientConstraint1.interpType"} 2;

//LEFT ELBOW FK LOCATOR
spaceLocator -n {$name + "_lElbowFKAimLctr"};
parentConstraint {$name + "_lElbowIKC"} {$name + "_lElbowFKAimLctr"};
delete {$name + "_lElbowFKAimLctr_parentConstraint1"};
parent {$name + "_lElbowFKAimLctr"} {$name + "_lElbowIKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lElbowFKAimLctr"};
parentConstraint -mo {$name + "_lElbowFKC"} {$name + "_lShoulderFKC"} {$name + "_lElbowFKAimLctr"};

//LEFT SHOULDER FK LOCATOR
spaceLocator -n {$name + "_lShoulderFKOrientLctr"};
parentConstraint {$name + "_lShoulderJ"} {$name + "_lShoulderFKOrientLctr"};
delete {$name + "_lShoulderFKOrientLctr_parentConstraint1"};
parent {$name + "_lShoulderFKOrientLctr"} {$name + "_lShoulderFKCG"};
orientConstraint {$name + "_lShoulderJIK"} {$name + "_lShoulderFKOrientLctr"};

//RIGHT WRIST FK LOCATOR
spaceLocator -n {$name + "_rWristFKLctr"};
parentConstraint {$name + "_rWristIKCG"} {$name + "_rWristFKLctr"};
delete {$name + "_rWristFKLctr_parentConstraint1"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rWristFKLctr"};
parent {$name + "_rWristFKLctr"} {$name + "_rWristIKCG"};
parentConstraint {$name + "_rWristFKC"} {$name + "_rWristFKLctr"};

//RIGHT WRIST IK LOCATOR
spaceLocator -n {$name + "_rWristIKLctr"};
parentConstraint {$name + "_rWristFKCG"} {$name + "_rWristIKLctr"};
delete {$name + "_rWristIKLctr_parentConstraint1"};
parent {$name + "_rWristIKLctr"} {$name + "_rWristFKCG"};
orientConstraint -mo {$name + "_rWristIKC"} {$name + "_rWristIKLctr"};
setAttr {$name + "_rWristIKLctr_orientConstraint1.interpType"} 2;

//RIGHT ELBOW FK LOCATOR
spaceLocator -n {$name + "_rElbowFKAimLctr"};
parentConstraint {$name + "_rElbowIKC"} {$name + "_rElbowFKAimLctr"};
delete {$name + "_rElbowFKAimLctr_parentConstraint1"};
parent {$name + "_rElbowFKAimLctr"} {$name + "_rElbowIKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rElbowFKAimLctr"};
parentConstraint -mo {$name + "_rElbowFKC"} {$name + "_rShoulderFKC"} {$name + "_rElbowFKAimLctr"};

//LEFT SHOULDER FK LOCATOR
spaceLocator -n {$name + "_rShoulderFKOrientLctr"};
parentConstraint {$name + "_rShoulderJ"} {$name + "_rShoulderFKOrientLctr"};
delete {$name + "_rShoulderFKOrientLctr_parentConstraint1"};
parent {$name + "_rShoulderFKOrientLctr"} {$name + "_rShoulderFKCG"};
orientConstraint {$name + "_rShoulderJIK"} {$name + "_rShoulderFKOrientLctr"};

//LEFT ANKLE FK LOCATOR
spaceLocator -n {$name + "_lAnkleFKLctr"};
setAttr {$name + "_lAnkleFKLctr.rotateOrder"} 1;
group -n {$name + "_lAnkleFKLctrG"} {$name + "_lAnkleFKLctr"};
parentConstraint {$name + "_lFootIKC"} {$name + "_lAnkleFKLctrG"};
delete {$name + "_lAnkleFKLctrG_parentConstraint1"};
parentConstraint -mo {$name + "_lAnkleFKC"} {$name + "_lAnkleFKLctr"};

//LEFT ANKLE IK LOCATOR
spaceLocator -n {$name + "_lAnkleIKLctr"};
setAttr {$name + "_lAnkleIKLctr.rotateOrder"} 1;
group -n {$name + "_lAnkleIKLctrG"} {$name + "_lAnkleIKLctr"};
setAttr {$name + "_lAnkleIKLctrG.rotateOrder"} 1;
pointConstraint {$name + "_lAnkleJ"} {$name + "_lAnkleIKLctrG"};
delete {$name + "_lAnkleIKLctrG_pointConstraint1"};
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" -skip x -skip z {$name + "_lBallJ"} {$name + "_lToeJ"} {$name + "_lAnkleIKLctrG"};
delete {$name + "_lAnkleIKLctrG_aimConstraint1"};
parentConstraint -mo {$name + "_lAnkleFKCG"} {$name + "_lAnkleIKLctrG"};
orientConstraint -mo {$name + "_lFootIKC"} {$name + "_lAnkleIKLctr"};
setAttr {$name + "_lAnkleIKLctr_orientConstraint1.interpType"} 2;

//LEFT KNEE FK LOCATOR
spaceLocator -n {$name + "_lKneeFKAimLctr"};
parentConstraint {$name + "_lKneeIKC"} {$name + "_lKneeFKAimLctr"};
delete {$name + "_lKneeFKAimLctr_parentConstraint1"};
parent {$name + "_lKneeFKAimLctr"} {$name + "_lKneeIKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lKneeFKAimLctr"};
parentConstraint -mo {$name + "_lKneeFKC"} {$name + "_lHipFKC"} {$name + "_lKneeFKAimLctr"};

//LEFT HIP FK LOCATOR
spaceLocator -n {$name + "_lHipFKOrientLctr"};
parentConstraint {$name + "_lHipFKCG"} {$name + "_lHipFKOrientLctr"};
delete {$name + "_lHipFKOrientLctr_parentConstraint1"};
parent {$name + "_lHipFKOrientLctr"} {$name + "_lHipFKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_lHipFKOrientLctr"};
orientConstraint -mo {$name + "_lHipJIK"} {$name + "_lHipFKOrientLctr"};

//RIGHT ANKLE FK LOCATOR
spaceLocator -n {$name + "_rAnkleFKLctr"};
setAttr {$name + "_rAnkleFKLctr.rotateOrder"} 1;
group -n {$name + "_rAnkleFKLctrG"} {$name + "_rAnkleFKLctr"};
parentConstraint {$name + "_rFootIKC"} {$name + "_rAnkleFKLctrG"};
delete {$name + "_rAnkleFKLctrG_parentConstraint1"};
parentConstraint -mo {$name + "_rAnkleFKC"} {$name + "_rAnkleFKLctr"};

//RIGHT ANKLE IK LOCATOR
spaceLocator -n {$name + "_rAnkleIKLctr"};
setAttr {$name + "_rAnkleIKLctr.rotateOrder"} 1;
group -n {$name + "_rAnkleIKLctrG"} {$name + "_rAnkleIKLctr"};
setAttr {$name + "_rAnkleIKLctrG.rotateOrder"} 1;
pointConstraint {$name + "_rAnkleJ"} {$name + "_rAnkleIKLctrG"};
delete {$name + "_rAnkleIKLctrG_pointConstraint1"};
aimConstraint -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" -skip x -skip z {$name + "_rBallJ"} {$name + "_rToeJ"} {$name + "_rAnkleIKLctrG"};
delete {$name + "_rAnkleIKLctrG_aimConstraint1"};
setAttr {$name + "_rAnkleIKLctrG.rx"} 180;
int $rAnkleLctrG_ry = `getAttr {$name + "_rAnkleIKLctrG.ry"}`;
setAttr {$name + "_rAnkleIKLctrG.ry"} ($rAnkleLctrG_ry * -1); 
parentConstraint -mo {$name + "_rAnkleFKCG"} {$name + "_rAnkleIKLctrG"};
orientConstraint -mo {$name + "_rFootIKC"} {$name + "_rAnkleIKLctr"};
setAttr {$name + "_rAnkleIKLctr_orientConstraint1.interpType"} 2;;

//RIGHT KNEE FK LOCATOR
spaceLocator -n {$name + "_rKneeFKAimLctr"};
parentConstraint {$name + "_rKneeIKC"} {$name + "_rKneeFKAimLctr"};
delete {$name + "_rKneeFKAimLctr_parentConstraint1"};
parent {$name + "_rKneeFKAimLctr"} {$name + "_rKneeIKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rKneeFKAimLctr"};
parentConstraint -mo {$name + "_rKneeFKC"} {$name + "_rHipFKC"} {$name + "_rKneeFKAimLctr"};

//LEFT HIP FK LOCATOR
spaceLocator -n {$name + "_rHipFKOrientLctr"};
parentConstraint {$name + "_rHipFKCG"} {$name + "_rHipFKOrientLctr"};
delete {$name + "_rHipFKOrientLctr_parentConstraint1"};
parent {$name + "_rHipFKOrientLctr"} {$name + "_rHipFKCG"};
makeIdentity -apply true -t 1 -r 1 -s 1 {$name + "_rHipFKOrientLctr"};
orientConstraint -mo {$name + "_rHipJIK"} {$name + "_rHipFKOrientLctr"};

//HIDE SNAP LOCATORS
setAttr {$name + "_lShoulderFKOrientLctr.v"} 0;
setAttr {$name + "_rShoulderFKOrientLctr.v"} 0;
setAttr {$name + "_lElbowFKAimLctr.v"} 0;
setAttr {$name + "_rElbowFKAimLctr.v"} 0;
setAttr {$name + "_lWristIKLctr.v"} 0;
setAttr {$name + "_lWristFKLctr.v"} 0;
setAttr {$name + "_rWristIKLctr.v"} 0;
setAttr {$name + "_rWristFKLctr.v"} 0;
setAttr {$name + "_lKneeFKAimLctr.v"} 0;
setAttr {$name + "_rKneeFKAimLctr.v"} 0;
setAttr {$name + "_rAnkleFKLctr.v"} 0;
setAttr {$name + "_lAnkleIKLctr.v"} 0;
setAttr {$name + "_lAnkleFKLctr.v"} 0;
setAttr {$name + "_rAnkleIKLctr.v"} 0;

setAttr {$name + "_lShoulderIKLockLctr.v"} 0;
setAttr {$name + "_rShoulderIKLockLctr.v"} 0;
setAttr {$name + "_lHipIKLockLctr.v"} 0;
setAttr {$name + "_rHipIKLockLctr.v"} 0;
setAttr {$name + "_lHipFKOrientLctr.v"} 0;
setAttr {$name + "_rHipFKOrientLctr.v"} 0;


//PARENT TO MAIN CONTROL

parent
{$name + "_ROOTJ"} {$name + "_spine01J"} {$name + "_spine02J"} {$name + "_spine03J"} {$name + "_Spine04J"} {$name + "_Neck02J"} {$name + "_HeadJ"} {$name + "_NeckBtmClstrG"} {$name + "_HeadClstrG"}
{$name + "_ROOTCG"} {$name + "_MainHipCG"} {$name + "_Spine01FKCG"} {$name + "_SpineMidIKCG"} {$name + "_SpineTopIKCG"} {$name + "_Spine02FKCG"} {$name + "_Spine03FKCG"} {$name + "_Spine04FKCG"}
{$name + "_ribbonSpineG"} {$name + "_EyeAimCG"} {$name + "_JawCG"} {$name + "_HeadCG2"} {$name + "_Neck01CG"} {$name + "_NeckLengthAimLctr"} {$name + "_NeckUpLctr"}

{$name + "_lLegSwitchCG"} {$name + "_lArmIKHandle"} {$name + "_lFootIKCG"} {$name + "_lKneeIKCG"} {$name + "_lKneeIKC_TargetLctr"} {$name + "_lBallFKCG"} {$name + "_lAnkleFKCG"} {$name + "_lKneeFKCG"}
{$name + "_lHipFKCG"} {$name + "_lArmSwitchCG"} {$name + "_lElbowIKCG"} {$name + "_lElbowIKC_TargetLctr"} {$name + "_lWristIKCG"} {$name + "_lWristFKCG"} {$name + "_lElbowFKCG"} {$name + "_lShoulderFKCG2"}
{$name + "_lClavicleCG"} {$name + "_lArmIKFKG"} {$name + "_lLegIKFKG"} {$name + "_lWristJG2"} {$name + "_lWristJFKG2"} {$name + "_lElbowJFKG2"} {$name + "_lWristJIKDummyG2"}
{$name + "_lPalmCG"} {$name + "_lArmLengthOriginLctr"} {$name + "_lAnkleJFKG2"} {$name + "_lKneeJFKG2"} {$name + "_lLegLengthOriginLctr"}
{$name + "_lAnkleFKLctrG"} {$name + "_lToeIKCG"} {$name + "_lShoulderIKLockLctr"} {$name + "_lHipIKLockLctr"} {$name + "_lAnkleIKLctrG"}

{$name + "_rLegSwitchCG"} {$name + "_rArmIKHandle"} {$name + "_rFootIKCG"} {$name + "_rKneeIKCG"} {$name + "_rKneeIKC_TargetLctr"} {$name + "_rBallFKCG"} {$name + "_rAnkleFKCG"} {$name + "_rKneeFKCG"}
{$name + "_rHipFKCG"} {$name + "_rArmSwitchCG"} {$name + "_rElbowIKCG"} {$name + "_rElbowIKC_TargetLctr"} {$name + "_rWristIKCG"} {$name + "_rWristFKCG"} {$name + "_rElbowFKCG"} {$name + "_rShoulderFKCG2"}
{$name + "_rClavicleCG"} {$name + "_rArmIKFKG"} {$name + "_rLegIKFKG"} {$name + "_rWristJG2"} {$name + "_rWristJFKG2"} {$name + "_rElbowJFKG2"} {$name + "_rWristJIKDummyG2"}
{$name + "_rPalmCG"} {$name + "_rArmLengthOriginLctr"} {$name + "_rAnkleJFKG2"} {$name + "_rKneeJFKG2"} {$name + "_rLegLengthOriginLctr"}
{$name + "_rAnkleFKLctrG"} {$name + "_rToeIKCG"} {$name + "_rShoulderIKLockLctr"} {$name + "_rHipIKLockLctr"} {$name + "_rAnkleIKLctrG"}

{$name + "ExtraNodes"}

{$name + "_MainC"};

group -n $name {$name + "_MainC"};
//TOY STORY RELEASE DATE!
setAttr {$name + ".identification"} 1122;

//CREATE LAYERS
select {$name + "_ROOTJ"} {$name + "_spine01J"} {$name + "_spine02J"} {$name + "_spine03J"} {$name + "_Spine04J"} {$name + "_Neck02J"} {$name + "_HeadJ"} {$name + "_lWristJ"} {$name + "_rWristJ"} {$name + "_spineLengthCShapeOrig"};
createDisplayLayer -n {$name + "_JointsLayer"} -number 1 -nr;
//layerEditorLayerButtonTypeChange {$name + "_JointsLayer"};
//layerEditorLayerButtonTypeChange {$name + "_JointsLayer"};

select {$name + "_rLegSwitchC"} {$name + "_lLegSwitchC"} {$name + "_rFootIKC"} {$name + "_rToeIKC"} {$name + "_rKneeIKC"} {$name + "_rBallFKC"}
{$name + "_rAnkleFKC"} {$name + "_rKneeFKC"} {$name + "_rHipFKC"} {$name + "_rArmSwitchC"} {$name + "_rElbowIKC"} {$name + "_rWristIKC"} {$name + "_rWristFKC"} {$name + "_rElbowFKC"}
{$name + "_rShoulderFKC"} {$name + "_rClavicleC"} {$name + "_lFootIKC"} {$name + "_lToeIKC"} {$name + "_lKneeIKC"} {$name + "_lBallFKC"} {$name + "_lAnkleFKC"} {$name + "_lKneeFKC"}
{$name + "_lHipFKC"} {$name + "_lArmSwitchC"} {$name + "_lElbowIKC"} {$name + "_lWristIKC"} {$name + "_lWristFKC"} {$name + "_lElbowFKC"} {$name + "_lShoulderFKC"}
{$name + "_lClavicleC"}{$name + "_EyeAimC"} {$name + "_rEyeAimC"} {$name + "_lEyeAimC"} {$name + "_JawC"} {$name + "_HeadC"} {$name + "_Neck01C"} {$name + "_Neck02C"} {$name + "_NeckCurve"}
{$name + "_Spine04FKC"} {$name + "_Spine01FKC"} {$name + "_Spine02FKC"} {$name + "_Spine03FKC"} {$name + "_MainHipC"} {$name + "_ROOTC"} {$name + "_SpineMidIKC"}
{$name + "_SpineTopIKC"} {$name + "_spineLengthC"} $lFingersCG $rFingersCG $lToesCG $rToesCG {$name + "_lPalmC"} {$name + "_rPalmC"};
createDisplayLayer -n {$name + "_ControlsLayer"} -number 1 -nr;


//ASSIGN COLORS TO CONTROLS
assignColors;

$toonArm = `checkBox -q -v toonArms`;
if ($toonArm == 1)
{
createToonArms;
}

$toonLeg = `checkBox -q -v toonLegs`;
if ($toonLeg == 1)
{
createToonLegs;
}

$createMesh = `checkBox -q -v rapidMesh`;
if ($createMesh == 1)
{
rapidMesh;
}

if (`objExists ($name + "_geoSkinG")`)
{
select {$name + "_geoSkinG"} {$name + "_scaleGeoG"};
createDisplayLayer -name {$name + "_GeoLayer"} -number 1 -nr;
//layerEditorLayerButtonTypeChange {$name + "_GeoLayer"};
//layerEditorLayerButtonTypeChange {$name + "_GeoLayer"};
}

select -cl;
delete {$name + "_Spine01J"} {$name + "_spineStartLctr"};

//SET ALL CONSTRAINTS TO SHORTEST INTERPOLATION
select {$name + "*_parentConstraint1"};

string $selectedParentConstraints[] = `ls -sl`;
string $currentParentConstraint;
for ($currentParentConstraint in $selectedParentConstraints)
{setAttr {$currentParentConstraint + ".interpType"} 2;}

setAttr {$name + "_lWristIKCG_parentConstraint1.interpType"} 0;
setAttr {$name + "_rElbowIKCG_parentConstraint1.interpType"} 0;
setAttr {$name + "_rWristIKCG_parentConstraint1.interpType"} 0;
setAttr {$name + "_lElbowIKCG_parentConstraint1.interpType"} 0;
setAttr {$name + "_rKneeIKCG_parentConstraint1.interpType"} 0;
setAttr {$name + "_lKneeIKCG_parentConstraint1.interpType"} 0;

if (`objExists ($name + "_lShoulderCurveJ")`)
{
setAttr {$name + "_rElbowTwist75Lctr_parentConstraint1.interpType"} 0;
setAttr {$name + "_rElbowTwist25Lctr_parentConstraint1.interpType"} 0;
setAttr {$name + "_rElbowTwist50Lctr_parentConstraint1.interpType"} 0;
}

select -cl;
print "CONGRATULATIONS! RIG COMPLETED!\n";
//*/
changeLinearUnit $currentUnit;
}
}
else
{
	error "NEED A DUMMY RIG FIRST. NO ACTION TAKEN.\n";
}
}

global proc deleteRig()
{
if (`objExists DSN_MAIN`)
	{
	string $returnVal_Delete = `confirmDialog
		-title "Delete Dummy Rig"
		-message "Are you sure you want to delete your dummy rig?"
		-button "Delete Rig"
		-button "Cancel"
		-defaultButton "Delete Rig"
		-cancelButton "Cancel"`;
	
	if ($returnVal_Delete == "Delete Rig")
	{
		delete DSN_MAIN;
		delete DSN_rKneeParentUp_MD DSN_lElbowParentUp_MD
		DSN_rElbowParentUp_MD DSN_lKneeParentUp_MD ;
		warning "DUMMY RIG DELETED!\n";
	}
	}
	else
	{warning "NO DUMMY RIG TO DELETE!\n";}
}

global proc selectJoints()
{
	global string $charName;
string $name = `textField -q -text $charName`;

if (`objExists ($name + "_ROOTJ")`)
{
select {$name + "_lFinger1J1"} {$name + "_lFinger1J2"} {$name + "_lFinger1J3"} {$name + "_rFinger1J1"} {$name + "_rFinger1J2"} {$name + "_rFinger1J3"};
if (`objExists ($name + "_lThumbJ1")`)
	{select -add {$name + "_lThumbJ1"} {$name + "_lThumbJ2"} {$name + "_lThumbJ3"};}
if (`objExists ($name + "_lFinger2J1")`)
	{select -add {$name + "_lFinger2J1"} {$name + "_lFinger2J2"} {$name + "_lFinger2J3"};}
if (`objExists ($name + "_lFinger3J1")`)
	{select -add {$name + "_lFinger3J1"} {$name + "_lFinger3J2"} {$name + "_lFinger3J3"};}
if (`objExists ($name + "_lFinger4J1")`)
	{select -add {$name + "_lFinger4J1"} {$name + "_lFinger4J2"} {$name + "_lFinger4J3"};}
if (`objExists ($name + "_lFinger5J1")`)
	{select -add {$name + "_lFinger5J1"} {$name + "_lFinger5J2"} {$name + "_lFinger5J3"};}
if (`objExists ($name + "_lFinger6J1")`)
	{select -add {$name + "_lFinger6J1"} {$name + "_lFinger6J2"} {$name + "_lFinger6J3"};}
if (`objExists ($name + "_lFinger7J1")`)
	{select -add {$name + "_lFinger7J1"} {$name + "_lFinger7J2"} {$name + "_lFinger7J3"};}
if (`objExists ($name + "_lFinger8J1")`)
	{select -add {$name + "_lFinger8J1"} {$name + "_lFinger8J2"} {$name + "_lFinger8J3"};}
if (`objExists ($name + "_lFinger9J1")`)
	{select -add {$name + "_lFinger9J1"} {$name + "_lFinger9J2"} {$name + "_lFinger9J3"};}

if (`objExists ($name + "_rThumbJ1")`)
	{select -add {$name + "_rThumbJ1"} {$name + "_rThumbJ2"} {$name + "_rThumbJ3"};}
if (`objExists ($name + "_rFinger2J1")`)
	{select -add {$name + "_rFinger2J1"} {$name + "_rFinger2J2"} {$name + "_rFinger2J3"};}
if (`objExists ($name + "_rFinger3J1")`)
	{select -add {$name + "_rFinger3J1"} {$name + "_rFinger3J2"} {$name + "_rFinger3J3"};}
if (`objExists ($name + "_rFinger4J1")`)
	{select -add {$name + "_rFinger4J1"} {$name + "_rFinger4J2"} {$name + "_rFinger4J3"};}
if (`objExists ($name + "_rFinger5J1")`)
	{select -add {$name + "_rFinger5J1"} {$name + "_rFinger5J2"} {$name + "_rFinger5J3"};}
if (`objExists ($name + "_rFinger6J1")`)
	{select -add {$name + "_rFinger6J1"} {$name + "_rFinger6J2"} {$name + "_rFinger6J3"};}
if (`objExists ($name + "_rFinger7J1")`)
	{select -add {$name + "_rFinger7J1"} {$name + "_rFinger7J2"} {$name + "_rFinger7J3"};}
if (`objExists ($name + "_rFinger8J1")`)
	{select -add {$name + "_rFinger8J1"} {$name + "_rFinger8J2"} {$name + "_rFinger8J3"};}
if (`objExists ($name + "_rFinger9J1")`)
	{select -add {$name + "_rFinger9J1"} {$name + "_rFinger9J2"} {$name + "_rFinger9J3"};}


string $fingers[] = `ls -sl`;

if (`objExists ($name + "_lToe01J1")`)
	{select {$name + "_lToe01J1"} {$name + "_lToe01J2"};}
if (`objExists ($name + "_lToe02J1")`)
	{select -add {$name + "_lToe02J1"} {$name + "_lToe02J2"} {$name + "_lToe02J3"};}
if (`objExists ($name + "_lToe03J1")`)
	{select -add {$name + "_lToe03J1"} {$name + "_lToe03J2"} {$name + "_lToe03J3"};}
if (`objExists ($name + "_lToe04J1")`)
	{select -add {$name + "_lToe04J1"} {$name + "_lToe04J2"} {$name + "_lToe04J3"};}
if (`objExists ($name + "_lToe05J1")`)
	{select -add {$name + "_lToe05J1"} {$name + "_lToe05J2"} {$name + "_lToe05J3"};}
if (`objExists ($name + "_lToe06J1")`)
	{select -add {$name + "_lToe06J1"} {$name + "_lToe06J2"} {$name + "_lToe06J3"};}
if (`objExists ($name + "_lToe07J1")`)
	{select -add {$name + "_lToe07J1"} {$name + "_lToe07J2"} {$name + "_lToe07J3"};}
if (`objExists ($name + "_lToe08J1")`)
	{select -add {$name + "_lToe08J1"} {$name + "_lToe08J2"} {$name + "_lToe08J3"};}
if (`objExists ($name + "_lToe09J1")`)
	{select -add {$name + "_lToe09J1"} {$name + "_lToe09J2"} {$name + "_lToe09J3"};}
if (`objExists ($name + "_lToe10J1")`)
	{select -add {$name + "_lToe10J1"} {$name + "_lToe10J2"} {$name + "_lToe10J3"};}

if (`objExists ($name + "_rToe01J1")`)
	{select -add {$name + "_rToe01J1"} {$name + "_rToe01J2"};}
if (`objExists ($name + "_rToe02J1")`)
	{select -add {$name + "_rToe02J1"} {$name + "_rToe02J2"} {$name + "_rToe02J3"};}
if (`objExists ($name + "_rToe03J1")`)
	{select -add {$name + "_rToe03J1"} {$name + "_rToe03J2"} {$name + "_rToe03J3"};}
if (`objExists ($name + "_rToe04J1")`)
	{select -add {$name + "_rToe04J1"} {$name + "_rToe04J2"} {$name + "_rToe04J3"};}
if (`objExists ($name + "_rToe05J1")`)
	{select -add {$name + "_rToe05J1"} {$name + "_rToe05J2"} {$name + "_rToe05J3"};}
if (`objExists ($name + "_rToe06J1")`)
	{select -add {$name + "_rToe06J1"} {$name + "_rToe06J2"} {$name + "_rToe06J3"};}
if (`objExists ($name + "_rToe07J1")`)
	{select -add {$name + "_rToe07J1"} {$name + "_rToe07J2"} {$name + "_rToe07J3"};}
if (`objExists ($name + "_rToe08J1")`)
	{select -add {$name + "_rToe08J1"} {$name + "_rToe08J2"} {$name + "_rToe08J3"};}
if (`objExists ($name + "_rToe09J1")`)
	{select -add {$name + "_rToe09J1"} {$name + "_rToe09J2"} {$name + "_rToe09J3"};}
if (`objExists ($name + "_rToe10J1")`)
	{select -add {$name + "_rToe10J1"} {$name + "_rToe10J2"} {$name + "_rToe10J3"};}

string $toes[] = `ls -sl`;

select -add {$name + "_lHipJ"} {$name + "_lKneeJ"} {$name + "_lAnkleJ"} {$name + "_lBallJ"} {$name + "_rHipJ"} {$name + "_rKneeJ"} {$name + "_rAnkleJ"} {$name + "_rBallJ"}
{$name + "_spine01J"} {$name + "_spine02J"} {$name + "_spine03J"} {$name + "_Spine04J"} {$name + "_Neck01J"} {$name + "_Neck02J"} {$name + "_HeadJ"} {$name + "_JawJ"} {$name + "_lClavicleJ"} {$name + "_lShoulderJ"} {$name + "_lElbowJ"}
{$name + "_lForearmJ"} {$name + "_rClavicleJ"} {$name + "_rShoulderJ"} {$name + "_rElbowJ"} {$name + "_rForearmJ"} {$name + "_lWristJ"} {$name + "_rWristJ"} $fingers
$toes {$name + "_ROOTJ"};

if (`objExists ($name + "_lShoulderCurveJ")`)
{
select -add {$name + "_lShoulderCurveJ"} {$name + "_lLowerArmCurveJ1"} {$name + "_lLowerArmCurveJ2"} {$name + "_lLowerArmCurveJ3"}
{$name + "_lElbowCurveJ"} {$name + "_lUpperArmCurveJ1"} {$name + "_lUpperArmCurveJ2"} {$name + "_lUpperArmCurveJ3"}
{$name + "_rShoulderCurveJ"} {$name + "_rLowerArmCurveJ1"} {$name + "_rLowerArmCurveJ2"} {$name + "_rLowerArmCurveJ3"}
{$name + "_rElbowCurveJ"} {$name + "_rUpperArmCurveJ1"} {$name + "_rUpperArmCurveJ2"} {$name + "_rUpperArmCurveJ3"};
select -d {$name + "_lShoulderJ"} {$name + "_lElbowJ"} {$name + "_lForearmJ"} {$name + "_rShoulderJ"} {$name + "_rElbowJ"} {$name + "_rForearmJ"};
}

if (`objExists ($name + "_lHipCurveJ")`)
{
select -add {$name + "_lLowerLegCurveJ1"} {$name + "_lLowerLegCurveJ2"} {$name + "_lLowerLegCurveJ3"} {$name + "_lKneeCurveJ"}
{$name + "_lUpperLegCurveJ1"} {$name + "_lUpperLegCurveJ2"} {$name + "_lUpperLegCurveJ3"} {$name + "_lHipCurveJ"}
{$name + "_rLowerLegCurveJ1"} {$name + "_rLowerLegCurveJ2"} {$name + "_rLowerLegCurveJ3"} {$name + "_rKneeCurveJ"}
{$name + "_rUpperLegCurveJ1"} {$name + "_rUpperLegCurveJ2"} {$name + "_rUpperLegCurveJ3"} {$name + "_rHipCurveJ"};
select -d {$name + "_lHipJ"} {$name + "_lKneeJ"} {$name + "_rHipJ"} {$name + "_rKneeJ"};
}

print "SUCCESS! NOW SELECT THE GEOMETRY YOU WANT TO ATTACH TO THE RIG.\n";
//*/
}
else
{
error "NO JOINTS HAVE BEEN CREATED YET!\n";
}
}


//////////////////////////////////////////////////////////////////
////////////////////////Main Window///////////////////////////////
//////////////////////////////////////////////////////////////////

global proc CreateGUI()
{

global string $thumbG;
global string $fingersG;
global string $toesG;
global string $charName;

string $form = `formLayout`;
string $tabs = `tabLayout -cr false rigTab`;

//TAB 1
$dummySteps = `columnLayout dummySteps`;
//STEP 1.1
	frameLayout -label "Step 1.1: Fingers and Toes (Per Side)"
		-width 310;

    columnLayout -cw 50 -cat "left" 5;
    $thumbsG = `checkBox
		-label "Thumbs"
		-value 1
		thumbsOn`;
	$fingersG = `intSliderGrp
		-min 1
		-max 9
		-label "Fingers"
		-field true
		-cal 1 left
		-cw 1 50
		-value 4`;

	$toesG = `intSliderGrp
		-min 1
		-max 10
		-label "Toes"
		-field true
		-cal 1 left
		-cw 1 50
		-value 1`;

		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout

//STEP 1.2
	frameLayout -label "Step 1.2: Create Dummy Rig"
		-width 310;

		button -label "Create"
		-command "createDummies"
		createDummies;

		setParent ..;  //Back up to the columnLayout

//STEP 1.3
	frameLayout -label "Step 1.3: Pose Dummy Rig"
		-width 310;

		rowColumnLayout -nc 3;
		button -label "Right to Left"
		-command "rightToLeft"
		rightToLeft;
		button -label "Reset"
		-command "reset"
		reset;		
		button -label "Left to Right"
		-command "leftToRight"
		leftToRight;

		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout

//TAB 2
$rigSteps = `columnLayout rigSteps`;
//STEP 2.1
	frameLayout -label "Step 2.1: Character Name"
		-width 310;
	
	columnLayout -cw 50 -cat "left" 5;
	$charName = `textField
		-width 296`;
		
		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout
		

//STEP 2.2
	frameLayout -label "Step 2.2: Optional Geometry for Animation"
		-width 310;

    columnLayout -cw 50 -cat "left" 5;
    $geoG = `checkBox
		-label "Create Rapid Mesh"
		-value 0
		rapidMesh`;


		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout

//STEP 2.3
	frameLayout -label "Step 2.3: Enable Toon Limbs"
		-width 310;

    rowColumnLayout -nc 2;
    $toonArms = `checkBox
		-label "Toon Arms"
		-value 0
		toonArms`;

	//columnLayout -cw 50 -cat "left" 5;
    $toonLegs = `checkBox
		-label "Toon Legs"
		-value 0
		toonLegs`;
		
		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout
	
//STEP 2.4
	frameLayout -label "Step 2.4: Create Character Rig"
		-width 310;

		rowColumnLayout -nc 2;
		button -label "Generate Rig"
		-command "prompts"
		prompts;
		button -label "Delete Dummies"
		-command "deleteRig"
		deleteRig;

		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout

//STEP 2.5
	frameLayout -label "Step 2.5: Skin Geometry to Rig"
		-width 310;

		button -label "Select Skinning Joints"
		-command "selectJoints"
		selectJoints;

			setParent ..;  //Back up to the columnLayout
		setParent ..;  //Back up to the columnLayout
	setParent ..;  //Back up to the columnLayout

tabLayout -edit -tabLabel $dummySteps "Dummy Rig" -tabLabel $rigSteps "Generate Rig" $tabs;
}


//MAIN PROCEDURE FOR WINDOW
global proc DSN_RapidRig()                                        
{
if (`window -exists DSN_BiPed`) 
{
	deleteUI DSN_BiPed; 
}
window -title "DSN_RapidRig BiPed"
	-wh 310 227
	-rtf on
	-mnb false
	-mxb false
	-s 0
	DSN_BiPed;

CreateGUI();

showWindow DSN_BiPed;
window -e -w 310 -h 227 DSN_BiPed;
}

DSN_RapidRig();
