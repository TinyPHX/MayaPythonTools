// qstyleoption.sip generated by MetaSIP on Fri Mar  1 21:46:00 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qstyleoption.h>
%End

class QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

%ConvertToSubClassCode
    switch (sipCpp->type)
    {
    case QStyleOption::SO_Button:
        sipType = sipType_QStyleOptionButton;
        break;
    
    case QStyleOption::SO_ComboBox:
        sipType = sipType_QStyleOptionComboBox;
        break;
    
    case QStyleOption::SO_DockWidget:
        sipType = sipType_QStyleOptionDockWidget;
        break;
    
    case QStyleOption::SO_FocusRect:
        sipType = sipType_QStyleOptionFocusRect;
        break;
    
    case QStyleOption::SO_Frame:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionFrame;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040500
        case 3:
            sipType = sipType_QStyleOptionFrameV3;
            break;
    #endif
    
    #if QT_VERSION >= 0x040100
        case 2:
            sipType = sipType_QStyleOptionFrameV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionFrame;
        }
        break;
    #endif
    
    #if QT_VERSION >= 0x040200
    case QStyleOption::SO_GraphicsItem:
        sipType = sipType_QStyleOptionGraphicsItem;
        break;
    #endif
    
    #if QT_VERSION >= 0x040100
    case QStyleOption::SO_GroupBox:
        sipType = sipType_QStyleOptionGroupBox;
        break;
    #endif
    
    case QStyleOption::SO_Header:
        sipType = sipType_QStyleOptionHeader;
        break;
    
    case QStyleOption::SO_MenuItem:
        sipType = sipType_QStyleOptionMenuItem;
        break;
    
    case QStyleOption::SO_ProgressBar:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionProgressBar;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040100
        case 2:
            sipType = sipType_QStyleOptionProgressBarV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionProgressBar;
        }
        break;
    #endif
    
    case QStyleOption::SO_RubberBand:
        sipType = sipType_QStyleOptionRubberBand;
        break;
    
    #if QT_VERSION >= 0x040200
    case QStyleOption::SO_SizeGrip:
        sipType = sipType_QStyleOptionSizeGrip;
        break;
    #endif
    
    case QStyleOption::SO_Slider:
        sipType = sipType_QStyleOptionSlider;
        break;
    
    case QStyleOption::SO_SpinBox:
        sipType = sipType_QStyleOptionSpinBox;
        break;
    
    case QStyleOption::SO_Tab:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionTab;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040500
        case 3:
            sipType = sipType_QStyleOptionTabV3;
            break;
    #endif
    
    #if QT_VERSION >= 0x040100
        case 2:
            sipType = sipType_QStyleOptionTabV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionTab;
        }
        break;
    #endif
    
    case QStyleOption::SO_TabBarBase:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionTabBarBase;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040500
        case 2:
            sipType = sipType_QStyleOptionTabBarBaseV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionTabBarBase;
        }
        break;
    #endif
    
    case QStyleOption::SO_TabWidgetFrame:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionTabWidgetFrame;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040600
        case 2:
            sipType = sipType_QStyleOptionTabWidgetFrameV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionTabWidgetFrame;
        }
        break;
    #endif
    
    case QStyleOption::SO_TitleBar:
        sipType = sipType_QStyleOptionTitleBar;
        break;
    
    #if QT_VERSION >= 0x040100
    case QStyleOption::SO_ToolBar:
        sipType = sipType_QStyleOptionToolBar;
        break;
    #endif
    
    case QStyleOption::SO_ToolBox:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionToolBox;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040300
        case 2:
            sipType = sipType_QStyleOptionToolBoxV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionToolBox;
        }
        break;
    #endif
    
    case QStyleOption::SO_ToolButton:
        sipType = sipType_QStyleOptionToolButton;
        break;
    
    case QStyleOption::SO_ViewItem:
    #if QT_VERSION >= 0x050000
        sipType = sipType_QStyleOptionViewItem;
        break;
    #else
        switch (sipCpp->version)
        {
    #if QT_VERSION >= 0x040400
        case 4:
            sipType = sipType_QStyleOptionViewItemV4;
            break;
    #endif
    
    #if QT_VERSION >= 0x040300
        case 3:
            sipType = sipType_QStyleOptionViewItemV3;
            break;
    #endif
    
    #if QT_VERSION >= 0x040200
        case 2:
            sipType = sipType_QStyleOptionViewItemV2;
            break;
    #endif
    
        default:
            sipType = sipType_QStyleOptionViewItem;
        }
        break;
    #endif
    
    default:
        if ((sipCpp->type & QStyleOption::SO_ComplexCustomBase) == QStyleOption::SO_ComplexCustomBase)
            sipType = sipType_QStyleOptionComplex;
        else
            sipType = 0;
    }
%End

public:
    enum OptionType
    {
        SO_Default,
        SO_FocusRect,
        SO_Button,
        SO_Tab,
        SO_MenuItem,
        SO_Frame,
        SO_ProgressBar,
        SO_ToolBox,
        SO_Header,
%If (- Qt_5_0_0)
        SO_Q3DockWindow,
%End
        SO_DockWidget,
%If (- Qt_5_0_0)
        SO_Q3ListViewItem,
%End
        SO_ViewItem,
        SO_TabWidgetFrame,
        SO_TabBarBase,
        SO_RubberBand,
        SO_ToolBar,
        SO_Complex,
        SO_Slider,
        SO_SpinBox,
        SO_ToolButton,
        SO_ComboBox,
%If (- Qt_5_0_0)
        SO_Q3ListView,
%End
        SO_TitleBar,
        SO_GroupBox,
        SO_ComplexCustomBase,
%If (Qt_4_2_0 -)
        SO_GraphicsItem,
%End
%If (Qt_4_2_0 -)
        SO_SizeGrip,
%End
        SO_CustomBase,
    };

%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    int version;
    int type;
    QFlags<QStyle::StateFlag> state;
    Qt::LayoutDirection direction;
    QRect rect;
    QFontMetrics fontMetrics;
    QPalette palette;
%If (Qt_5_0_0 -)
    QObject *styleObject;
%End
    QStyleOption(int version = QStyleOption::Version, int type = SO_Default);
    QStyleOption(const QStyleOption &other);
    ~QStyleOption();
    void init(const QWidget *w);
    void initFrom(const QWidget *w);
};

class QStyleOptionFocusRect : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QColor backgroundColor;
    QStyleOptionFocusRect();
    QStyleOptionFocusRect(const QStyleOptionFocusRect &other);
};

class QStyleOptionFrame : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
%If (Qt_5_0_0 -)

    enum FrameFeature
    {
        None,
        Flat,
        Rounded,
    };

%End
%If (Qt_5_0_0 -)
    typedef QFlags<QStyleOptionFrame::FrameFeature> FrameFeatures;
%End
%If (Qt_5_0_0 -)
    QFlags<QStyleOptionFrame::FrameFeature> features;
%End
%If (Qt_5_0_0 -)
    QFrame::Shape frameShape;
%End
    int lineWidth;
    int midLineWidth;
    QStyleOptionFrame();
    QStyleOptionFrame(const QStyleOptionFrame &other);
};

%If (Qt_5_0_0 -)
QFlags<QStyleOptionFrame::FrameFeature> operator|(QStyleOptionFrame::FrameFeature f1, QFlags<QStyleOptionFrame::FrameFeature> f2);
%End
%If (- Qt_5_0_0)

class QStyleOptionFrameV2 : QStyleOptionFrame
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum FrameFeature
    {
        None,
        Flat,
    };

    typedef QFlags<QStyleOptionFrameV2::FrameFeature> FrameFeatures;
    QFlags<QStyleOptionFrameV2::FrameFeature> features;
    QStyleOptionFrameV2();
    QStyleOptionFrameV2(const QStyleOptionFrameV2 &other);
    QStyleOptionFrameV2(const QStyleOptionFrame &other);
};

%End
%If (- Qt_5_0_0)
QFlags<QStyleOptionFrameV2::FrameFeature> operator|(QStyleOptionFrameV2::FrameFeature f1, QFlags<QStyleOptionFrameV2::FrameFeature> f2);
%End

class QStyleOptionTabWidgetFrame : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    int lineWidth;
    int midLineWidth;
    QTabBar::Shape shape;
    QSize tabBarSize;
    QSize rightCornerWidgetSize;
    QSize leftCornerWidgetSize;
%If (Qt_5_0_0 -)
    QRect tabBarRect;
%End
%If (Qt_5_0_0 -)
    QRect selectedTabRect;
%End
    QStyleOptionTabWidgetFrame();
    QStyleOptionTabWidgetFrame(const QStyleOptionTabWidgetFrame &other);
};

class QStyleOptionTabBarBase : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QTabBar::Shape shape;
    QRect tabBarRect;
    QRect selectedTabRect;
%If (Qt_5_0_0 -)
    bool documentMode;
%End
    QStyleOptionTabBarBase();
    QStyleOptionTabBarBase(const QStyleOptionTabBarBase &other);
};

class QStyleOptionHeader : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum SectionPosition
    {
        Beginning,
        Middle,
        End,
        OnlyOneSection,
    };

    enum SelectedPosition
    {
        NotAdjacent,
        NextIsSelected,
        PreviousIsSelected,
        NextAndPreviousAreSelected,
    };

    enum SortIndicator
    {
        None,
        SortUp,
        SortDown,
    };

    int section;
    QString text;
    Qt::Alignment textAlignment;
    QIcon icon;
    Qt::Alignment iconAlignment;
    QStyleOptionHeader::SectionPosition position;
    QStyleOptionHeader::SelectedPosition selectedPosition;
    QStyleOptionHeader::SortIndicator sortIndicator;
    Qt::Orientation orientation;
    QStyleOptionHeader();
    QStyleOptionHeader(const QStyleOptionHeader &other);
};

class QStyleOptionButton : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum ButtonFeature
    {
        None,
        Flat,
        HasMenu,
        DefaultButton,
        AutoDefaultButton,
%If (Qt_4_3_0 -)
        CommandLinkButton,
%End
    };

    typedef QFlags<QStyleOptionButton::ButtonFeature> ButtonFeatures;
    QFlags<QStyleOptionButton::ButtonFeature> features;
    QString text;
    QIcon icon;
    QSize iconSize;
    QStyleOptionButton();
    QStyleOptionButton(const QStyleOptionButton &other);
};

QFlags<QStyleOptionButton::ButtonFeature> operator|(QStyleOptionButton::ButtonFeature f1, QFlags<QStyleOptionButton::ButtonFeature> f2);

class QStyleOptionTab : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum TabPosition
    {
        Beginning,
        Middle,
        End,
        OnlyOneTab,
    };

    enum SelectedPosition
    {
        NotAdjacent,
        NextIsSelected,
        PreviousIsSelected,
    };

    enum CornerWidget
    {
        NoCornerWidgets,
        LeftCornerWidget,
        RightCornerWidget,
    };

    typedef QFlags<QStyleOptionTab::CornerWidget> CornerWidgets;
    QTabBar::Shape shape;
    QString text;
    QIcon icon;
    int row;
    QStyleOptionTab::TabPosition position;
    QStyleOptionTab::SelectedPosition selectedPosition;
    QFlags<QStyleOptionTab::CornerWidget> cornerWidgets;
%If (Qt_5_0_0 -)
    QSize iconSize;
%End
%If (Qt_5_0_0 -)
    bool documentMode;
%End
%If (Qt_5_0_0 -)
    QSize leftButtonSize;
%End
%If (Qt_5_0_0 -)
    QSize rightButtonSize;
%End
%If (Qt_5_0_0 -)

    enum TabFeature
    {
        None,
        HasFrame,
    };

%End
%If (Qt_5_0_0 -)
    typedef QFlags<QStyleOptionTab::TabFeature> TabFeatures;
%End
%If (Qt_5_0_0 -)
    QFlags<QStyleOptionTab::TabFeature> features;
%End
    QStyleOptionTab();
    QStyleOptionTab(const QStyleOptionTab &other);
};

QFlags<QStyleOptionTab::CornerWidget> operator|(QStyleOptionTab::CornerWidget f1, QFlags<QStyleOptionTab::CornerWidget> f2);
%If (- Qt_5_0_0)

class QStyleOptionTabV2 : QStyleOptionTab
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QSize iconSize;
    QStyleOptionTabV2();
    QStyleOptionTabV2(const QStyleOptionTabV2 &other);
    QStyleOptionTabV2(const QStyleOptionTab &other);
};

%End

class QStyleOptionProgressBar : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    int minimum;
    int maximum;
    int progress;
    QString text;
    Qt::Alignment textAlignment;
    bool textVisible;
%If (Qt_5_0_0 -)
    Qt::Orientation orientation;
%End
%If (Qt_5_0_0 -)
    bool invertedAppearance;
%End
%If (Qt_5_0_0 -)
    bool bottomToTop;
%End
    QStyleOptionProgressBar();
    QStyleOptionProgressBar(const QStyleOptionProgressBar &other);
};

%If (- Qt_5_0_0)

class QStyleOptionProgressBarV2 : QStyleOptionProgressBar
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    Qt::Orientation orientation;
    bool invertedAppearance;
    bool bottomToTop;
    QStyleOptionProgressBarV2();
    QStyleOptionProgressBarV2(const QStyleOptionProgressBar &other);
    QStyleOptionProgressBarV2(const QStyleOptionProgressBarV2 &other);
};

%End

class QStyleOptionMenuItem : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum MenuItemType
    {
        Normal,
        DefaultItem,
        Separator,
        SubMenu,
        Scroller,
        TearOff,
        Margin,
        EmptyArea,
    };

    enum CheckType
    {
        NotCheckable,
        Exclusive,
        NonExclusive,
    };

    QStyleOptionMenuItem::MenuItemType menuItemType;
    QStyleOptionMenuItem::CheckType checkType;
    bool checked;
    bool menuHasCheckableItems;
    QRect menuRect;
    QString text;
    QIcon icon;
    int maxIconWidth;
    int tabWidth;
    QFont font;
    QStyleOptionMenuItem();
    QStyleOptionMenuItem(const QStyleOptionMenuItem &other);
};

class QStyleOptionDockWidget : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QString title;
    bool closable;
    bool movable;
    bool floatable;
%If (Qt_5_0_0 -)
    bool verticalTitleBar;
%End
    QStyleOptionDockWidget();
    QStyleOptionDockWidget(const QStyleOptionDockWidget &other);
};

class QStyleOptionViewItem : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum Position
    {
        Left,
        Right,
        Top,
        Bottom,
    };

    Qt::Alignment displayAlignment;
    Qt::Alignment decorationAlignment;
    Qt::TextElideMode textElideMode;
    QStyleOptionViewItem::Position decorationPosition;
    QSize decorationSize;
    QFont font;
    bool showDecorationSelected;
%If (Qt_5_0_0 -)

    enum ViewItemFeature
    {
        None,
        WrapText,
        Alternate,
        HasCheckIndicator,
        HasDisplay,
        HasDecoration,
    };

%End
%If (Qt_5_0_0 -)
    typedef QFlags<QStyleOptionViewItem::ViewItemFeature> ViewItemFeatures;
%End
%If (Qt_5_0_0 -)
    QFlags<QStyleOptionViewItem::ViewItemFeature> features;
%End
%If (Qt_5_0_0 -)
    QLocale locale;
%End
%If (Qt_5_0_0 -)
    const QWidget *widget;
%End
%If (Qt_5_0_0 -)

    enum ViewItemPosition
    {
        Invalid,
        Beginning,
        Middle,
        End,
        OnlyOne,
    };

%End
%If (Qt_5_0_0 -)
    QModelIndex index;
%End
%If (Qt_5_0_0 -)
    Qt::CheckState checkState;
%End
%If (Qt_5_0_0 -)
    QIcon icon;
%End
%If (Qt_5_0_0 -)
    QString text;
%End
%If (Qt_5_0_0 -)
    QStyleOptionViewItem::ViewItemPosition viewItemPosition;
%End
%If (Qt_5_0_0 -)
    QBrush backgroundBrush;
%End
    QStyleOptionViewItem();
    QStyleOptionViewItem(const QStyleOptionViewItem &other);
};

%If (Qt_5_0_0 -)
QFlags<QStyleOptionViewItem::ViewItemFeature> operator|(QStyleOptionViewItem::ViewItemFeature f1, QFlags<QStyleOptionViewItem::ViewItemFeature> f2);
%End

class QStyleOptionToolBox : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QString text;
    QIcon icon;
%If (Qt_5_0_0 -)

    enum TabPosition
    {
        Beginning,
        Middle,
        End,
        OnlyOneTab,
    };

%End
%If (Qt_5_0_0 -)

    enum SelectedPosition
    {
        NotAdjacent,
        NextIsSelected,
        PreviousIsSelected,
    };

%End
%If (Qt_5_0_0 -)
    QStyleOptionToolBox::TabPosition position;
%End
%If (Qt_5_0_0 -)
    QStyleOptionToolBox::SelectedPosition selectedPosition;
%End
    QStyleOptionToolBox();
    QStyleOptionToolBox(const QStyleOptionToolBox &other);
};

class QStyleOptionRubberBand : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QRubberBand::Shape shape;
    bool opaque;
    QStyleOptionRubberBand();
    QStyleOptionRubberBand(const QStyleOptionRubberBand &other);
};

class QStyleOptionComplex : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QFlags<QStyle::SubControl> subControls;
    QFlags<QStyle::SubControl> activeSubControls;
    QStyleOptionComplex(int version = QStyleOptionComplex::Version, int type = SO_Complex);
    QStyleOptionComplex(const QStyleOptionComplex &other);
};

class QStyleOptionSlider : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    Qt::Orientation orientation;
    int minimum;
    int maximum;
    QSlider::TickPosition tickPosition;
    int tickInterval;
    bool upsideDown;
    int sliderPosition;
    int sliderValue;
    int singleStep;
    int pageStep;
    qreal notchTarget;
    bool dialWrapping;
    QStyleOptionSlider();
    QStyleOptionSlider(const QStyleOptionSlider &other);
};

class QStyleOptionSpinBox : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QAbstractSpinBox::ButtonSymbols buttonSymbols;
    QFlags<QAbstractSpinBox::StepEnabledFlag> stepEnabled;
    bool frame;
    QStyleOptionSpinBox();
    QStyleOptionSpinBox(const QStyleOptionSpinBox &other);
};

class QStyleOptionToolButton : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum ToolButtonFeature
    {
        None,
        Arrow,
        Menu,
        PopupDelay,
%If (Qt_4_3_0 -)
        MenuButtonPopup,
%End
%If (Qt_4_3_0 -)
        HasMenu,
%End
    };

    typedef QFlags<QStyleOptionToolButton::ToolButtonFeature> ToolButtonFeatures;
    QFlags<QStyleOptionToolButton::ToolButtonFeature> features;
    QIcon icon;
    QSize iconSize;
    QString text;
    Qt::ArrowType arrowType;
    Qt::ToolButtonStyle toolButtonStyle;
    QPoint pos;
    QFont font;
    QStyleOptionToolButton();
    QStyleOptionToolButton(const QStyleOptionToolButton &other);
};

QFlags<QStyleOptionToolButton::ToolButtonFeature> operator|(QStyleOptionToolButton::ToolButtonFeature f1, QFlags<QStyleOptionToolButton::ToolButtonFeature> f2);

class QStyleOptionComboBox : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    bool editable;
    QRect popupRect;
    bool frame;
    QString currentText;
    QIcon currentIcon;
    QSize iconSize;
    QStyleOptionComboBox();
    QStyleOptionComboBox(const QStyleOptionComboBox &other);
};

class QStyleOptionTitleBar : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QString text;
    QIcon icon;
    int titleBarState;
%If (Qt_4_2_0 -)
    Qt::WindowFlags titleBarFlags;
%End
%If (- Qt_4_2_0)
    Qt::WFlags titleBarFlags;
%End
    QStyleOptionTitleBar();
    QStyleOptionTitleBar(const QStyleOptionTitleBar &other);
};

class QStyleHintReturn
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum HintReturnType
    {
        SH_Default,
        SH_Mask,
%If (Qt_4_3_0 -)
        SH_Variant,
%End
    };

%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QStyleHintReturn(int version = QStyleOption::Version, int type = SH_Default);
    ~QStyleHintReturn();
    int version;
    int type;
};

class QStyleHintReturnMask : QStyleHintReturn
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
    QStyleHintReturnMask();
%If (Qt_5_0_0 -)
    ~QStyleHintReturnMask();
%End
    QRegion region;
};

class QStyleOptionToolBar : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End

    enum ToolBarPosition
    {
        Beginning,
        Middle,
        End,
        OnlyOne,
    };

    enum ToolBarFeature
    {
        None,
        Movable,
    };

    typedef QFlags<QStyleOptionToolBar::ToolBarFeature> ToolBarFeatures;
    QStyleOptionToolBar::ToolBarPosition positionOfLine;
    QStyleOptionToolBar::ToolBarPosition positionWithinLine;
    Qt::ToolBarArea toolBarArea;
    QFlags<QStyleOptionToolBar::ToolBarFeature> features;
    int lineWidth;
    int midLineWidth;
    QStyleOptionToolBar();
    QStyleOptionToolBar(const QStyleOptionToolBar &other);
};

QFlags<QStyleOptionToolBar::ToolBarFeature> operator|(QStyleOptionToolBar::ToolBarFeature f1, QFlags<QStyleOptionToolBar::ToolBarFeature> f2);

class QStyleOptionGroupBox : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
%If (Qt_4_2_0 -)

    enum StyleOptionType
    {
        Type,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Type,
    };

%End
%If (Qt_4_2_0 -)

    enum StyleOptionVersion
    {
        Version,
    };

%End
%If (- Qt_4_2_0)

    enum
    {
        Version,
    };

%End
%If (Qt_5_0_0 -)
    QFlags<QStyleOptionFrame::FrameFeature> features;
%End
%If (- Qt_5_0_0)
    QFlags<QStyleOptionFrameV2::FrameFeature> features;
%End
    QString text;
    Qt::Alignment textAlignment;
    QColor textColor;
    int lineWidth;
    int midLineWidth;
    QStyleOptionGroupBox();
    QStyleOptionGroupBox(const QStyleOptionGroupBox &other);
};

%If (Qt_4_2_0 - Qt_5_0_0)

class QStyleOptionViewItemV2 : QStyleOptionViewItem
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    enum ViewItemFeature
    {
        None,
        WrapText,
        Alternate,
%If (Qt_4_4_0 -)
        HasCheckIndicator,
%End
%If (Qt_4_4_0 -)
        HasDisplay,
%End
%If (Qt_4_4_0 -)
        HasDecoration,
%End
    };

    typedef QFlags<QStyleOptionViewItemV2::ViewItemFeature> ViewItemFeatures;
    QFlags<QStyleOptionViewItemV2::ViewItemFeature> features;
    QStyleOptionViewItemV2();
    QStyleOptionViewItemV2(const QStyleOptionViewItemV2 &other);
    QStyleOptionViewItemV2(const QStyleOptionViewItem &other);
};

%End
%If (Qt_4_2_0 - Qt_5_0_0)
QFlags<QStyleOptionViewItemV2::ViewItemFeature> operator|(QStyleOptionViewItemV2::ViewItemFeature f1, QFlags<QStyleOptionViewItemV2::ViewItemFeature> f2);
%End
%If (Qt_4_2_0 -)

class QStyleOptionSizeGrip : QStyleOptionComplex
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionType
    {
        Type,
    };

    enum StyleOptionVersion
    {
        Version,
    };

    Qt::Corner corner;
    QStyleOptionSizeGrip();
    QStyleOptionSizeGrip(const QStyleOptionSizeGrip &other);
};

%End
%If (Qt_4_2_0 -)

class QStyleOptionGraphicsItem : QStyleOption
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionType
    {
        Type,
    };

    enum StyleOptionVersion
    {
        Version,
    };

    QRectF exposedRect;
    QMatrix matrix;
    qreal levelOfDetail;
%If (Qt_4_6_0 -)
    static qreal levelOfDetailFromTransform(const QTransform &worldTransform);
%End
    QStyleOptionGraphicsItem();
    QStyleOptionGraphicsItem(const QStyleOptionGraphicsItem &other);
};

%End
%If (Qt_4_3_0 - Qt_5_0_0)

class QStyleOptionDockWidgetV2 : QStyleOptionDockWidget
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    bool verticalTitleBar;
    QStyleOptionDockWidgetV2();
    QStyleOptionDockWidgetV2(const QStyleOptionDockWidgetV2 &other);
    QStyleOptionDockWidgetV2(const QStyleOptionDockWidget &other);
};

%End
%If (Qt_4_3_0 - Qt_5_0_0)

class QStyleOptionViewItemV3 : QStyleOptionViewItemV2
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    QLocale locale;
    const QWidget *widget;
    QStyleOptionViewItemV3();
    QStyleOptionViewItemV3(const QStyleOptionViewItemV3 &other);
    QStyleOptionViewItemV3(const QStyleOptionViewItem &other);
};

%End
%If (Qt_4_3_0 - Qt_5_0_0)

class QStyleOptionToolBoxV2 : QStyleOptionToolBox
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    enum TabPosition
    {
        Beginning,
        Middle,
        End,
        OnlyOneTab,
    };

    enum SelectedPosition
    {
        NotAdjacent,
        NextIsSelected,
        PreviousIsSelected,
    };

    QStyleOptionToolBoxV2::TabPosition position;
    QStyleOptionToolBoxV2::SelectedPosition selectedPosition;
    QStyleOptionToolBoxV2();
    QStyleOptionToolBoxV2(const QStyleOptionToolBoxV2 &other);
    QStyleOptionToolBoxV2(const QStyleOptionToolBox &other);
};

%End
%If (Qt_4_3_0 -)

class QStyleHintReturnVariant : QStyleHintReturn
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionType
    {
        Type,
    };

    enum StyleOptionVersion
    {
        Version,
    };

    QStyleHintReturnVariant();
%If (Qt_5_0_0 -)
    ~QStyleHintReturnVariant();
%End
    QVariant variant;
};

%End
%If (Qt_4_4_0 - Qt_5_0_0)

class QStyleOptionViewItemV4 : QStyleOptionViewItemV3
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    enum ViewItemPosition
    {
        Invalid,
        Beginning,
        Middle,
        End,
        OnlyOne,
    };

    QModelIndex index;
    Qt::CheckState checkState;
    QIcon icon;
    QString text;
    QStyleOptionViewItemV4::ViewItemPosition viewItemPosition;
    QBrush backgroundBrush;
    QStyleOptionViewItemV4();
    QStyleOptionViewItemV4(const QStyleOptionViewItemV4 &other);
    QStyleOptionViewItemV4(const QStyleOptionViewItem &other);
};

%End
%If (Qt_4_5_0 - Qt_5_0_0)

class QStyleOptionFrameV3 : QStyleOptionFrameV2
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    QFrame::Shape frameShape;
    uint unused;
    QStyleOptionFrameV3();
    QStyleOptionFrameV3(const QStyleOptionFrameV3 &other);
    QStyleOptionFrameV3(const QStyleOptionFrame &other);
};

%End
%If (Qt_4_5_0 - Qt_5_0_0)

class QStyleOptionTabBarBaseV2 : QStyleOptionTabBarBase
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    bool documentMode;
    QStyleOptionTabBarBaseV2();
    QStyleOptionTabBarBaseV2(const QStyleOptionTabBarBaseV2 &other);
    QStyleOptionTabBarBaseV2(const QStyleOptionTabBarBase &other);
};

%End
%If (Qt_4_5_0 - Qt_5_0_0)

class QStyleOptionTabV3 : QStyleOptionTabV2
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    bool documentMode;
    QSize leftButtonSize;
    QSize rightButtonSize;
    QStyleOptionTabV3();
    QStyleOptionTabV3(const QStyleOptionTabV3 &other);
    QStyleOptionTabV3(const QStyleOptionTabV2 &other);
    QStyleOptionTabV3(const QStyleOptionTab &other);
};

%End
%If (Qt_4_6_0 - Qt_5_0_0)

class QStyleOptionTabWidgetFrameV2 : QStyleOptionTabWidgetFrame
{
%TypeHeaderCode
#include <qstyleoption.h>
%End

public:
    enum StyleOptionVersion
    {
        Version,
    };

    QRect tabBarRect;
    QRect selectedTabRect;
    QStyleOptionTabWidgetFrameV2();
    QStyleOptionTabWidgetFrameV2(const QStyleOptionTabWidgetFrameV2 &other);
    QStyleOptionTabWidgetFrameV2(const QStyleOptionTabWidgetFrame &other);
};

%End
