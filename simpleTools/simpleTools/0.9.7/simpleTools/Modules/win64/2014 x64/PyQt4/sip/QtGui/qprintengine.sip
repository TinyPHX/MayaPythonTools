// qprintengine.sip generated by MetaSIP on Fri Mar  1 21:46:00 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (PyQt_Printer)

class QPrintEngine
{
%TypeHeaderCode
#include <qprintengine.h>
%End

public:
    virtual ~QPrintEngine();

    enum PrintEnginePropertyKey
    {
        PPK_CollateCopies,
        PPK_ColorMode,
        PPK_Creator,
        PPK_DocumentName,
        PPK_FullPage,
        PPK_NumberOfCopies,
        PPK_Orientation,
        PPK_OutputFileName,
        PPK_PageOrder,
        PPK_PageRect,
        PPK_PageSize,
        PPK_PaperRect,
        PPK_PaperSource,
        PPK_PrinterName,
        PPK_PrinterProgram,
        PPK_Resolution,
        PPK_SelectionOption,
        PPK_SupportedResolutions,
        PPK_WindowsPageSize,
        PPK_FontEmbedding,
%If (- Qt_5_0_0)
        PPK_SuppressSystemPrintStatus,
%End
%If (Qt_4_2_0 -)
        PPK_Duplex,
%End
%If (Qt_4_3_0 -)
        PPK_PaperSources,
%End
%If (Qt_4_4_0 -)
        PPK_CustomPaperSize,
%End
%If (Qt_4_4_0 -)
        PPK_PageMargins,
%End
%If (Qt_4_4_0 -)
        PPK_PaperSize,
%End
%If (Qt_4_7_0 -)
        PPK_CopyCount,
%End
%If (Qt_4_7_0 -)
        PPK_SupportsMultipleCopies,
%End
        PPK_CustomBase,
    };

    virtual void setProperty(QPrintEngine::PrintEnginePropertyKey key, const QVariant &value) = 0;
    virtual QVariant property(QPrintEngine::PrintEnginePropertyKey key) const = 0;
    virtual bool newPage() = 0;
    virtual bool abort() = 0;
    virtual int metric(QPaintDevice::PaintDeviceMetric) const = 0;
    virtual QPrinter::PrinterState printerState() const = 0;
};

%End
