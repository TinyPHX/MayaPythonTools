// qactiongroup.sip generated by MetaSIP on Fri Mar  1 21:45:58 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QActionGroup : QObject
{
%TypeHeaderCode
#include <qactiongroup.h>
%End

public:
    explicit QActionGroup(QObject *parent /TransferThis/);
    virtual ~QActionGroup();
    QAction *addAction(QAction *a /Transfer/);
    QAction *addAction(const QString &text) /Transfer/;
    QAction *addAction(const QIcon &icon, const QString &text) /Transfer/;
    void removeAction(QAction *a /TransferBack/);
    QList<QAction*> actions() const;
    QAction *checkedAction() const;
    bool isExclusive() const;
    bool isEnabled() const;
    bool isVisible() const;

public slots:
    void setEnabled(bool);
    void setDisabled(bool b);
    void setVisible(bool);
    void setExclusive(bool);

signals:
    void triggered(QAction *);
%If (- Qt_5_0_0)
    void selected(QAction *);
%End
    void hovered(QAction *);

private:
    QActionGroup(const QActionGroup &);
};
