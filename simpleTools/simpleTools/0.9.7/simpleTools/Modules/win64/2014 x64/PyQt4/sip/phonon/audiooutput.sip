// audiooutput.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <audiooutput.h>
%End

    class AudioOutput : Phonon::AbstractAudioOutput
    {
%TypeHeaderCode
#include <audiooutput.h>
%End

    public:
        AudioOutput(Phonon::Category category, QObject *parent /TransferThis/ = 0);
        explicit AudioOutput(QObject *parent /TransferThis/ = 0);
        QString name() const;
        qreal volume() const;
        qreal volumeDecibel() const;
        Phonon::Category category() const;
        Phonon::AudioOutputDevice outputDevice() const;
        bool isMuted() const;

    public slots:
        void setName(const QString &newName);
        void setVolume(qreal newVolume);
        void setVolumeDecibel(qreal newVolumeDecibel);
        bool setOutputDevice(const Phonon::AudioOutputDevice &newAudioOutputDevice);
        void setMuted(bool mute);

    signals:
        void volumeChanged(qreal newVolume);
        void mutedChanged(bool);
        void outputDeviceChanged(const Phonon::AudioOutputDevice &newAudioOutputDevice);
    };
};

%End
