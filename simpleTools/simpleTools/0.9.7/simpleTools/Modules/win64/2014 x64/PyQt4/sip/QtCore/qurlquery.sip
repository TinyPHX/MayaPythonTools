// qurlquery.sip generated by MetaSIP on Fri Mar  1 21:45:58 2013
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_0_0 -)

class QUrlQuery
{
%TypeHeaderCode
#include <qurlquery.h>
%End

public:
    QUrlQuery();
    explicit QUrlQuery(const QUrl &url);
    explicit QUrlQuery(const QString &queryString);
    QUrlQuery(const QUrlQuery &other);
    ~QUrlQuery();
    bool operator==(const QUrlQuery &other) const;
    bool operator!=(const QUrlQuery &other) const;
    void swap(QUrlQuery &other);
    bool isEmpty() const;
    bool isDetached() const;
    void clear();
    QString query(QFlags<QUrl::ComponentFormattingOption> options = QUrl::PrettyDecoded) const;
    void setQuery(const QString &queryString);
    QString toString(QFlags<QUrl::ComponentFormattingOption> options = QUrl::PrettyDecoded) const;
    void setQueryDelimiters(QChar valueDelimiter, QChar pairDelimiter);
    QChar queryValueDelimiter() const;
    QChar queryPairDelimiter() const;
    void setQueryItems(const QList<QPair<QString, QString>> &query);
    QList<QPair<QString, QString>> queryItems(QFlags<QUrl::ComponentFormattingOption> options = QUrl::PrettyDecoded) const;
    bool hasQueryItem(const QString &key) const;
    void addQueryItem(const QString &key, const QString &value);
    void removeQueryItem(const QString &key);
    QString queryItemValue(const QString &key, QFlags<QUrl::ComponentFormattingOption> options = QUrl::PrettyDecoded) const;
    QStringList allQueryItemValues(const QString &key, QFlags<QUrl::ComponentFormattingOption> options = QUrl::PrettyDecoded) const;
    void removeAllQueryItems(const QString &key);
    static QChar defaultQueryValueDelimiter();
    static QChar defaultQueryPairDelimiter();
};

%End
