// qlcdnumber.sip generated by MetaSIP on Fri Mar  1 21:45:59 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QLCDNumber : QFrame
{
%TypeHeaderCode
#include <qlcdnumber.h>
%End

public:
    explicit QLCDNumber(QWidget *parent /TransferThis/ = 0);
    QLCDNumber(uint numDigits, QWidget *parent /TransferThis/ = 0);
    virtual ~QLCDNumber();

    enum Mode
    {
        Hex,
        Dec,
        Oct,
        Bin,
    };

    enum SegmentStyle
    {
        Outline,
        Filled,
        Flat,
    };

    bool smallDecimalPoint() const;
%If (Qt_4_6_0 -)
    int digitCount() const;
%End
%If (Qt_4_6_0 -)
    void setDigitCount(int nDigits);
%End
%If (- Qt_5_0_0)
    int numDigits() const;
%End
%If (- Qt_5_0_0)
    void setNumDigits(int nDigits);
%End
%If (Qt_5_0_0 -)
    void setNumDigits(int nDigits);
%MethodCode
        // This is implemented for Qt v5 so that .ui files created with Designer for Qt v4 will continue to work.
        sipCpp->setDigitCount(a0);
%End

%End
    bool checkOverflow(double num /Constrained/) const;
    bool checkOverflow(int num) const;
    QLCDNumber::Mode mode() const;
    void setMode(QLCDNumber::Mode);
    QLCDNumber::SegmentStyle segmentStyle() const;
    void setSegmentStyle(QLCDNumber::SegmentStyle);
    double value() const;
    int intValue() const;
    virtual QSize sizeHint() const;
    void display(const QString &str);
    void display(double num /Constrained/);
    void display(int num);
    void setHexMode();
    void setDecMode();
    void setOctMode();
    void setBinMode();
    void setSmallDecimalPoint(bool);

signals:
    void overflow();

protected:
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);

private:
    QLCDNumber(const QLCDNumber &);
};
