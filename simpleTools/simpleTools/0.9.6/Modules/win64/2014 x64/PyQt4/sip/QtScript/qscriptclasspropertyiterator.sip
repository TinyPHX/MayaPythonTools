// qscriptclasspropertyiterator.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the QtScript Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

class QScriptClassPropertyIterator
{
%TypeHeaderCode
#include <qscriptclasspropertyiterator.h>
%End

public:
    virtual ~QScriptClassPropertyIterator();
    QScriptValue object() const;
    virtual bool hasNext() const = 0;
    virtual void next() = 0;
    virtual bool hasPrevious() const = 0;
    virtual void previous() = 0;
    virtual void toFront() = 0;
    virtual void toBack() = 0;
    virtual QScriptString name() const = 0;
    virtual uint id() const;
    virtual QFlags<QScriptValue::PropertyFlag> flags() const;

protected:
    QScriptClassPropertyIterator(const QScriptValue &object);

private:
    QScriptClassPropertyIterator(const QScriptClassPropertyIterator &);
};

%End
