// qfontdialog.sip generated by MetaSIP on Fri Mar  1 21:45:58 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qfontdialog.h>
%End

class QFontDialog : QDialog
{
%TypeHeaderCode
#include <qfontdialog.h>
%End

public:
%If (Qt_4_5_0 -)

    enum FontDialogOption
    {
        NoButtons,
        DontUseNativeDialog,
    };

%End
%If (Qt_4_5_0 -)
    typedef QFlags<QFontDialog::FontDialogOption> FontDialogOptions;
%End
%If (Qt_4_5_0 -)
    explicit QFontDialog(QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    QFontDialog(const QFont &initial, QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    virtual ~QFontDialog();
%End
%If (Qt_5_0_0 -)
    static QFont getFont(bool *ok, const QFont &initial, QWidget *parent = 0, const QString &caption = QString(), QFlags<QFontDialog::FontDialogOption> options = 0) /ReleaseGIL/;
%End
%If (Qt_4_5_0 - Qt_5_0_0)
    static QFont getFont(bool *ok, const QFont &initial, QWidget *parent, const QString &title, QFlags<QFontDialog::FontDialogOption> options) /ReleaseGIL/;
%End
%If (Qt_4_2_0 - Qt_5_0_0)
    static QFont getFont(bool *ok, const QFont &def, QWidget *parent, const QString &caption) /ReleaseGIL/;
%End
%If (- Qt_5_0_0)
    static QFont getFont(bool *ok, const QFont &initial, QWidget *parent = 0) /ReleaseGIL/;
%End
    static QFont getFont(bool *ok, QWidget *parent = 0) /ReleaseGIL/;

protected:
%If (Qt_4_3_0 -)
    virtual void changeEvent(QEvent *e);
%End
%If (Qt_4_5_0 -)
    virtual void done(int result);
%End
%If (Qt_5_0_0 -)
    virtual bool eventFilter(QObject *object, QEvent *event);
%End

private:
%If (- Qt_5_0_0)
    virtual bool eventFilter(QObject *, QEvent *);
%End
%If (Qt_4_2_0 - Qt_4_5_0)
    QFontDialog(QWidget *parent /TransferThis/ = 0, bool modal = false, Qt::WindowFlags f = 0);
%End
%If (- Qt_4_2_0)
    QFontDialog(QWidget *parent /TransferThis/ = 0, bool modal = false, Qt::WFlags f = 0);
%End
    QFontDialog(const QFontDialog &);
%If (- Qt_4_5_0)
    virtual ~QFontDialog();
%End

public:
%If (Qt_4_5_0 -)
    void setCurrentFont(const QFont &font);
%End
%If (Qt_4_5_0 -)
    QFont currentFont() const;
%End
%If (Qt_4_5_0 -)
    QFont selectedFont() const;
%End
%If (Qt_4_5_0 -)
    void setOption(QFontDialog::FontDialogOption option, bool on = true);
%End
%If (Qt_4_5_0 -)
    bool testOption(QFontDialog::FontDialogOption option) const;
%End
%If (Qt_4_5_0 -)
    void setOptions(QFlags<QFontDialog::FontDialogOption> options);
%End
%If (Qt_4_5_0 -)
    QFlags<QFontDialog::FontDialogOption> options() const;
%End
%If (Qt_5_0_0 -)
    virtual void open();
%End
%If (Qt_4_5_0 - Qt_5_0_0)
    void open();
%End
%If (Qt_4_5_0 -)
    void open(SIP_RXOBJ_CON receiver, SIP_SLOT_CON() member) [void (QObject *receiver, const char *member)];
%End
%If (Qt_4_5_0 -)
    virtual void setVisible(bool visible);
%End

signals:
%If (Qt_4_5_0 -)
    void currentFontChanged(const QFont &font);
%End
%If (Qt_4_5_0 -)
    void fontSelected(const QFont &font);
%End
};

%If (Qt_4_5_0 -)
QFlags<QFontDialog::FontDialogOption> operator|(QFontDialog::FontDialogOption f1, QFlags<QFontDialog::FontDialogOption> f2);
%End
