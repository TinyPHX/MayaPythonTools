// qsqlrecord.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the QtSql Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QSqlRecord
{
%TypeHeaderCode
#include <qsqlrecord.h>
%End

public:
    QSqlRecord();
    QSqlRecord(const QSqlRecord &other);
    ~QSqlRecord();
    bool operator==(const QSqlRecord &other) const;
    bool operator!=(const QSqlRecord &other) const;
    QVariant value(int i) const;
    QVariant value(const QString &name) const;
    void setValue(int i, const QVariant &val);
    void setValue(const QString &name, const QVariant &val);
    void setNull(int i);
    void setNull(const QString &name);
    bool isNull(int i) const;
    bool isNull(const QString &name) const;
    int indexOf(const QString &name) const;
    QString fieldName(int i) const;
    QSqlField field(int i) const;
    QSqlField field(const QString &name) const;
    bool isGenerated(int i) const;
    bool isGenerated(const QString &name) const;
    void setGenerated(const QString &name, bool generated);
    void setGenerated(int i, bool generated);
    void append(const QSqlField &field);
    void replace(int pos, const QSqlField &field);
    void insert(int pos, const QSqlField &field);
    void remove(int pos);
    bool isEmpty() const;
    bool contains(const QString &name) const;
    void clear();
    void clearValues();
    int count() const /__len__/;
};
