// qrubberband.sip generated by MetaSIP on Fri Mar  1 21:46:00 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QRubberBand : QWidget
{
%TypeHeaderCode
#include <qrubberband.h>
%End

public:
    enum Shape
    {
        Line,
        Rectangle,
    };

    QRubberBand(QRubberBand::Shape, QWidget *parent /TransferThis/ = 0);
    virtual ~QRubberBand();
    QRubberBand::Shape shape() const;
    void setGeometry(const QRect &r);
    void setGeometry(int ax, int ay, int aw, int ah);
    void move(const QPoint &p);
    void move(int ax, int ay);
    void resize(int w, int h);
    void resize(const QSize &s);

protected:
%If (Qt_4_3_0 -)
    void initStyleOption(QStyleOptionRubberBand *option) const;
%End
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);
    virtual void changeEvent(QEvent *);
    virtual void showEvent(QShowEvent *);
    virtual void resizeEvent(QResizeEvent *);
    virtual void moveEvent(QMoveEvent *);
};
