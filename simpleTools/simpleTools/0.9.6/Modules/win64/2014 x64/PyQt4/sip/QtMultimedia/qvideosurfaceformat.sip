// qvideosurfaceformat.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_6_0 -)

class QVideoSurfaceFormat
{
%TypeHeaderCode
#include <qvideosurfaceformat.h>
%End

public:
    enum Direction
    {
        TopToBottom,
        BottomToTop,
    };

    enum YCbCrColorSpace
    {
        YCbCr_Undefined,
        YCbCr_BT601,
        YCbCr_BT709,
        YCbCr_xvYCC601,
        YCbCr_xvYCC709,
        YCbCr_JPEG,
    };

    QVideoSurfaceFormat();
    QVideoSurfaceFormat(const QSize &size, QVideoFrame::PixelFormat format, QAbstractVideoBuffer::HandleType type = QAbstractVideoBuffer::NoHandle);
    QVideoSurfaceFormat(const QVideoSurfaceFormat &format);
    ~QVideoSurfaceFormat();
    bool operator==(const QVideoSurfaceFormat &format) const;
    bool operator!=(const QVideoSurfaceFormat &format) const;
    bool isValid() const;
    QVideoFrame::PixelFormat pixelFormat() const;
    QAbstractVideoBuffer::HandleType handleType() const;
    QSize frameSize() const;
    void setFrameSize(const QSize &size);
    void setFrameSize(int width, int height);
    int frameWidth() const;
    int frameHeight() const;
    QRect viewport() const;
    void setViewport(const QRect &viewport);
    QVideoSurfaceFormat::Direction scanLineDirection() const;
    void setScanLineDirection(QVideoSurfaceFormat::Direction direction);
    qreal frameRate() const;
    void setFrameRate(qreal rate);
    QSize pixelAspectRatio() const;
    void setPixelAspectRatio(const QSize &ratio);
    void setPixelAspectRatio(int width, int height);
    QVideoSurfaceFormat::YCbCrColorSpace yCbCrColorSpace() const;
    void setYCbCrColorSpace(QVideoSurfaceFormat::YCbCrColorSpace colorSpace);
    QSize sizeHint() const;
    QList<QByteArray> propertyNames() const;
    QVariant property(const char *name) const;
    void setProperty(const char *name, const QVariant &value);
};

%End
