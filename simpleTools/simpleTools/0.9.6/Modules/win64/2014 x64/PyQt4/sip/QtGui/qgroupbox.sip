// qgroupbox.sip generated by MetaSIP on Fri Mar  1 21:45:59 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QGroupBox : QWidget
{
%TypeHeaderCode
#include <qgroupbox.h>
%End

public:
    explicit QGroupBox(QWidget *parent /TransferThis/ = 0);
    QGroupBox(const QString &title, QWidget *parent /TransferThis/ = 0);
    virtual ~QGroupBox();
    QString title() const;
    void setTitle(const QString &);
    Qt::Alignment alignment() const;
    void setAlignment(int);
    virtual QSize minimumSizeHint() const;
    bool isFlat() const;
    void setFlat(bool b);
    bool isCheckable() const;
    void setCheckable(bool b);
    bool isChecked() const;

public slots:
    void setChecked(bool b);

signals:
%If (Qt_4_2_0 -)
    void clicked(bool checked = false);
%End
    void toggled(bool);

protected:
%If (Qt_4_3_0 -)
    void initStyleOption(QStyleOptionGroupBox *option) const;
%End
    virtual bool event(QEvent *);
    virtual void childEvent(QChildEvent *);
    virtual void resizeEvent(QResizeEvent *);
    virtual void paintEvent(QPaintEvent *);
    virtual void focusInEvent(QFocusEvent *);
    virtual void changeEvent(QEvent *);
    virtual void mousePressEvent(QMouseEvent *event);
    virtual void mouseMoveEvent(QMouseEvent *event);
    virtual void mouseReleaseEvent(QMouseEvent *event);

private:
    QGroupBox(const QGroupBox &);
};
