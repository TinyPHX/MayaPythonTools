// videoplayer.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <videoplayer.h>
%End

    class VideoPlayer : QWidget
    {
%TypeHeaderCode
#include <videoplayer.h>
%End

    public:
        VideoPlayer(Phonon::Category category, QWidget *parent /TransferThis/ = 0);
%If (Qt_4_5_0 -)
        VideoPlayer(QWidget *parent /TransferThis/ = 0);
%End
        virtual ~VideoPlayer();
        qint64 totalTime() const;
        qint64 currentTime() const;
        float volume() const;
        bool isPlaying() const;
        bool isPaused() const;

    public slots:
        void load(const Phonon::MediaSource &source);
        void play(const Phonon::MediaSource &source);
        void play();
        void pause();
        void stop();
        void seek(qint64 ms);
        void setVolume(float volume);

    public:
        Phonon::MediaObject *mediaObject() const;
        Phonon::AudioOutput *audioOutput() const;
        Phonon::VideoWidget *videoWidget() const;

    signals:
        void finished();
    };
};

%End
