// qssl.sip generated by MetaSIP on Fri Mar  1 21:46:01 2013
//
// This file is part of the QtNetwork Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_3_0 -)
%ModuleCode
#include <qssl.h>
%End
%End

%If (Qt_4_3_0 -)
%If (PyQt_OpenSSL)

namespace QSsl
{
%TypeHeaderCode
#include <qssl.h>
%End

    enum KeyType
    {
        PrivateKey,
        PublicKey,
    };

    enum EncodingFormat
    {
        Pem,
        Der,
    };

    enum KeyAlgorithm
    {
%If (Qt_5_0_0 -)
        Opaque,
%End
        Rsa,
        Dsa,
    };

%If (Qt_5_0_0 -)

    enum AlternativeNameEntryType
    {
        EmailEntry,
        DnsEntry,
    };

%End
%If (Qt_5_0_0 -)
%If (PyQt_Deprecated_5_0)
    typedef QSsl::AlternativeNameEntryType AlternateNameEntryType;
%End
%End
%If (- Qt_5_0_0)

    enum AlternateNameEntryType
    {
        EmailEntry,
        DnsEntry,
    };

%End

    enum SslProtocol
    {
        UnknownProtocol,
        SslV3,
        SslV2,
%If (PyQt_Deprecated_5_0)
        TlsV1,
%End
%If (Qt_5_0_0 -)
        TlsV1_0,
%End
%If (Qt_5_0_0 -)
        TlsV1_1,
%End
%If (Qt_5_0_0 -)
        TlsV1_2,
%End
        AnyProtocol,
%If (Qt_4_8_0 -)
        TlsV1SslV3,
%End
%If (Qt_4_8_0 -)
        SecureProtocols,
%End
    };

%If (Qt_4_8_0 -)

    enum SslOption
    {
        SslOptionDisableEmptyFragments,
        SslOptionDisableSessionTickets,
        SslOptionDisableCompression,
        SslOptionDisableServerNameIndication,
        SslOptionDisableLegacyRenegotiation,
    };

%End
%If (Qt_4_8_0 -)
    typedef QFlags<QSsl::SslOption> SslOptions;
%End
};

%End
%End
%If (Qt_4_8_0 -)
%If (PyQt_OpenSSL)
QFlags<QSsl::SslOption> operator|(QSsl::SslOption f1, QFlags<QSsl::SslOption> f2);
%End
%End
%If (Qt_4_8_0 -)
%If (PyQt_OpenSSL)
QFlags<QSsl::SslOption> operator|(QSsl::SslOption f1, QSsl::SslOption f2);
%End
%End
