// qgraphicsitemanimation.sip generated by MetaSIP on Fri Mar  1 21:45:59 2013
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_2_0 -)

class QGraphicsItemAnimation : QObject
{
%TypeHeaderCode
#include <qgraphicsitemanimation.h>
%End

public:
    QGraphicsItemAnimation(QObject *parent /TransferThis/ = 0);
    virtual ~QGraphicsItemAnimation();
    QGraphicsItem *item() const;
    void setItem(QGraphicsItem *item /KeepReference/);
    QTimeLine *timeLine() const;
    void setTimeLine(QTimeLine *timeLine /KeepReference/);
    QPointF posAt(qreal step) const;
    void setPosAt(qreal step, const QPointF &pos);
    QMatrix matrixAt(qreal step) const;
    qreal rotationAt(qreal step) const;
    void setRotationAt(qreal step, qreal angle);
    qreal xTranslationAt(qreal step) const;
    qreal yTranslationAt(qreal step) const;
    void setTranslationAt(qreal step, qreal dx, qreal dy);
    qreal verticalScaleAt(qreal step) const;
    qreal horizontalScaleAt(qreal step) const;
    void setScaleAt(qreal step, qreal sx, qreal sy);
    qreal verticalShearAt(qreal step) const;
    qreal horizontalShearAt(qreal step) const;
    void setShearAt(qreal step, qreal sh, qreal sv);
    void clear();

public slots:
    void reset();
    void setStep(qreal x);

protected:
    virtual void afterAnimationStep(qreal step);
    virtual void beforeAnimationStep(qreal step);

public:
%If (Qt_5_0_0 -)
    QList<QPair<double, QPointF>> posList() const;
%End
%If (Qt_4_3_0 - Qt_5_0_0)
    QList<QPair<qreal, QPointF>> posList() const;
%End
%If (Qt_5_0_0 -)
    QList<QPair<double, double>> rotationList() const;
%End
%If (Qt_4_3_0 - Qt_5_0_0)
    QList<QPair<qreal, qreal>> rotationList() const;
%End
%If (Qt_5_0_0 -)
    QList<QPair<double, QPointF>> translationList() const;
%End
%If (Qt_4_3_0 - Qt_5_0_0)
    QList<QPair<qreal, QPointF>> translationList() const;
%End
%If (Qt_5_0_0 -)
    QList<QPair<double, QPointF>> scaleList() const;
%End
%If (Qt_4_3_0 - Qt_5_0_0)
    QList<QPair<qreal, QPointF>> scaleList() const;
%End
%If (Qt_5_0_0 -)
    QList<QPair<double, QPointF>> shearList() const;
%End
%If (Qt_4_3_0 - Qt_5_0_0)
    QList<QPair<qreal, QPointF>> shearList() const;
%End

private:
    QGraphicsItemAnimation(const QGraphicsItemAnimation &);
};

%End
