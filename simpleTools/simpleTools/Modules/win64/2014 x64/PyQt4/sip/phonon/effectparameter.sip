// effectparameter.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)
%ModuleCode
#include <effectparameter.h>
%End
%End

%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <effectparameter.h>
%End

    class EffectParameter
    {
%TypeHeaderCode
#include <effectparameter.h>
%End

    public:
        enum Hint
        {
            ToggledHint,
            LogarithmicHint,
            IntegerHint,
        };

        typedef QFlags<Phonon::EffectParameter::Hint> Hints;
        EffectParameter(int parameterId, const QString &name, QFlags<Phonon::EffectParameter::Hint> hints, const QVariant &defaultValue, const QVariant &min /DocValue="Py_v3:None"/ = QVariant(), const QVariant &max /DocValue="Py_v3:None"/ = QVariant(), const QVariantList &values /DocValue="[]"/ = QVariantList(), const QString &description /DocValue="Py_v3:''"/ = QString());
        EffectParameter(const Phonon::EffectParameter &rhs);
        ~EffectParameter();
        const QString &name() const;
        const QString &description() const;
        QVariant::Type type() const;
        bool isLogarithmicControl() const;
        QVariant minimumValue() const;
        QVariant maximumValue() const;
        QVariant defaultValue() const;
        QVariantList possibleValues() const;
        long __hash__() const;
%MethodCode
            sipRes = qHash(*sipCpp);
%End
    };
};

%End
%If (Qt_4_4_0 -)
QFlags<Phonon::EffectParameter::Hint> operator|(Phonon::EffectParameter::Hint f1, QFlags<Phonon::EffectParameter::Hint> f2);
%End
