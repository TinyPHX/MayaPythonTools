// path.sip generated by MetaSIP on Fri Mar  1 21:46:02 2013
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// If you are unsure which license is appropriate for your use, please
// contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <path.h>
%End

    class Path
    {
%TypeHeaderCode
#include <path.h>
%End

    public:
        Path();
        Path(const Phonon::Path &);
        ~Path();
        bool isValid() const;
        Phonon::Effect *insertEffect(const Phonon::EffectDescription &desc, Phonon::Effect *before = 0);
        bool insertEffect(Phonon::Effect *newEffect, Phonon::Effect *before = 0);
        bool removeEffect(Phonon::Effect *effect);
        QList<Phonon::Effect*> effects() const;
        bool reconnect(Phonon::MediaNode *source, Phonon::MediaNode *sink);
        bool disconnect();
        bool operator==(const Phonon::Path &p) const;
        bool operator!=(const Phonon::Path &p) const;
%If (Qt_4_5_0 -)
        Phonon::MediaNode *source() const;
%End
%If (Qt_4_5_0 -)
        Phonon::MediaNode *sink() const;
%End
    };

    Phonon::Path createPath(Phonon::MediaNode *source, Phonon::MediaNode *sink);
};

%End
